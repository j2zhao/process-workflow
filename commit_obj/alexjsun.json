[{"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638134650.4722922 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:24:26 2021 -0600", "msg": "1638134650.4722922_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638134650.4722922 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134555.586296 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"POSTED_SPEED_LIMIT\")"], "sub": ["-    controlled_corr_categorical(cdf, \"ROADWAY_SURFACE_COND\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:24:07 2021 -0600", "msg": "1638134555.586296_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"POSTED_SPEED_LIMIT\")"], "sub": ["-    controlled_corr_categorical(cdf, \"ROADWAY_SURFACE_COND\")"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"ROADWAY_SURFACE_COND\")"], "sub": ["-    controlled_corr_categorical(cdf, \"TRAFFICWAY_TYPE\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:22:35 2021 -0600", "msg": "1638134555.586296_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"ROADWAY_SURFACE_COND\")"], "sub": ["-    controlled_corr_categorical(cdf, \"TRAFFICWAY_TYPE\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134428.287581 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:21:50 2021 -0600", "msg": "1638134428.287581_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134428.287581 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"TRAFFICWAY_TYPE\")"], "sub": ["-    controlled_corr_categorical(cdf, \"LIGHTING_CONDITION\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:20:28 2021 -0600", "msg": "1638134428.287581_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"TRAFFICWAY_TYPE\")"], "sub": ["-    controlled_corr_categorical(cdf, \"LIGHTING_CONDITION\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134394.267497 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:20:14 2021 -0600", "msg": "1638134394.267497_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134394.267497 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"LIGHTING_CONDITION\")"], "sub": ["-    controlled_corr_categorical(cdf, \"WEATHER_CONDITION\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:19:54 2021 -0600", "msg": "1638134394.267497_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    controlled_corr_categorical(cdf, \"LIGHTING_CONDITION\")"], "sub": ["-    controlled_corr_categorical(cdf, \"WEATHER_CONDITION\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134320.752766 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:19:41 2021 -0600", "msg": "1638134320.752766_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638134320.752766 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def controlled_corr_numerical(df, col):", "+def controlled_corr_categorical(df, col):", "+  x, y = 2, 2", "+  fig, axs = plt.subplots(y, x)", "+  vals = df[col].unique()", "+  k = 0", "+  tmp = df[df[col] == vals[k]]", "+  for i in range(y):", "+    for j in range(x):", "+      axs[i][j].scatter(tmp[\"LONGITUDE\"], tmp[\"LATITUDE\"], alpha=0.1, s=0.25)", "+      axs[i][j].set_title(f'Locations of Crashes - {vals[k]}')", "+      k += 1", "+      tmp = df[df[col] == vals[k]]", "+  fig.tight_layout()", "+  plt.show()", "+", "+    controlled_corr_categorical(cdf, \"WEATHER_CONDITION\")"], "sub": ["-def controlled_corr(df, col):", "-    controlled_corr(cdf, \"CRASH_MONTH\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:18:40 2021 -0600", "msg": "1638134320.752766_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def controlled_corr_numerical(df, col):", "+def controlled_corr_categorical(df, col):", "+  x, y = 2, 2", "+  fig, axs = plt.subplots(y, x)", "+  vals = df[col].unique()", "+  k = 0", "+  tmp = df[df[col] == vals[k]]", "+  for i in range(y):", "+    for j in range(x):", "+      axs[i][j].scatter(tmp[\"LONGITUDE\"], tmp[\"LATITUDE\"], alpha=0.1, s=0.25)", "+      axs[i][j].set_title(f'Locations of Crashes - {vals[k]}')", "+      k += 1", "+      tmp = df[df[col] == vals[k]]", "+  fig.tight_layout()", "+  plt.show()", "+", "+    controlled_corr_categorical(cdf, \"WEATHER_CONDITION\")"], "sub": ["-def controlled_corr(df, col):", "-    controlled_corr(cdf, \"CRASH_MONTH\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133580.784876 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:06:30 2021 -0600", "msg": "1638133580.784876_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133580.784876 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133540.258681 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 2, 2", "+  k = 9"], "sub": ["-  x, y = 3, 3", "-  k = 1"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:06:18 2021 -0600", "msg": "1638133540.258681_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 2, 2", "+  k = 9"], "sub": ["-  x, y = 3, 3", "-  k = 1"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638133514.678108 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 3, 3", "+  k = 1"], "sub": ["-  x, y = 2, 2", "-  k = 0"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:05:38 2021 -0600", "msg": "1638133514.678108_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 3, 3", "+  k = 1"], "sub": ["-  x, y = 2, 2", "-  k = 0"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def controlled_corr(df, col):", "+  k = 0", "+  tmp = df[df[col] == k]", "+      axs[i][j].set_title(f'Locations of Crashes - {col} {k}')", "+      tmp = df[df[col] == k]", "+    controlled_corr(cdf, \"CRASH_MONTH\")"], "sub": ["-def hour_controlled_corr(df):", "-  k = 15", "-  tmp = df[df['CRASH_HOUR'] == k]", "-      axs[i][j].set_title(f'Locations of Crashes - Hour {k}')", "-      tmp = df[df['CRASH_HOUR'] == k]", "-    hour_controlled_corr(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:05:14 2021 -0600", "msg": "1638133514.678108_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def controlled_corr(df, col):", "+  k = 0", "+  tmp = df[df[col] == k]", "+      axs[i][j].set_title(f'Locations of Crashes - {col} {k}')", "+      tmp = df[df[col] == k]", "+    controlled_corr(cdf, \"CRASH_MONTH\")"], "sub": ["-def hour_controlled_corr(df):", "-  k = 15", "-  tmp = df[df['CRASH_HOUR'] == k]", "-      axs[i][j].set_title(f'Locations of Crashes - Hour {k}')", "-      tmp = df[df['CRASH_HOUR'] == k]", "-    hour_controlled_corr(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133295.961497 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:01:48 2021 -0600", "msg": "1638133295.961497_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133295.961497 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133205.1434722 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 2, 2", "+  k = 15"], "sub": ["-  x, y = 4, 3", "-  k = 12"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:01:33 2021 -0600", "msg": "1638133205.1434722_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  x, y = 2, 2", "+  k = 15"], "sub": ["-  x, y = 4, 3", "-  k = 12"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638133172.0442061 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  k = 12", "+      tmp = df[df['CRASH_HOUR'] == k]"], "sub": ["-  k = 0"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 15:00:02 2021 -0600", "msg": "1638133172.0442061_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  k = 12", "+      tmp = df[df['CRASH_HOUR'] == k]"], "sub": ["-  k = 0"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638133142.541646 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 14:59:05 2021 -0600", "msg": "1638133142.541646_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638133142.541646 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=0.5)"], "sub": ["-  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=1)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 14:59:02 2021 -0600", "msg": "1638133142.541646_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=0.5)"], "sub": ["-  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=1)"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638133122.6253572 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 14:58:46 2021 -0600", "msg": "1638133122.6253572_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638133122.6253572 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.title('Locations of Crashes')"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# 5. Spurious correlations", "+def hour_controlled_corr(df):", "+  x, y = 4, 3", "+  fig, axs = plt.subplots(y, x)", "+  k = 0", "+  tmp = df[df['CRASH_HOUR'] == k]", "+  for i in range(y):", "+    for j in range(x):", "+      axs[i][j].scatter(tmp[\"LONGITUDE\"], tmp[\"LATITUDE\"], alpha=0.1, s=0.25)", "+      axs[i][j].set_title(f'Locations of Crashes - Hour {k}')", "+      k += 1", "+  fig.tight_layout()", "+  plt.show()", "+", "+    # location_plot(cdf)", "+    hour_controlled_corr(cdf)"], "sub": ["-    location_plot(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 14:58:42 2021 -0600", "msg": "1638133122.6253572_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# 5. Spurious correlations", "+def hour_controlled_corr(df):", "+  x, y = 4, 3", "+  fig, axs = plt.subplots(y, x)", "+  k = 0", "+  tmp = df[df['CRASH_HOUR'] == k]", "+  for i in range(y):", "+    for j in range(x):", "+      axs[i][j].scatter(tmp[\"LONGITUDE\"], tmp[\"LATITUDE\"], alpha=0.1, s=0.25)", "+      axs[i][j].set_title(f'Locations of Crashes - Hour {k}')", "+      k += 1", "+  fig.tight_layout()", "+  plt.show()", "+", "+    # location_plot(cdf)", "+    hour_controlled_corr(cdf)"], "sub": ["-    location_plot(cdf)"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127286.140342 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:21:29 2021 -0600", "msg": "1638127286.140342_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127286.140342 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": [], "sub": ["-  plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127252.5692952 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:21:13 2021 -0600", "msg": "1638127252.5692952_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127252.5692952 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638127228.709672 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:20:38 2021 -0600", "msg": "1638127228.709672_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638127228.709672 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127183.745862 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:19:54 2021 -0600", "msg": "1638127183.745862_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638127183.745862 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=1)", "+  plt.xlabel('LONGITUDE')", "+  plt.ylabel('LATITUDE')", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638127152.260125 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:19:35 2021 -0600", "msg": "1638127152.260125_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638127152.260125 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  # drop rows with 0 latitude and longitude", "+  df = df[(df[\"LATITUDE\"] != 0) & (df[\"LONGITUDE\"] != 0)]", "+"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # drop rows with 0 latitude and longitude", "+  df = df[(df[\"LATITUDE\"] != 0) & (df[\"LONGITUDE\"] != 0)]", "+", "+def location_plot(df):", "+  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=1)", "+  plt.xlabel('LONGITUDE')", "+  plt.ylabel('LATITUDE')", "+  plt.show()", "+", "+    # severity_plot(cdf)", "+    location_plot(cdf)"], "sub": ["-    severity_plot(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 13:19:12 2021 -0600", "msg": "1638127152.260125_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # drop rows with 0 latitude and longitude", "+  df = df[(df[\"LATITUDE\"] != 0) & (df[\"LONGITUDE\"] != 0)]", "+", "+def location_plot(df):", "+  plt.scatter(df[\"LONGITUDE\"], df[\"LATITUDE\"], alpha=0.1, s=1)", "+  plt.xlabel('LONGITUDE')", "+  plt.ylabel('LATITUDE')", "+  plt.show()", "+", "+    # severity_plot(cdf)", "+    location_plot(cdf)"], "sub": ["-    severity_plot(cdf)"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638123983.817046 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:26:28 2021 -0600", "msg": "1638123983.817046_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638123983.817046 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  axs[0].set_title('Injury/Crash Ratio by Weather Condition')", "+  axs[1].set_title('Injury/Crash Ratio by Lighting Condition')", "+  axs[2].set_title('Injury/Crash Ratio by Road Condition')"], "sub": ["-  axs[0].set_title('Crash/Injury Ratio by Weather Condition')", "-  axs[1].set_title('Crash/Injury Ratio by Lighting Condition')", "-  axs[2].set_title('Crash/Injury Ratio by Road Condition')"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:26:23 2021 -0600", "msg": "1638123983.817046_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  axs[0].set_title('Injury/Crash Ratio by Weather Condition')", "+  axs[1].set_title('Injury/Crash Ratio by Lighting Condition')", "+  axs[2].set_title('Injury/Crash Ratio by Road Condition')"], "sub": ["-  axs[0].set_title('Crash/Injury Ratio by Weather Condition')", "-  axs[1].set_title('Crash/Injury Ratio by Lighting Condition')", "-  axs[2].set_title('Crash/Injury Ratio by Road Condition')"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638123925.7032819 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:25:30 2021 -0600", "msg": "1638123925.7032819_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638123925.7032819 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  font = {", "+    'family' : 'DejaVu Sans',", "+    'size' : 7", "+  }", "+  plt.rc('font', **font)", "+  fig, axs = plt.subplots(3, 1)", "+", "+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  weather_ratio = []", "+  for i, cond in enumerate(l1):", "+    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[0].barh(l1, weather_ratio, align='center')", "+  for i, v in enumerate(weather_ratio):", "+    axs[0].text(v, i, str(v))", "+  axs[0].set_title('Crash/Injury Ratio by Weather Condition')", "+", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  lighting_ratio = []", "+  for i, cond in enumerate(l2):", "+    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[1].barh(l2, lighting_ratio, align='center')", "+  for i, v in enumerate(lighting_ratio):", "+    axs[1].text(v, i, str(v))", "+  axs[1].set_title('Crash/Injury Ratio by Lighting Condition')", "+", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  road_ratio = []", "+  for i, cond in enumerate(l3):", "+    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[2].barh(l3, road_ratio, align='center')", "+  for i, v in enumerate(road_ratio):", "+    axs[2].text(v, i, str(v))", "+  axs[2].set_title('Crash/Injury Ratio by Road Condition')", "+  fig.tight_layout()"], "sub": ["-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# ratio of injuries to crashes to show severity", "+", "+  fig.tight_layout()"], "sub": ["-", "-"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:25:25 2021 -0600", "msg": "1638123925.7032819_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# ratio of injuries to crashes to show severity", "+", "+  fig.tight_layout()"], "sub": ["-", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638123772.6001549 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:23:00 2021 -0600", "msg": "1638123772.6001549_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638123772.6001549 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  weather_ratio = []", "+  for i, cond in enumerate(l1):", "+    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[0].barh(l1, weather_ratio, align='center')", "+  for i, v in enumerate(weather_ratio):", "+  axs[0].set_title('Crash/Injury Ratio by Weather Condition')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  lighting_ratio = []", "+  for i, cond in enumerate(l2):", "+    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[1].barh(l2, lighting_ratio, align='center')", "+  for i, v in enumerate(lighting_ratio):", "+  axs[1].set_title('Crash/Injury Ratio by Lighting Condition')", "+", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  road_ratio = []", "+  for i, cond in enumerate(l3):", "+    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[2].barh(l3, road_ratio, align='center')", "+  for i, v in enumerate(road_ratio):", "+  axs[2].set_title('Crash/Injury Ratio by Road Condition')"], "sub": ["-  l1 = df[\"WEATHER_CONDITION\"].unique()", "-  c1 = []", "-  for cond in l1:", "-    c1.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "-  # weather_ratio = []", "-  # for i, cond in enumerate(l1):", "-  #   weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[0].barh(l1, c1, align='center')", "-  for i, v in enumerate(c1):", "-  axs[0].set_title('Frequency of Crashes by Weather Condition')", "-  l2 = df[\"LIGHTING_CONDITION\"].unique()", "-  c2 = []", "-  for cond in l2:", "-    c2.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "-  # lighting_ratio = []", "-  # for i, cond in enumerate(l2):", "-  #   lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[1].barh(l2, c2, align='center')", "-  for i, v in enumerate(c2):", "-  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "-", "-  l3 = df[\"ROADWAY_SURFACE_COND\"].unique()", "-  c3 = []", "-  for cond in l3:", "-    c3.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].median())", "-  # road_ratio = []", "-  # for i, cond in enumerate(l3):", "-  #   road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[2].barh(l3, c3, align='center')", "-  for i, v in enumerate(c3):", "-  axs[2].set_title('Frequency of Crashes by Road Condition')"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:22:52 2021 -0600", "msg": "1638123772.6001549_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  weather_ratio = []", "+  for i, cond in enumerate(l1):", "+    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[0].barh(l1, weather_ratio, align='center')", "+  for i, v in enumerate(weather_ratio):", "+  axs[0].set_title('Crash/Injury Ratio by Weather Condition')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  lighting_ratio = []", "+  for i, cond in enumerate(l2):", "+    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[1].barh(l2, lighting_ratio, align='center')", "+  for i, v in enumerate(lighting_ratio):", "+  axs[1].set_title('Crash/Injury Ratio by Lighting Condition')", "+", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  road_ratio = []", "+  for i, cond in enumerate(l3):", "+    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[2].barh(l3, road_ratio, align='center')", "+  for i, v in enumerate(road_ratio):", "+  axs[2].set_title('Crash/Injury Ratio by Road Condition')"], "sub": ["-  l1 = df[\"WEATHER_CONDITION\"].unique()", "-  c1 = []", "-  for cond in l1:", "-    c1.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "-  # weather_ratio = []", "-  # for i, cond in enumerate(l1):", "-  #   weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[0].barh(l1, c1, align='center')", "-  for i, v in enumerate(c1):", "-  axs[0].set_title('Frequency of Crashes by Weather Condition')", "-  l2 = df[\"LIGHTING_CONDITION\"].unique()", "-  c2 = []", "-  for cond in l2:", "-    c2.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "-  # lighting_ratio = []", "-  # for i, cond in enumerate(l2):", "-  #   lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[1].barh(l2, c2, align='center')", "-  for i, v in enumerate(c2):", "-  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "-", "-  l3 = df[\"ROADWAY_SURFACE_COND\"].unique()", "-  c3 = []", "-  for cond in l3:", "-    c3.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].median())", "-  # road_ratio = []", "-  # for i, cond in enumerate(l3):", "-  #   road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "-  axs[2].barh(l3, c3, align='center')", "-  for i, v in enumerate(c3):", "-  axs[2].set_title('Frequency of Crashes by Road Condition')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638123606.176775 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:20:41 2021 -0600", "msg": "1638123606.176775_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638123606.176775 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1 = df[\"WEATHER_CONDITION\"].unique()", "+  c1 = []", "+  for cond in l1:", "+    c1.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "+  # weather_ratio = []", "+  # for i, cond in enumerate(l1):", "+  #   weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[0].barh(l1, c1, align='center')", "+  for i, v in enumerate(c1):", "+  l2 = df[\"LIGHTING_CONDITION\"].unique()", "+  c2 = []", "+  for cond in l2:", "+    c2.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "+  # lighting_ratio = []", "+  # for i, cond in enumerate(l2):", "+  #   lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[1].barh(l2, c2, align='center')", "+  for i, v in enumerate(c2):", "+  l3 = df[\"ROADWAY_SURFACE_COND\"].unique()", "+  c3 = []", "+  for cond in l3:", "+    c3.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].median())", "+  # road_ratio = []", "+  # for i, cond in enumerate(l3):", "+  #   road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[2].barh(l3, c3, align='center')", "+  for i, v in enumerate(c3):"], "sub": ["-  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "-  weather_ratio = []", "-  for i, cond in enumerate(l1):", "-    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[0].barh(l1, weather_ratio, align='center')", "-  for i, v in enumerate(weather_ratio):", "-  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "-  lighting_ratio = []", "-  for i, cond in enumerate(l2):", "-    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[1].barh(l2, lighting_ratio, align='center')", "-  for i, v in enumerate(lighting_ratio):", "-  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "-  road_ratio = []", "-  for i, cond in enumerate(l3):", "-    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[2].barh(l3, road_ratio, align='center')", "-  for i, v in enumerate(road_ratio):"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:20:06 2021 -0600", "msg": "1638123606.176775_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1 = df[\"WEATHER_CONDITION\"].unique()", "+  c1 = []", "+  for cond in l1:", "+    c1.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "+  # weather_ratio = []", "+  # for i, cond in enumerate(l1):", "+  #   weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[0].barh(l1, c1, align='center')", "+  for i, v in enumerate(c1):", "+  l2 = df[\"LIGHTING_CONDITION\"].unique()", "+  c2 = []", "+  for cond in l2:", "+    c2.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].median())", "+  # lighting_ratio = []", "+  # for i, cond in enumerate(l2):", "+  #   lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[1].barh(l2, c2, align='center')", "+  for i, v in enumerate(c2):", "+  l3 = df[\"ROADWAY_SURFACE_COND\"].unique()", "+  c3 = []", "+  for cond in l3:", "+    c3.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].median())", "+  # road_ratio = []", "+  # for i, cond in enumerate(l3):", "+  #   road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_TOTAL'].sum() / c1[i])", "+  axs[2].barh(l3, c3, align='center')", "+  for i, v in enumerate(c3):"], "sub": ["-  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "-  weather_ratio = []", "-  for i, cond in enumerate(l1):", "-    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[0].barh(l1, weather_ratio, align='center')", "-  for i, v in enumerate(weather_ratio):", "-  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "-  lighting_ratio = []", "-  for i, cond in enumerate(l2):", "-    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[1].barh(l2, lighting_ratio, align='center')", "-  for i, v in enumerate(lighting_ratio):", "-  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "-  road_ratio = []", "-  for i, cond in enumerate(l3):", "-    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "-  axs[2].barh(l3, road_ratio, align='center')", "-  for i, v in enumerate(road_ratio):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638122763.7513201 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  font = {", "+    'family' : 'DejaVu Sans',", "+    'size' : 7", "+  }", "+  plt.rc('font', **font)"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:06:30 2021 -0600", "msg": "1638122763.7513201_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  font = {", "+    'family' : 'DejaVu Sans',", "+    'size' : 7", "+  }", "+  plt.rc('font', **font)"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def severity_plot(df):", "+  fig, axs = plt.subplots(3, 1)", "+", "+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  weather_ratio = []", "+  for i, cond in enumerate(l1):", "+    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[0].barh(l1, weather_ratio, align='center')", "+  for i, v in enumerate(weather_ratio):", "+    axs[0].text(v, i, str(v))", "+  axs[0].set_title('Frequency of Crashes by Weather Condition')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  lighting_ratio = []", "+  for i, cond in enumerate(l2):", "+    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[1].barh(l2, lighting_ratio, align='center')", "+  for i, v in enumerate(lighting_ratio):", "+    axs[1].text(v, i, str(v))", "+  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "+", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  road_ratio = []", "+  for i, cond in enumerate(l3):", "+    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[2].barh(l3, road_ratio, align='center')", "+  for i, v in enumerate(road_ratio):", "+    axs[2].text(v, i, str(v))", "+  axs[2].set_title('Frequency of Crashes by Road Condition')", "+", "+  plt.show()", "+    # plot(cdf)", "+    severity_plot(cdf)"], "sub": ["-    plot(cdf)", "-"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 12:06:03 2021 -0600", "msg": "1638122763.7513201_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def severity_plot(df):", "+  fig, axs = plt.subplots(3, 1)", "+", "+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  weather_ratio = []", "+  for i, cond in enumerate(l1):", "+    weather_ratio.append(df[df[\"WEATHER_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[0].barh(l1, weather_ratio, align='center')", "+  for i, v in enumerate(weather_ratio):", "+    axs[0].text(v, i, str(v))", "+  axs[0].set_title('Frequency of Crashes by Weather Condition')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  lighting_ratio = []", "+  for i, cond in enumerate(l2):", "+    lighting_ratio.append(df[df[\"LIGHTING_CONDITION\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[1].barh(l2, lighting_ratio, align='center')", "+  for i, v in enumerate(lighting_ratio):", "+    axs[1].text(v, i, str(v))", "+  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "+", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  road_ratio = []", "+  for i, cond in enumerate(l3):", "+    road_ratio.append(df[df[\"ROADWAY_SURFACE_COND\"] == cond]['INJURIES_INCAPACITATING'].sum() / c1[i])", "+  axs[2].barh(l3, road_ratio, align='center')", "+  for i, v in enumerate(road_ratio):", "+    axs[2].text(v, i, str(v))", "+  axs[2].set_title('Frequency of Crashes by Road Condition')", "+", "+  plt.show()", "+    # plot(cdf)", "+    severity_plot(cdf)"], "sub": ["-    plot(cdf)", "-"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638121039.33074 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:37:22 2021 -0600", "msg": "1638121039.33074_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638121039.33074 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+  font = {", "+    'family' : 'DejaVu Sans',", "+    'size' : 7", "+  }", "+  plt.rc('font', **font)", "+", "+  fig, axs = plt.subplots(3, 1)", "+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  axs[0].barh(l1, c1, align='center')", "+  for i, v in enumerate(c1):", "+    axs[0].text(v, i, str(v))", "+  axs[0].set_title('Frequency of Crashes by Weather Condition')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  axs[1].barh(l2, c2, align='center')", "+  for i, v in enumerate(c2):", "+    axs[1].text(v, i, str(v))", "+  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  axs[2].barh(l3, c3, align='center')", "+  for i, v in enumerate(c3):", "+    axs[2].text(v, i, str(v))", "+  axs[2].set_title('Frequency of Crashes by Road Condition')", "+", "+  fig.tight_layout()"], "sub": ["-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-  # plt.show()", "-  plt.savefig('test.png')"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:37:19 2021 -0600", "msg": "1638121039.33074_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-  # plt.show()", "-  plt.savefig('test.png')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638120283.1057549 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:24:47 2021 -0600", "msg": "1638120283.1057549_end"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638120260.782167 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # plt.show()", "+  plt.savefig('test.png')"], "sub": ["-  plt.show()", "-  # plt.savefig('test.png')"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:24:40 2021 -0600", "msg": "1638120260.782167_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # plt.show()", "+  plt.savefig('test.png')"], "sub": ["-  plt.show()", "-  # plt.savefig('test.png')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  font = {", "+    'family' : 'DejaVu Sans',", "+    'size' : 7", "+  }", "+  plt.rc('font', **font)", "+  fig.tight_layout()", "+  plt.show()", "+  # plt.savefig('test.png')"], "sub": ["-  # df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]", "-  for ax in axs.flat:", "-    ax.set(ylabel='Condition')", "-", "-  plt.savefig('test.png')"]}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:24:20 2021 -0600", "msg": "1638120260.782167_start"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638119073.498857 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:04:38 2021 -0600", "msg": "1638119073.498857_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638119073.498857 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    axs[0].text(v, i, str(v))", "+  for i, v in enumerate(c2):", "+    axs[1].text(v, i, str(v))", "+  for i, v in enumerate(c3):", "+    axs[2].text(v, i, str(v))"], "sub": ["-    ax.text(v + 3, i + .25, str(v), color='blue', fontweight='bold')", "-  plt.show()"]}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 11:04:33 2021 -0600", "msg": "1638119073.498857_start"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638118737.6500218 , error_code: 1"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 10:59:01 2021 -0600", "msg": "1638118737.6500218_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638118737.6500218 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638118090.810838 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for i, v in enumerate(c1):", "+    ax.text(v + 3, i + .25, str(v), color='blue', fontweight='bold')", "+  plt.savefig('test.png')"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 10:58:55 2021 -0600", "msg": "1638118090.810838_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for i, v in enumerate(c1):", "+    ax.text(v + 3, i + .25, str(v), color='blue', fontweight='bold')", "+  plt.savefig('test.png')"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  axs[0].barh(l1, c1, align='center')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  axs[1].barh(l2, c2, align='center')", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  axs[2].barh(l3, c3, align='center')", "+    ax.set(ylabel='Condition')"], "sub": ["-  axs[0].hist(df[\"WEATHER_CONDITION\"])", "-  axs[1].hist(df[\"LIGHTING_CONDITION\"])", "-  axs[2].hist(df[\"ROADWAY_SURFACE_COND\"])", "-    ax.set(xlabel='Condition', ylabel='Frequency')", "-  # Hide x labels and tick labels for top plots and y ticks for right plots.", "-  for ax in axs.flat:", "-    ax.label_outer()", "-", "-  # plt.hist(df[\"WEATHER_CONDITION\"])", "-  # plt.title('Frequency of Crashes by Weather Condition')", "-  # plt.xlabel(\"Weather Condition\")", "-  # plt.xticks(rotation=45)", "-  # plt.ylabel(\"Frequency of Crashes\")"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sun Nov 28 10:48:10 2021 -0600", "msg": "1638118090.810838_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  l1, c1 = df[\"WEATHER_CONDITION\"].unique(), df[\"WEATHER_CONDITION\"].value_counts()", "+  axs[0].barh(l1, c1, align='center')", "+  l2, c2 = df[\"LIGHTING_CONDITION\"].unique(), df[\"LIGHTING_CONDITION\"].value_counts()", "+  axs[1].barh(l2, c2, align='center')", "+  l3, c3 = df[\"ROADWAY_SURFACE_COND\"].unique(), df[\"ROADWAY_SURFACE_COND\"].value_counts()", "+  axs[2].barh(l3, c3, align='center')", "+    ax.set(ylabel='Condition')"], "sub": ["-  axs[0].hist(df[\"WEATHER_CONDITION\"])", "-  axs[1].hist(df[\"LIGHTING_CONDITION\"])", "-  axs[2].hist(df[\"ROADWAY_SURFACE_COND\"])", "-    ax.set(xlabel='Condition', ylabel='Frequency')", "-  # Hide x labels and tick labels for top plots and y ticks for right plots.", "-  for ax in axs.flat:", "-    ax.label_outer()", "-", "-  # plt.hist(df[\"WEATHER_CONDITION\"])", "-  # plt.title('Frequency of Crashes by Weather Condition')", "-  # plt.xlabel(\"Weather Condition\")", "-  # plt.xticks(rotation=45)", "-  # plt.ylabel(\"Frequency of Crashes\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638034304.254601 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sat Nov 27 12:32:01 2021 -0500", "msg": "1638034304.254601_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638034304.254601 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]", "+", "+  fig, axs = plt.subplots(3, 1)", "+  axs[0].hist(df[\"WEATHER_CONDITION\"])", "+  axs[0].set_title('Frequency of Crashes by Weather Condition')", "+  axs[1].hist(df[\"LIGHTING_CONDITION\"])", "+  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "+  axs[2].hist(df[\"ROADWAY_SURFACE_COND\"])", "+  axs[2].set_title('Frequency of Crashes by Road Condition')", "+", "+  for ax in axs.flat:", "+    ax.set(xlabel='Condition', ylabel='Frequency')", "+", "+  # Hide x labels and tick labels for top plots and y ticks for right plots.", "+  for ax in axs.flat:", "+    ax.label_outer()", "+", "+  # plt.hist(df[\"WEATHER_CONDITION\"])", "+  # plt.title('Frequency of Crashes by Weather Condition')", "+  # plt.xlabel(\"Weather Condition\")", "+  # plt.xticks(rotation=45)", "+  # plt.ylabel(\"Frequency of Crashes\")", "+    # get_counts(cdf)"], "sub": ["-  df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]", "-  plt.hist(df[\"WEATHER_CONDITION\"])", "-  plt.xlabel(\"Weather Condition\")", "-  plt.ylabel(\"Frequency of Crashes\")", "-    get_counts(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Sat Nov 27 12:31:44 2021 -0500", "msg": "1638034304.254601_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]", "+", "+  fig, axs = plt.subplots(3, 1)", "+  axs[0].hist(df[\"WEATHER_CONDITION\"])", "+  axs[0].set_title('Frequency of Crashes by Weather Condition')", "+  axs[1].hist(df[\"LIGHTING_CONDITION\"])", "+  axs[1].set_title('Frequency of Crashes by Lighting Condition')", "+  axs[2].hist(df[\"ROADWAY_SURFACE_COND\"])", "+  axs[2].set_title('Frequency of Crashes by Road Condition')", "+", "+  for ax in axs.flat:", "+    ax.set(xlabel='Condition', ylabel='Frequency')", "+", "+  # Hide x labels and tick labels for top plots and y ticks for right plots.", "+  for ax in axs.flat:", "+    ax.label_outer()", "+", "+  # plt.hist(df[\"WEATHER_CONDITION\"])", "+  # plt.title('Frequency of Crashes by Weather Condition')", "+  # plt.xlabel(\"Weather Condition\")", "+  # plt.xticks(rotation=45)", "+  # plt.ylabel(\"Frequency of Crashes\")", "+    # get_counts(cdf)"], "sub": ["-  df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]", "-  plt.hist(df[\"WEATHER_CONDITION\"])", "-  plt.xlabel(\"Weather Condition\")", "-  plt.ylabel(\"Frequency of Crashes\")", "-    get_counts(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637779461.315912 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]"], "sub": ["-"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 13:50:57 2021 -0500", "msg": "1637779461.315912_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df[df[\"WEATHER_CONDITION\"] != \"CLEAR\"]"], "sub": ["-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# 1.", "+def get_counts(df):", "+  l = [\"WEATHER_CONDITION\", \"LIGHTING_CONDITION\", \"ROADWAY_SURFACE_COND\"]", "+  for col in l:", "+    print(df[col].value_counts())", "+", "+# 2.", "+  plt.hist(df[\"WEATHER_CONDITION\"])", "+  plt.xlabel(\"Weather Condition\")", "+  plt.ylabel(\"Frequency of Crashes\")", "+  plt.show()", "+    get_counts(cdf)", "+    plot(cdf)"], "sub": ["-#TODO 1.", "-#TODO 2.", "-  plt.scatter(df['A'],df['B'])"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 13:44:21 2021 -0500", "msg": "1637779461.315912_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# 1.", "+def get_counts(df):", "+  l = [\"WEATHER_CONDITION\", \"LIGHTING_CONDITION\", \"ROADWAY_SURFACE_COND\"]", "+  for col in l:", "+    print(df[col].value_counts())", "+", "+# 2.", "+  plt.hist(df[\"WEATHER_CONDITION\"])", "+  plt.xlabel(\"Weather Condition\")", "+  plt.ylabel(\"Frequency of Crashes\")", "+  plt.show()", "+    get_counts(cdf)", "+    plot(cdf)"], "sub": ["-#TODO 1.", "-#TODO 2.", "-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637774769.1251252 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:26:25 2021 -0500", "msg": "1637774769.1251252_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637774769.1251252 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  # filter out rows where injuries don't add up (semantic error)", "+  df = df[df[\"INJURIES_INCAPACITATING\"] + df[\"INJURIES_NON_INCAPACITATING\"] + df[\"INJURIES_FATAL\"] + df[\"INJURIES_REPORTED_NOT_EVIDENT\"] == df[\"INJURIES_TOTAL\"]]", "+", "+  # set rows missing MOST_SEVERE_INJURY values with 0 injuries and NO INJURY CRASH_TYPE to NO INDICATION OF INJURY", "+  df.loc[(df[\"INJURIES_TOTAL\"] == 0) & (df[\"MOST_SEVERE_INJURY\"].isna() & (df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\")), \"MOST_SEVERE_INJURY\"] = \"NO INDICATION OF INJURY\"", "+", "+  # drops rows with NaN and unknown values", "+  columns_with_unknowns = [\"WEATHER_CONDITION\", \"LIGHTING_CONDITION\", \"TRAFFICWAY_TYPE\", \"ROADWAY_SURFACE_COND\", \"ROAD_DEFECT\"]", "+  for col in columns_with_unknowns:", "+    df = df[df[col] != \"UNKNOWN\"]", "+  df = df.dropna()", "+  return df"], "sub": ["-  return df #demo"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # check_columns_na(cdf)", "+    # inspect_injury_reports(cdf)"], "sub": ["-    check_columns_na(cdf)", "-    inspect_injury_reports(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:26:09 2021 -0500", "msg": "1637774769.1251252_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # check_columns_na(cdf)", "+    # inspect_injury_reports(cdf)"], "sub": ["-    check_columns_na(cdf)", "-    inspect_injury_reports(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774691.444167 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:24:56 2021 -0500", "msg": "1637774691.444167_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774691.444167 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    inspect_injury_reports(cdf)"], "sub": ["-    inspect_injury_reports(df)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:24:51 2021 -0500", "msg": "1637774691.444167_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    inspect_injury_reports(cdf)"], "sub": ["-    inspect_injury_reports(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774662.9747121 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:24:27 2021 -0500", "msg": "1637774662.9747121_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774662.9747121 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    inspect_injury_reports(df)"], "sub": ["-    # inspect_injury_reports(df)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:24:23 2021 -0500", "msg": "1637774662.9747121_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    inspect_injury_reports(df)"], "sub": ["-    # inspect_injury_reports(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774625.387439 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:23:51 2021 -0500", "msg": "1637774625.387439_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637774625.387439 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # filter out rows where injuries don't add up (semantic error)", "+  df = df[df[\"INJURIES_INCAPACITATING\"] + df[\"INJURIES_NON_INCAPACITATING\"] + df[\"INJURIES_FATAL\"] + df[\"INJURIES_REPORTED_NOT_EVIDENT\"] == df[\"INJURIES_TOTAL\"]]", "+", "+  # set rows missing MOST_SEVERE_INJURY values with 0 injuries and NO INJURY CRASH_TYPE to NO INDICATION OF INJURY", "+  df.loc[(df[\"INJURIES_TOTAL\"] == 0) & (df[\"MOST_SEVERE_INJURY\"].isna() & (df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\")), \"MOST_SEVERE_INJURY\"] = \"NO INDICATION OF INJURY\"", "+", "+  # drops rows with NaN and unknown values", "+  columns_with_unknowns = [\"WEATHER_CONDITION\", \"LIGHTING_CONDITION\", \"TRAFFICWAY_TYPE\", \"ROADWAY_SURFACE_COND\", \"ROAD_DEFECT\"]", "+  for col in columns_with_unknowns:", "+    df = df[df[col] != \"UNKNOWN\"]", "+  df = df.dropna()", "+", "+  return df", "+    cdf = clean(df)", "+", "+    # most_severe_vs_total(cdf)", "+    # check_nan_injuries(df)", "+    # check_crash_type_vs_injuries(df)", "+    check_columns_na(cdf)"], "sub": ["-  df = df[df]", "-  return df #demo", "-    # most_severe_vs_total(df)", "-    # check_nan_injuries(df)", "-    check_crash_type_vs_injuries(df)", "-    # cdf = clean(df)", "-    # check_columns_na(df)", "-    # print(cdf)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 12:23:45 2021 -0500", "msg": "1637774625.387439_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  # filter out rows where injuries don't add up (semantic error)", "+  df = df[df[\"INJURIES_INCAPACITATING\"] + df[\"INJURIES_NON_INCAPACITATING\"] + df[\"INJURIES_FATAL\"] + df[\"INJURIES_REPORTED_NOT_EVIDENT\"] == df[\"INJURIES_TOTAL\"]]", "+", "+  # set rows missing MOST_SEVERE_INJURY values with 0 injuries and NO INJURY CRASH_TYPE to NO INDICATION OF INJURY", "+  df.loc[(df[\"INJURIES_TOTAL\"] == 0) & (df[\"MOST_SEVERE_INJURY\"].isna() & (df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\")), \"MOST_SEVERE_INJURY\"] = \"NO INDICATION OF INJURY\"", "+", "+  # drops rows with NaN and unknown values", "+  columns_with_unknowns = [\"WEATHER_CONDITION\", \"LIGHTING_CONDITION\", \"TRAFFICWAY_TYPE\", \"ROADWAY_SURFACE_COND\", \"ROAD_DEFECT\"]", "+  for col in columns_with_unknowns:", "+    df = df[df[col] != \"UNKNOWN\"]", "+  df = df.dropna()", "+", "+  return df", "+    cdf = clean(df)", "+", "+    # most_severe_vs_total(cdf)", "+    # check_nan_injuries(df)", "+    # check_crash_type_vs_injuries(df)", "+    check_columns_na(cdf)"], "sub": ["-  df = df[df]", "-  return df #demo", "-    # most_severe_vs_total(df)", "-    # check_nan_injuries(df)", "-    check_crash_type_vs_injuries(df)", "-    # cdf = clean(df)", "-    # check_columns_na(df)", "-    # print(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637768513.83873 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 10:41:57 2021 -0500", "msg": "1637768513.83873_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637768513.83873 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df[df]", "+def check_crash_type_vs_injuries(df):", "+  print(df[(df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\") & (df[\"INJURIES_TOTAL\"] > 0)])", "+", "+    # check_nan_injuries(df)", "+    check_crash_type_vs_injuries(df)"], "sub": ["-", "-    check_nan_injuries(df)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 10:41:53 2021 -0500", "msg": "1637768513.83873_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df[df]", "+def check_crash_type_vs_injuries(df):", "+  print(df[(df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\") & (df[\"INJURIES_TOTAL\"] > 0)])", "+", "+    # check_nan_injuries(df)", "+    check_crash_type_vs_injuries(df)"], "sub": ["-", "-    check_nan_injuries(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637733672.277976 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 01:01:15 2021 -0500", "msg": "1637733672.277976_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637733672.277976 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    pd.set_option('display.max_columns', 30)"], "sub": ["-    # pd.set_option('display.max_columns', 30)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 01:01:12 2021 -0500", "msg": "1637733672.277976_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    pd.set_option('display.max_columns', 30)"], "sub": ["-    # pd.set_option('display.max_columns', 30)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637733648.245682 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 01:00:51 2021 -0500", "msg": "1637733648.245682_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637733648.245682 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# checks if NaN values for injuries are actually injuries", "+def check_nan_injuries(df):", "+  print(df[((df[\"MOST_SEVERE_INJURY\"] == \"NO INDICATION OF INJURY\") | (df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\")) & (df[\"INJURIES_TOTAL\"].isna())])", "+", "+    # pd.set_option('display.max_columns', 30)", "+    # most_severe_vs_total(df)", "+    check_nan_injuries(df)"], "sub": ["-    pd.set_option('display.max_columns', 30)", "-    most_severe_vs_total(df)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 01:00:48 2021 -0500", "msg": "1637733648.245682_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# checks if NaN values for injuries are actually injuries", "+def check_nan_injuries(df):", "+  print(df[((df[\"MOST_SEVERE_INJURY\"] == \"NO INDICATION OF INJURY\") | (df[\"CRASH_TYPE\"] == \"NO INJURY / DRIVE AWAY\")) & (df[\"INJURIES_TOTAL\"].isna())])", "+", "+    # pd.set_option('display.max_columns', 30)", "+    # most_severe_vs_total(df)", "+    check_nan_injuries(df)"], "sub": ["-    pd.set_option('display.max_columns', 30)", "-    most_severe_vs_total(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637732291.672776 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 00:38:14 2021 -0500", "msg": "1637732291.672776_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637732291.672776 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# checks unknown and missing values in dataframe", "+    print('Unknown Values -', len(df[df[col] == 'UNKNOWN']))", "+    print('Datatype -', df[col].dtypes)", "+# checks the number of rows where total injuries do not add up", "+# checks if MOST_SEVERE_INJURY column NaN values matches with 0 for INJURIES_TOTAL", "+def most_severe_vs_total(df):", "+  print(df[~df[\"INJURIES_TOTAL\"].isna() & (df[\"MOST_SEVERE_INJURY\"].isna())])", "+", "+    pd.set_option('display.max_columns', 30)", "+    most_severe_vs_total(df)", "+    # print(cdf)", "+    # check_columns_na(df)", "+    # inspect_injury_reports(df)"], "sub": ["-    print('Unknown Values - ', len(df[df[col] == 'UNKNOWN']))", "-    print('Datatype - ', df[col].dtypes)", "-    print(df)", "-    check_columns_na(df)", "-    inspect_injury_reports(df)"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Wed Nov 24 00:38:11 2021 -0500", "msg": "1637732291.672776_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# checks unknown and missing values in dataframe", "+    print('Unknown Values -', len(df[df[col] == 'UNKNOWN']))", "+    print('Datatype -', df[col].dtypes)", "+# checks the number of rows where total injuries do not add up", "+# checks if MOST_SEVERE_INJURY column NaN values matches with 0 for INJURIES_TOTAL", "+def most_severe_vs_total(df):", "+  print(df[~df[\"INJURIES_TOTAL\"].isna() & (df[\"MOST_SEVERE_INJURY\"].isna())])", "+", "+    pd.set_option('display.max_columns', 30)", "+    most_severe_vs_total(df)", "+    # print(cdf)", "+    # check_columns_na(df)", "+    # inspect_injury_reports(df)"], "sub": ["-    print('Unknown Values - ', len(df[df[col] == 'UNKNOWN']))", "-    print('Datatype - ', df[col].dtypes)", "-    print(df)", "-    check_columns_na(df)", "-    inspect_injury_reports(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637721197.892612 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 21:33:21 2021 -0500", "msg": "1637721197.892612_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637721197.892612 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def inspect_injury_reports(df):", "+  bad = len(df[df[\"INJURIES_INCAPACITATING\"] + df[\"INJURIES_NON_INCAPACITATING\"] + df[\"INJURIES_FATAL\"] + df[\"INJURIES_REPORTED_NOT_EVIDENT\"] != df[\"INJURIES_TOTAL\"]])", "+  print(\"Number of semantically incorrect injury reports:\", bad)", "+", "+    inspect_injury_reports(df)"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 21:33:17 2021 -0500", "msg": "1637721197.892612_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def inspect_injury_reports(df):", "+  bad = len(df[df[\"INJURIES_INCAPACITATING\"] + df[\"INJURIES_NON_INCAPACITATING\"] + df[\"INJURIES_FATAL\"] + df[\"INJURIES_REPORTED_NOT_EVIDENT\"] != df[\"INJURIES_TOTAL\"]])", "+  print(\"Number of semantically incorrect injury reports:\", bad)", "+", "+    inspect_injury_reports(df)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637698189.9078422 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 15:09:53 2021 -0500", "msg": "1637698189.9078422_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637698189.9078422 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  return pd.read_csv(filename, index_col=0) #demo"], "sub": ["-  return pd.read_csv(filename) #demo"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return pd.read_csv(filename, index_col=0) #demo", "+    print('Unknown Values - ', len(df[df[col] == 'UNKNOWN']))"], "sub": ["-  return pd.read_csv(filename) #demo"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 15:09:49 2021 -0500", "msg": "1637698189.9078422_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return pd.read_csv(filename, index_col=0) #demo", "+    print('Unknown Values - ', len(df[df[col] == 'UNKNOWN']))"], "sub": ["-  return pd.read_csv(filename) #demo"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637687410.434496 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 12:10:13 2021 -0500", "msg": "1637687410.434496_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637687410.434496 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('Datatype - ', df[col].dtypes)"], "sub": ["-    print('Missing Values -', df[col].isnull().sum())"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 12:10:10 2021 -0500", "msg": "1637687410.434496_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('Datatype - ', df[col].dtypes)"], "sub": ["-    print('Missing Values -', df[col].isnull().sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637686780.458831 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 11:59:44 2021 -0500", "msg": "1637686780.458831_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637686780.458831 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('Missing Values -', df[col].isnull().sum())"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 11:59:40 2021 -0500", "msg": "1637686780.458831_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('Missing Values -', df[col].isnull().sum())"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637685837.390272 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 11:44:00 2021 -0500", "msg": "1637685837.390272_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637685837.390272 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def check_columns_na(df):", "+  for col in df.columns:", "+    print('Column: ', col)", "+    print('Missing Values -', df[col].isna().sum())", "+    print('---')", "+    df = load('data_2.csv')", "+    # cdf = clean(df)", "+    print(df)", "+    check_columns_na(df)", "+    # print(cdf)", "+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    df = load('data.csv')", "-    cdf = clean(df)", "-    plot(cdf)", "-    plt.show()"]}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 11:43:57 2021 -0500", "msg": "1637685837.390272_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def check_columns_na(df):", "+  for col in df.columns:", "+    print('Column: ', col)", "+    print('Missing Values -', df[col].isna().sum())", "+    print('---')", "+    df = load('data_2.csv')", "+    # cdf = clean(df)", "+    print(df)", "+    check_columns_na(df)", "+    # print(cdf)", "+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    df = load('data.csv')", "-    cdf = clean(df)", "-    plot(cdf)", "-    plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637645960.15935 , error_code: 0"], "sub": []}], "author": "alexjsun <alexjsun19@gmail.com>", "date": "Tue Nov 23 00:39:30 2021 -0500", "msg": "1637645960.15935_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637645960.15935 , error_code: 0"], "sub": []}, {"files": "diff --git a/.DS_Store b/.DS_Store", "add": [], "sub": []}, {"files": "diff --git a/.gitignore b/.gitignore", "add": ["+*.csv"], "sub": []}, {"files": "diff --git a/README.md b/README.md", "add": ["+# README", "+", "+cnet_id: #", "+", "+name: #"], "sub": []}, {"files": "diff --git a/explore/data.csv b/explore/data.csv", "add": ["+A,B", "+1,2", "+3,4", "+5,0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+'''load.py Load loads the dataset, cleans it, and generates a new clean", "+csv file.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+", "+", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    cdf.to_csv('clean.csv')"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_2.png')"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_3.png')"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_4.png')"], "sub": []}, {"files": "diff --git a/explore/run.py b/explore/run.py", "add": ["+\"\"\"This python program executes your code", "+\"\"\"", "+", "+from git import Repo", "+import os", "+import time", "+import sys", "+import subprocess", "+", "+", "+#advanced feature change at your own risk", "+COMPILER_COMMAND = 'python' # replace with whatever usually used in the commandline ex. python3", "+", "+", "+", "+def check_diff(repo):", "+    hcommit = repo.head.commit", "+", "+    diffs = hcommit.diff(None)", "+", "+    if len(diffs) == 0:", "+        return False", "+    else:", "+        return True", "+", "+", "+def add_commit(id, check_changed = True, push = True):", "+    \"\"\"", "+    Add current changes and commit", "+    \"\"\"", "+    # need to check if anything in repo has changed", "+    repo = Repo(os.path.dirname(os.getcwd())) #changed to look at the parent", "+", "+    if check_changed:", "+        changed = check_diff(repo)", "+    else:", "+        changed = True", "+", "+    if changed:", "+        repo.git.add('.')", "+", "+        repo.git.commit('-m', id)", "+        if push:", "+            repo.remotes.origin.push()", "+        return changed", "+", "+    else:", "+        return changed", "+", "+", "+if __name__ == '__main__':", "+", "+    ##error checking", "+    if len(sys.argv) == 1:", "+        print(\"You must run the program as follows:\\n python run.py scratch.py \\n or \\n python run.py load.py \\n or \\n python run.py plot.py\")", "+        exit()", "+", "+", "+    id = str(time.time())", "+    committed = add_commit(id + '_start', push = False)", "+", "+    command = [COMPILER_COMMAND] + sys.argv[1:]", "+", "+    process = subprocess.run(command)", "+", "+    with open('./runs.txt', 'a') as f:", "+        record = '{} , {}, {} , error_code: {} \\n'.format(sys.argv[1], committed, id, process.returncode)", "+        f.write(record)", "+", "+    add_commit(id + '_end', check_changed = False, push=True)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+'''scratch.py", "+", "+You will write down any \"scratch\" code that you use to explore the dataset in", "+this file. This code does not produce any outputs (it does not modify any files)", "+but allows you to explore the data. We're separating this code from the rest because", "+it allows us to understand your thought process during data exploration.", "+", "+*Remember to replace the return statements with your code*", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+#TODO 1.", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+", "+"], "sub": []}, {"files": "diff --git a/requirements.txt b/requirements.txt", "add": ["+appnope==0.1.2", "+argon2-cffi==20.1.0", "+async-generator==1.10", "+attrs==21.2.0", "+backcall==0.2.0", "+bitstring==3.1.9", "+bleach==3.3.0", "+cffi==1.14.5", "+click==8.0.0", "+cloudpickle==1.6.0", "+cycler==0.10.0", "+dask==2021.4.1", "+decorator==5.0.7", "+defusedxml==0.7.1", "+distributed==2021.4.1", "+entrypoints==0.3", "+fsspec==2021.5.0", "+gitdb==4.0.9", "+GitPython==3.1.24", "+graphviz==0.16", "+HeapDict==1.0.1", "+ipykernel==5.5.5", "+ipython==7.23.1", "+ipython-genutils==0.2.0", "+ipywidgets==7.6.3", "+jedi==0.18.0", "+Jinja2==3.0.0", "+joblib==1.0.1", "+jsonschema==3.2.0", "+jupyter==1.0.0", "+jupyter-client==6.1.12", "+jupyter-console==6.4.0", "+jupyter-core==4.7.1", "+jupyterlab-pygments==0.1.2", "+jupyterlab-widgets==1.0.0", "+kiwisolver==1.3.1", "+locket==0.2.1", "+MarkupSafe==2.0.0", "+matplotlib==3.4.2", "+matplotlib-inline==0.1.2", "+mistune==0.8.4", "+msgpack==1.0.2", "+nbclient==0.5.3", "+nbconvert==6.0.7", "+nbformat==5.1.3", "+nest-asyncio==1.5.1", "+notebook==6.3.0", "+numpy==1.20.3", "+packaging==20.9", "+pandas==1.2.4", "+pandocfilters==1.4.3", "+parso==0.8.2", "+partd==1.2.0", "+pexpect==4.8.0", "+pickleshare==0.7.5", "+Pillow==8.2.0", "+prometheus-client==0.10.1", "+prompt-toolkit==3.0.18", "+psutil==5.8.0", "+ptyprocess==0.7.0", "+pycparser==2.20", "+Pygments==2.9.0", "+pyparsing==2.4.7", "+pyrsistent==0.17.3", "+python-dateutil==2.8.1", "+pytz==2021.1", "+PyYAML==5.4.1", "+pyzmq==22.0.3", "+qtconsole==5.1.0", "+QtPy==1.9.0", "+scikit-learn==0.24.2", "+scipy==1.6.3", "+Send2Trash==1.5.0", "+six==1.16.0", "+sklearn==0.0", "+smmap==5.0.0", "+sortedcontainers==2.3.0", "+tblib==1.7.0", "+terminado==0.9.5", "+testpath==0.4.4", "+threadpoolctl==2.1.0", "+toolz==0.11.1", "+tornado==6.1", "+traitlets==5.0.5", "+typing-extensions==3.10.0.2", "+wcwidth==0.2.5", "+webencodings==0.5.1", "+widgetsnbextension==3.5.1", "+zict==2.0.0"], "sub": []}], "author": "github-classroom[bot] <66690702+github-classroom[bot]@users.noreply.github.com>", "date": "Wed Nov 17 01:34:37 2021 +0000", "msg": "Initial commit"}]