[{"diffs": [{"files": "diff --git a/README.md b/README.md", "add": ["+cnet_id: ankehao", "+name: Anke Hao"], "sub": ["-cnet_id: #", "-name: #"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:00:34 2021 -0800", "msg": "Update README.md"}, {"diffs": [{"files": "diff --git a/README.md b/README.md", "add": ["+cnet_id: ankehao", "+name: Anke Hao"], "sub": ["-cnet_id: #", "-name: #"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638385162.8852818 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:59:46 2021 -0600", "msg": "1638385162.8852818_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638385162.8852818 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            # ***SCRATCH NOTES***: tried different ways to filter out strangely specific speed limits", "+            # ***SCRATCH NOTES***: Initially just tried fill forward as a brute force method to populate latitude and longitude", "+            # ***SCRATCH NOTES***: attempts to fill NA columns with the mean", "+            # ***SCRATCH NOTES***: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "+            # ***SCRATCH NOTES***: tried out only merging on NA values", "+            # ***SCRATCH NOTES***: prior attempts at doing conditional mean by referencing beat of occurence with latitude and longitude", "+# ***SCRATCH NOTES***: filtered out an approximate latitude and longitude for the block with highest", "+# the main function to get preliminary understanding of data", "+    # ***SCRATCH NOTES***: Initially played around with how to represent multiple histograms", "+    # ***SCRATCH NOTES***: plotted subplots and separated out fatalities from injury rates", "+    # ***SCRATCH NOTES***: initially plotted Latitude and Longitude on the wrong axes", "+    # ***SCRATCH NOTES***: switched over the axes", "+    # Plotting heatmaps of specific road characteristics over latitude and longitude"], "sub": ["-            # Scratch Notes: tried different ways to filter out strangely specific speed limits", "-            # Scratch Notes: Initially just tried fill forward as a brute force method to populate latitude and longitude", "-            # Scratch Notes: attempts to fill NA columns with the mean", "-            # Scratch Notes: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "-            # Scratch Notes: tried out only merging on NA values", "-            #-----------------------", "-# filtered out an approximate latitude and longitude for the block with highest", "-# the main function.", "-def control(df, src, target, control):", "-    # def calculate_correlation_controlled(data, src, target, control):", "-    values  = df[control].unique() #get  all possible values for the control variable", "-    N = len(df) #get total size", "-    avg = 0", "-", "-    for value in values: #iterate through all of the values:", "-        #subpopulation", "-        data_sub = df[df[control] == value]", "-        N_sub  = len(data_sub) #size of subpopulation", "-", "-        #calculate correlation within the subpopulation", "-        corr = scipy.stats.pearsonr(data_sub[src], data_sub[target])[0]", "-", "-        avg  += corr*N_sub/N #calculate a weighted average", "-", "-    return scipy.stats.pearsonr(df[src], df[target])[0], avg", "-    # return None", "-    # Scratch Notes: Initially played around with how to represent multiple histograms", "-    # Scratch Notes: plotted subplots and separated out fatalities from injury rates", "-    # Scratch Notes: initially plotted Latitude and Longitude on the wrong axes", "-    # Scratch Notes: switched over the axes", "-    # fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "-    # fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "-    # df['SPEED_LIM'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "-    # corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "-    # print(corr)", "-    # print(control(cdf, 'ROAD_DEFECT', )"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:59:23 2021 -0600", "msg": "1638385162.8852818_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            # ***SCRATCH NOTES***: tried different ways to filter out strangely specific speed limits", "+            # ***SCRATCH NOTES***: Initially just tried fill forward as a brute force method to populate latitude and longitude", "+            # ***SCRATCH NOTES***: attempts to fill NA columns with the mean", "+            # ***SCRATCH NOTES***: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "+            # ***SCRATCH NOTES***: tried out only merging on NA values", "+            # ***SCRATCH NOTES***: prior attempts at doing conditional mean by referencing beat of occurence with latitude and longitude", "+# ***SCRATCH NOTES***: filtered out an approximate latitude and longitude for the block with highest", "+# the main function to get preliminary understanding of data", "+    # ***SCRATCH NOTES***: Initially played around with how to represent multiple histograms", "+    # ***SCRATCH NOTES***: plotted subplots and separated out fatalities from injury rates", "+    # ***SCRATCH NOTES***: initially plotted Latitude and Longitude on the wrong axes", "+    # ***SCRATCH NOTES***: switched over the axes", "+    # Plotting heatmaps of specific road characteristics over latitude and longitude"], "sub": ["-            # Scratch Notes: tried different ways to filter out strangely specific speed limits", "-            # Scratch Notes: Initially just tried fill forward as a brute force method to populate latitude and longitude", "-            # Scratch Notes: attempts to fill NA columns with the mean", "-            # Scratch Notes: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "-            # Scratch Notes: tried out only merging on NA values", "-            #-----------------------", "-# filtered out an approximate latitude and longitude for the block with highest", "-# the main function.", "-def control(df, src, target, control):", "-    # def calculate_correlation_controlled(data, src, target, control):", "-    values  = df[control].unique() #get  all possible values for the control variable", "-    N = len(df) #get total size", "-    avg = 0", "-", "-    for value in values: #iterate through all of the values:", "-        #subpopulation", "-        data_sub = df[df[control] == value]", "-        N_sub  = len(data_sub) #size of subpopulation", "-", "-        #calculate correlation within the subpopulation", "-        corr = scipy.stats.pearsonr(data_sub[src], data_sub[target])[0]", "-", "-        avg  += corr*N_sub/N #calculate a weighted average", "-", "-    return scipy.stats.pearsonr(df[src], df[target])[0], avg", "-    # return None", "-    # Scratch Notes: Initially played around with how to represent multiple histograms", "-    # Scratch Notes: plotted subplots and separated out fatalities from injury rates", "-    # Scratch Notes: initially plotted Latitude and Longitude on the wrong axes", "-    # Scratch Notes: switched over the axes", "-    # fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "-    # fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "-    # df['SPEED_LIM'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "-    # corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "-    # print(corr)", "-    # print(control(cdf, 'ROAD_DEFECT', )"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638384463.857918 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:48:09 2021 -0600", "msg": "1638384463.857918_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638384463.857918 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.colorbar(hex, ax=ax_speed_lim)"], "sub": ["-    plt.colorbar(hex, ax=ax_trafficway_alt)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:47:44 2021 -0600", "msg": "1638384463.857918_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.colorbar(hex, ax=ax_speed_lim)"], "sub": ["-    plt.colorbar(hex, ax=ax_trafficway_alt)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['POSTED_SPEED_LIMIT'], gridsize=50, cmap=\"copper\")"], "sub": ["-    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['SPEED_LIM'], gridsize=50, cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:47:02 2021 -0600", "msg": "1638384421.8925111_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['POSTED_SPEED_LIMIT'], gridsize=50, cmap=\"copper\")"], "sub": ["-    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['SPEED_LIM'], gridsize=50, cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638384354.4915302 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:46:04 2021 -0600", "msg": "1638384354.4915302_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638384354.4915302 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+", "+", "+    # df['SPEED_LIM'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "+    ax_speed_lim = fig.add_subplot(2, 2, 4)", "+    plt.title('Location of Speed Limits')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['SPEED_LIM'], gridsize=50, cmap=\"copper\")", "+    plt.colorbar(hex, ax=ax_trafficway_alt)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:45:54 2021 -0600", "msg": "1638384354.4915302_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+", "+", "+    # df['SPEED_LIM'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "+    ax_speed_lim = fig.add_subplot(2, 2, 4)", "+    plt.title('Location of Speed Limits')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    hex = ax_speed_lim.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['SPEED_LIM'], gridsize=50, cmap=\"copper\")", "+    plt.colorbar(hex, ax=ax_trafficway_alt)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-", "-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.subplots_adjust(hspace=0.5)"], "sub": ["-    plt.subplots_adjust(bottom=0.5)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:42:48 2021 -0600", "msg": "1638384168.6325202_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.subplots_adjust(hspace=0.5)"], "sub": ["-    plt.subplots_adjust(bottom=0.5)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.subplots_adjust(bottom=0.5)"], "sub": ["-    fig.tight_layout()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:40:39 2021 -0600", "msg": "1638384038.9070156_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.subplots_adjust(bottom=0.5)"], "sub": ["-    fig.tight_layout()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383917.340031 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:38:56 2021 -0600", "msg": "1638383917.340031_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383917.340031 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig.tight_layout()"], "sub": ["-    fig.tight_layout()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:38:37 2021 -0600", "msg": "1638383917.340031_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig.tight_layout()"], "sub": ["-    fig.tight_layout()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383886.0240073 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:38:23 2021 -0600", "msg": "1638383886.0240073_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383886.0240073 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(25,30))", "+    fig.tight_layout()"], "sub": ["-    fig = plt.figure(figsize=(15,30))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:38:06 2021 -0600", "msg": "1638383886.0240073_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(25,30))", "+    fig.tight_layout()"], "sub": ["-    fig = plt.figure(figsize=(15,30))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(15,30))"], "sub": ["-    fig = plt.figure(figsize=(35,30))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:36:40 2021 -0600", "msg": "1638383800.8123949_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(15,30))"], "sub": ["-    fig = plt.figure(figsize=(35,30))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(35,30))"], "sub": ["-    fig = plt.figure(figsize=(25,20))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:34:02 2021 -0600", "msg": "1638383641.9997456_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(35,30))"], "sub": ["-    fig = plt.figure(figsize=(25,20))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(25,20))"], "sub": ["-    fig = plt.figure(figsize=(15,20))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:28:19 2021 -0600", "msg": "1638383299.1624904_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(25,20))"], "sub": ["-    fig = plt.figure(figsize=(15,20))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383057.448701 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(15,20))"], "sub": ["-    fig = plt.figure(figsize=(20,15))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:27:06 2021 -0600", "msg": "1638383057.448701_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(15,20))"], "sub": ["-    fig = plt.figure(figsize=(20,15))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.title('Location of Road Defects')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of One Way Roads')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of Not Divided Roads')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")"], "sub": ["-    ax_road_defect.title('Location of Road Defects')", "-    ax_road_defect.xlabel(\"Longitude\")", "-    ax_road_defect.ylabel(\"Latitude\")", "-    ax_trafficway.title('Location of One Way Roads')", "-    ax_trafficway.xlabel(\"Longitude\")", "-    ax_trafficway.ylabel(\"Latitude\")", "-    ax_trafficway_alt.title('Location of Not Divided Roads')", "-    ax_trafficway_alt.xlabel(\"Longitude\")", "-    ax_trafficway_alt.ylabel(\"Latitude\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:24:17 2021 -0600", "msg": "1638383057.448701_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.title('Location of Road Defects')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of One Way Roads')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of Not Divided Roads')", "+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")"], "sub": ["-    ax_road_defect.title('Location of Road Defects')", "-    ax_road_defect.xlabel(\"Longitude\")", "-    ax_road_defect.ylabel(\"Latitude\")", "-    ax_trafficway.title('Location of One Way Roads')", "-    ax_trafficway.xlabel(\"Longitude\")", "-    ax_trafficway.ylabel(\"Latitude\")", "-    ax_trafficway_alt.title('Location of Not Divided Roads')", "-    ax_trafficway_alt.xlabel(\"Longitude\")", "-    ax_trafficway_alt.ylabel(\"Latitude\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383008.4082212 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:23:36 2021 -0600", "msg": "1638383008.4082212_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638383008.4082212 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(20,15))", "+", "+    ax_road_defect.title('Location of Road Defects')", "+    ax_road_defect.xlabel(\"Longitude\")", "+    ax_road_defect.ylabel(\"Latitude\")", "+    ax_trafficway.title('Location of One Way Roads')", "+    ax_trafficway.xlabel(\"Longitude\")", "+    ax_trafficway.ylabel(\"Latitude\")", "+", "+    ax_trafficway_alt.title('Location of Not Divided Roads')", "+    ax_trafficway_alt.xlabel(\"Longitude\")", "+    ax_trafficway_alt.ylabel(\"Latitude\")"], "sub": ["-    fig = plt.figure()", "-    # fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:23:28 2021 -0600", "msg": "1638383008.4082212_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure(figsize=(20,15))", "+", "+    ax_road_defect.title('Location of Road Defects')", "+    ax_road_defect.xlabel(\"Longitude\")", "+    ax_road_defect.ylabel(\"Latitude\")", "+    ax_trafficway.title('Location of One Way Roads')", "+    ax_trafficway.xlabel(\"Longitude\")", "+    ax_trafficway.ylabel(\"Latitude\")", "+", "+    ax_trafficway_alt.title('Location of Not Divided Roads')", "+    ax_trafficway_alt.xlabel(\"Longitude\")", "+    ax_trafficway_alt.ylabel(\"Latitude\")"], "sub": ["-    fig = plt.figure()", "-    # fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    ax_trafficway = fig.add_subplot(2, 2, 2)", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    plt.colorbar(hex, ax=ax_trafficway)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    hex = ax_trafficway_alt.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")"], "sub": ["-", "-    # ax_trafficway = fig.add_subplot(2, 2, 2)", "-    # hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    # plt.colorbar(hex, ax=ax_trafficway)", "-    # plt.xlim([-87.87, -87.5])", "-    # plt.ylim([41.63, 42.025])", "-    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:16:48 2021 -0600", "msg": "1638382607.9877338_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    ax_trafficway = fig.add_subplot(2, 2, 2)", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    plt.colorbar(hex, ax=ax_trafficway)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    hex = ax_trafficway_alt.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")"], "sub": ["-", "-    # ax_trafficway = fig.add_subplot(2, 2, 2)", "-    # hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    # plt.colorbar(hex, ax=ax_trafficway)", "-    # plt.xlim([-87.87, -87.5])", "-    # plt.ylim([41.63, 42.025])", "-    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382564.9482913 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:16:13 2021 -0600", "msg": "1638382564.9482913_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382564.9482913 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # ax_trafficway = fig.add_subplot(2, 2, 2)", "+    # hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    # plt.colorbar(hex, ax=ax_trafficway)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])"], "sub": ["-    ax_trafficway = fig.add_subplot(2, 2, 2)", "-    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    plt.colorbar(hex, ax=ax_trafficway)", "-    plt.xlim([-87.87, -87.5])", "-    plt.ylim([41.63, 42.025])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:16:05 2021 -0600", "msg": "1638382564.9482913_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # ax_trafficway = fig.add_subplot(2, 2, 2)", "+    # hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    # plt.colorbar(hex, ax=ax_trafficway)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])"], "sub": ["-    ax_trafficway = fig.add_subplot(2, 2, 2)", "-    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    plt.colorbar(hex, ax=ax_trafficway)", "-    plt.xlim([-87.87, -87.5])", "-    plt.ylim([41.63, 42.025])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    ax_trafficway_alt = fig.add_subplot(2, 2, 3)"], "sub": ["-    ax_trafficway_alt = fig.add_subplot(2, 2, 2)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:14:48 2021 -0600", "msg": "1638382487.9385712_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    ax_trafficway_alt = fig.add_subplot(2, 2, 3)"], "sub": ["-    ax_trafficway_alt = fig.add_subplot(2, 2, 2)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "+    ax_road_defect = fig.add_subplot(2, 2, 1)", "+    plt.colorbar(hex, ax=ax_road_defect)", "+    # fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "+    ax_trafficway = fig.add_subplot(2, 2, 2)", "+    plt.colorbar(hex, ax=ax_trafficway)", "+    # fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "+    ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "+    plt.colorbar(hex, ax=ax_trafficway_alt)"], "sub": ["-    fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "-    fig_road_defect.colorbar(hex, ax=ax_road_defect)", "-    fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "-    fig_trafficway.colorbar(hex, ax=ax_trafficway)", "-    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "-    fig_trafficway_alt.colorbar(hex, ax=ax_trafficway_alt)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:13:48 2021 -0600", "msg": "1638382428.0136633_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "+    ax_road_defect = fig.add_subplot(2, 2, 1)", "+    plt.colorbar(hex, ax=ax_road_defect)", "+    # fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "+    ax_trafficway = fig.add_subplot(2, 2, 2)", "+    plt.colorbar(hex, ax=ax_trafficway)", "+    # fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "+    ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "+    plt.colorbar(hex, ax=ax_trafficway_alt)"], "sub": ["-    fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "-    fig_road_defect.colorbar(hex, ax=ax_road_defect)", "-    fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "-    fig_trafficway.colorbar(hex, ax=ax_trafficway)", "-    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)", "-    fig_trafficway_alt.colorbar(hex, ax=ax_trafficway_alt)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382290.8868413 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:11:38 2021 -0600", "msg": "1638382290.8868413_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382290.8868413 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "+    fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "+    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)"], "sub": ["-    fig_road_defect, ax_road_defect = fig.add_subplot((2, 2, 1))", "-    fig_trafficway, ax_trafficway = fig.add_subplot((2, 2, 2))", "-    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot((2, 2, 2))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:11:31 2021 -0600", "msg": "1638382290.8868413_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig_road_defect, ax_road_defect = fig.add_subplot(2, 2, 1)", "+    fig_trafficway, ax_trafficway = fig.add_subplot(2, 2, 2)", "+    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot(2, 2, 2)"], "sub": ["-    fig_road_defect, ax_road_defect = fig.add_subplot((2, 2, 1))", "-    fig_trafficway, ax_trafficway = fig.add_subplot((2, 2, 2))", "-    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot((2, 2, 2))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382257.9836695 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:11:05 2021 -0600", "msg": "1638382257.9836695_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638382257.9836695 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure()", "+    fig_road_defect, ax_road_defect = fig.add_subplot((2, 2, 1))", "+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig_road_defect.colorbar(hex, ax=ax_road_defect)", "+    fig_trafficway, ax_trafficway = fig.add_subplot((2, 2, 2))", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig_trafficway.colorbar(hex, ax=ax_trafficway)", "+    df['TRAFFICWAY_BINARIZED_ALT'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "+    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot((2, 2, 2))", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")", "+    fig_trafficway_alt.colorbar(hex, ax=ax_trafficway_alt)"], "sub": ["-    fig, ax_road_defect = plt.subplots()", "-    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    fig.colorbar(hex, ax=ax_road_defect)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:10:58 2021 -0600", "msg": "1638382257.9836695_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure()", "+    fig_road_defect, ax_road_defect = fig.add_subplot((2, 2, 1))", "+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig_road_defect.colorbar(hex, ax=ax_road_defect)", "+    fig_trafficway, ax_trafficway = fig.add_subplot((2, 2, 2))", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig_trafficway.colorbar(hex, ax=ax_trafficway)", "+    df['TRAFFICWAY_BINARIZED_ALT'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'NOT DIVIDED' else 0)", "+    fig_trafficway_alt, ax_trafficway_alt = fig.add_subplot((2, 2, 2))", "+    hex = ax_trafficway.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED_ALT'], gridsize=50, cmap=\"copper\")", "+    fig_trafficway_alt.colorbar(hex, ax=ax_trafficway_alt)"], "sub": ["-    fig, ax_road_defect = plt.subplots()", "-    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")", "-    fig.colorbar(hex, ax=ax_road_defect)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    df['TRAFFICWAY_BINARIZED'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'ONE-WAY' else 0)", "+    # hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")"], "sub": ["-    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 12:06:03 2021 -0600", "msg": "1638381963.5431893_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    df['TRAFFICWAY_BINARIZED'] = df['TRAFFICWAY_TYPE'].apply(lambda x: 1 if x == 'ONE-WAY' else 0)", "+    # hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['TRAFFICWAY_BINARIZED'], gridsize=50, cmap=\"copper\")"], "sub": ["-    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-    hex.xlim([-87.87, -87.5])", "-    hex.ylim([41.63, 42.025])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:59:46 2021 -0600", "msg": "1638381585.8424196_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-    hex.xlim([-87.87, -87.5])", "-    hex.ylim([41.63, 42.025])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381539.380383 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:59:23 2021 -0600", "msg": "1638381539.380383_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381539.380383 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex.xlim([-87.87, -87.5])", "+    hex.ylim([41.63, 42.025])"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:58:59 2021 -0600", "msg": "1638381539.380383_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex.xlim([-87.87, -87.5])", "+    hex.ylim([41.63, 42.025])"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"], "sub": ["-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:57:38 2021 -0600", "msg": "1638381458.1213207_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], C=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"], "sub": ["-    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381401.283377 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:56:59 2021 -0600", "msg": "1638381401.283377_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381401.283377 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig.colorbar(hex, ax=ax_road_defect)"], "sub": ["-    sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    fig.colorbar(sc, ax=ax_road_defect)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:56:41 2021 -0600", "msg": "1638381401.283377_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    hex = ax_road_defect.hexbin(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'], gridsize=50, cmap=\"copper\")", "+    fig.colorbar(hex, ax=ax_road_defect)"], "sub": ["-    sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    fig.colorbar(sc, ax=ax_road_defect)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381225.6506345 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:54:47 2021 -0600", "msg": "1638381225.6506345_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381225.6506345 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plt.xlabel(\"Longitude\")", "+    # plt.ylabel(\"Latitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])", "+    # plt.colorbar()", "+    fig, ax_road_defect = plt.subplots()", "+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    fig.colorbar(sc, ax=ax_road_defect)"], "sub": ["-    plt.xlabel(\"Longitude\")", "-    plt.ylabel(\"Latitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([-87.87, -87.5])", "-    plt.ylim([41.63, 42.025])", "-    plt.colorbar()", "-    # fig, ax_road_defect = plt.subplots()", "-    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    # fig.colorbar(sc, ax=ax_road_defect)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:53:46 2021 -0600", "msg": "1638381225.6506345_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plt.xlabel(\"Longitude\")", "+    # plt.ylabel(\"Latitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])", "+    # plt.colorbar()", "+    fig, ax_road_defect = plt.subplots()", "+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    fig.colorbar(sc, ax=ax_road_defect)"], "sub": ["-    plt.xlabel(\"Longitude\")", "-    plt.ylabel(\"Latitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([-87.87, -87.5])", "-    plt.ylim([41.63, 42.025])", "-    plt.colorbar()", "-    # fig, ax_road_defect = plt.subplots()", "-    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-    # fig.colorbar(sc, ax=ax_road_defect)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381174.3794677 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:53:19 2021 -0600", "msg": "1638381174.3794677_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638381174.3794677 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of Crashes')", "+    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    plt.colorbar()", "+    # fig, ax_road_defect = plt.subplots()", "+    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    # fig.colorbar(sc, ax=ax_road_defect)"], "sub": ["-    # plt.xlabel(\"Longitude\")", "-    # plt.ylabel(\"Latitude\")", "-    # plt.title('Location of Crashes')", "-    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "-    # plt.xlim([-87.87, -87.5])", "-    # plt.ylim([41.63, 42.025])", "-    # plt.colorbar()", "-    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:52:55 2021 -0600", "msg": "1638381174.3794677_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")", "+    plt.title('Location of Crashes')", "+    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])", "+    plt.colorbar()", "+    # fig, ax_road_defect = plt.subplots()", "+    # df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    # sc = ax_road_defect.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "+    # fig.colorbar(sc, ax=ax_road_defect)"], "sub": ["-    # plt.xlabel(\"Longitude\")", "-    # plt.ylabel(\"Latitude\")", "-    # plt.title('Location of Crashes')", "-    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "-    # plt.xlim([-87.87, -87.5])", "-    # plt.ylim([41.63, 42.025])", "-    # plt.colorbar()", "-    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")", "-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()"], "sub": ["-    # plt.show()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:49:13 2021 -0600", "msg": "1638380952.9514894_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()"], "sub": ["-    # plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380880.1086595 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:48:16 2021 -0600", "msg": "1638380880.1086595_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380880.1086595 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df.groupby('LATITUDE')('LONGITUDE')['ROAD_DEFECT'].count(),  cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:48:00 2021 -0600", "msg": "1638380880.1086595_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df['ROAD_DEFECT_BINARIZED'] = df['ROAD_DEFECT'].apply(lambda x: 0 if x == 'NO DEFECTS' else 1)", "+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT_BINARIZED'],  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df.groupby('LATITUDE')('LONGITUDE')['ROAD_DEFECT'].count(),  cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380536.99211 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:42:33 2021 -0600", "msg": "1638380536.99211_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380536.99211 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df.groupby('LATITUDE')('LONGITUDE')['ROAD_DEFECT'].count(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].count(),  cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:42:17 2021 -0600", "msg": "1638380536.99211_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df.groupby('LATITUDE')('LONGITUDE')['ROAD_DEFECT'].count(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].count(),  cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380460.4077456 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:41:17 2021 -0600", "msg": "1638380460.4077456_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380460.4077456 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].count(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].value_counts(),  cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:41:00 2021 -0600", "msg": "1638380460.4077456_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].count(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].value_counts(),  cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380268.5905674 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:38:04 2021 -0600", "msg": "1638380268.5905674_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380268.5905674 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].value_counts(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'],  cmap=\"copper\")"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:37:48 2021 -0600", "msg": "1638380268.5905674_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'].value_counts(),  cmap=\"copper\")"], "sub": ["-    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'],  cmap=\"copper\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380204.0064003 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:37:08 2021 -0600", "msg": "1638380204.0064003_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638380204.0064003 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # --- Question 5 ---", "+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'],  cmap=\"copper\")", "+    # corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "+    # print(corr)", "+    plot(cdf)"], "sub": ["-    corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "-    print(corr)", "-    # plot(cdf)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:36:44 2021 -0600", "msg": "1638380204.0064003_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # --- Question 5 ---", "+    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c=df['ROAD_DEFECT'],  cmap=\"copper\")", "+    # corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "+    # print(corr)", "+    plot(cdf)"], "sub": ["-    corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "-    print(corr)", "-    # plot(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638379631.3734505 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:27:36 2021 -0600", "msg": "1638379631.3734505_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638379631.3734505 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/New Microsoft Excel Worksheet.xlsx b/explore/New Microsoft Excel Worksheet.xlsx", "add": [], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    plt.xlabel(\"Longitude\")", "+    plt.ylabel(\"Latitude\")"], "sub": ["-    plt.xlabel(\"Latitude\")", "-    plt.ylabel(\"Longitude\")"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+            # Scratch Notes: tried different ways to filter out strangely specific speed limits", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            # Scratch Notes: Initially just tried fill forward as a brute force method to populate latitude and longitude", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+            # Scratch Notes: attempts to fill NA columns with the mean", "+", "+            # Scratch Notes: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "+            # Scratch Notes: tried out only merging on NA values", "+", "+# --- Question 5 ---", "+# filtered out an approximate latitude and longitude for the block with highest", "+# crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+# in the filter() function below, then printed out its descriptive stats in", "+# the main function.", "+    # Filtering latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+def control(df, src, target, control):", "+    # def calculate_correlation_controlled(data, src, target, control):", "+    values  = df[control].unique() #get  all possible values for the control variable", "+    N = len(df) #get total size", "+    avg = 0", "+", "+    for value in values: #iterate through all of the values:", "+        #subpopulation", "+        data_sub = df[df[control] == value]", "+        N_sub  = len(data_sub) #size of subpopulation", "+", "+        #calculate correlation within the subpopulation", "+        corr = scipy.stats.pearsonr(data_sub[src], data_sub[target])[0]", "+", "+        avg  += corr*N_sub/N #calculate a weighted average", "+", "+    return scipy.stats.pearsonr(df[src], df[target])[0], avg", "+    # return None", "+", "+# --- Part of Question 3 ---", "+", "+    # Scratch Notes: Initially played around with how to represent multiple histograms", "+    # on one plot", "+    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    # axs[2, 0].set_title('Road Condition vs Crash Frequency')", "+    # axs[1, 1].plot(x, -y, 'tab:red')", "+    # axs[1, 1].set_title('Axis [1, 1]')", "+", "+    # Eventually settled on adding subplots to plt.figure()", "+    # Scratch Notes: plotted subplots and separated out fatalities from injury rates", "+    # as modifications to Question 2", "+    # Scratch Notes: initially plotted Latitude and Longitude on the wrong axes", "+    # plt.xlabel(\"Latitude\")", "+    # plt.ylabel(\"Longitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([41.63, 42.025])", "+    # plt.ylim([-87.87, -87.5])", "+    # plt.colorbar()", "+", "+    # Scratch Notes: switched over the axes", "+    # plt.xlabel(\"Longitude\")", "+    # plt.ylabel(\"Latitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])", "+    # plt.colorbar()", "+    # zoom_in = filter(cdf)", "+    # get_descriptive_stats(zoom_in)", "+    corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "+    print(corr)", "+    # print(control(cdf, 'ROAD_DEFECT', )"], "sub": ["-#TODO 1.", "-            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "-            df = df.replace({'LONGITUDE': {0:np.NaN}})", "-            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "-            # df.fillna(method='ffill')", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)", "-        # print('Missing Values -',crashes[column].isna().sum())", "-        # print('---')", "-    # (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "-        # print(rate)", "-#TODO 2.", "-    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "-    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "-    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "-    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    # axs[2, 0].set_title('Road Condition vs Crash Frequency')", "-    # axs[1, 1].plot(x, -y, 'tab:red')", "-    # axs[1, 1].set_title('Axis [1, 1]')", "-    # dawn as 1/24, dusk as 1/24, night as 10/24, day as 12/24", "-    # dawn is .017715, dusk is .030925, darkness is .048293, darkness - lighted road = .22333, day is .67973", "-    # weights: 2.3521,  1.3473,   8.6279,   1.8657,   0.73559", "-    plt.xlabel(\"Latitude\")", "-    plt.ylabel(\"Longitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])", "-    plt.colorbar()", "-", "-    # fig = plt.figure()", "-    # using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])", "-", "-    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)", "-    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)", "-", "-    # --- Question 5 ---", "-    # filtered out an approximate latitude and longitude for the block with highest", "-    # crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "-    # copied the filtered values to a new csv, then printed out descriptive stats", "-    # for that csv in the main function.", "-", "-    # df_2 = load('highest_freq_crashes.csv')", "-    zoom_in = filter(cdf)", "-    get_descriptive_stats(zoom_in)", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Dec 1 11:27:12 2021 -0600", "msg": "1638379631.3734505_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+            # Scratch Notes: tried different ways to filter out strangely specific speed limits", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            # Scratch Notes: Initially just tried fill forward as a brute force method to populate latitude and longitude", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+            # Scratch Notes: attempts to fill NA columns with the mean", "+", "+            # Scratch Notes: decided to create a new dataframe 'beats' with beat of occurrence and corresponding latitude/longitude", "+            # Scratch Notes: tried out only merging on NA values", "+", "+# --- Question 5 ---", "+# filtered out an approximate latitude and longitude for the block with highest", "+# crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+# in the filter() function below, then printed out its descriptive stats in", "+# the main function.", "+    # Filtering latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+def control(df, src, target, control):", "+    # def calculate_correlation_controlled(data, src, target, control):", "+    values  = df[control].unique() #get  all possible values for the control variable", "+    N = len(df) #get total size", "+    avg = 0", "+", "+    for value in values: #iterate through all of the values:", "+        #subpopulation", "+        data_sub = df[df[control] == value]", "+        N_sub  = len(data_sub) #size of subpopulation", "+", "+        #calculate correlation within the subpopulation", "+        corr = scipy.stats.pearsonr(data_sub[src], data_sub[target])[0]", "+", "+        avg  += corr*N_sub/N #calculate a weighted average", "+", "+    return scipy.stats.pearsonr(df[src], df[target])[0], avg", "+    # return None", "+", "+# --- Part of Question 3 ---", "+", "+    # Scratch Notes: Initially played around with how to represent multiple histograms", "+    # on one plot", "+    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    # axs[2, 0].set_title('Road Condition vs Crash Frequency')", "+    # axs[1, 1].plot(x, -y, 'tab:red')", "+    # axs[1, 1].set_title('Axis [1, 1]')", "+", "+    # Eventually settled on adding subplots to plt.figure()", "+    # Scratch Notes: plotted subplots and separated out fatalities from injury rates", "+    # as modifications to Question 2", "+    # Scratch Notes: initially plotted Latitude and Longitude on the wrong axes", "+    # plt.xlabel(\"Latitude\")", "+    # plt.ylabel(\"Longitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([41.63, 42.025])", "+    # plt.ylim([-87.87, -87.5])", "+    # plt.colorbar()", "+", "+    # Scratch Notes: switched over the axes", "+    # plt.xlabel(\"Longitude\")", "+    # plt.ylabel(\"Latitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([-87.87, -87.5])", "+    # plt.ylim([41.63, 42.025])", "+    # plt.colorbar()", "+    # zoom_in = filter(cdf)", "+    # get_descriptive_stats(zoom_in)", "+    corr = scipy.stats.pearsonr(cdf['LATITUDE'], cdf['ROAD_DEFECT'])[0]", "+    print(corr)", "+    # print(control(cdf, 'ROAD_DEFECT', )"], "sub": ["-#TODO 1.", "-            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "-            df = df.replace({'LONGITUDE': {0:np.NaN}})", "-            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "-            # df.fillna(method='ffill')", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)", "-        # print('Missing Values -',crashes[column].isna().sum())", "-        # print('---')", "-    # (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "-        # print(rate)", "-#TODO 2.", "-    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "-    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "-    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "-    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    # axs[2, 0].set_title('Road Condition vs Crash Frequency')", "-    # axs[1, 1].plot(x, -y, 'tab:red')", "-    # axs[1, 1].set_title('Axis [1, 1]')", "-    # dawn as 1/24, dusk as 1/24, night as 10/24, day as 12/24", "-    # dawn is .017715, dusk is .030925, darkness is .048293, darkness - lighted road = .22333, day is .67973", "-    # weights: 2.3521,  1.3473,   8.6279,   1.8657,   0.73559", "-    plt.xlabel(\"Latitude\")", "-    plt.ylabel(\"Longitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])", "-    plt.colorbar()", "-", "-    # fig = plt.figure()", "-    # using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])", "-", "-    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)", "-    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)", "-", "-    # --- Question 5 ---", "-    # filtered out an approximate latitude and longitude for the block with highest", "-    # crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "-    # copied the filtered values to a new csv, then printed out descriptive stats", "-    # for that csv in the main function.", "-", "-    # df_2 = load('highest_freq_crashes.csv')", "-    zoom_in = filter(cdf)", "-    get_descriptive_stats(zoom_in)", "-"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638337109.0234277 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:38:32 2021 -0600", "msg": "1638337109.0234277_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638337109.0234277 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:38:29 2021 -0600", "msg": "1638337109.0234277_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    plt.xlim([-87.87, -87.5])", "+    plt.ylim([41.63, 42.025])"], "sub": ["-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638337080.4717622 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:38:03 2021 -0600", "msg": "1638337080.4717622_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638337080.4717622 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:38:00 2021 -0600", "msg": "1638337080.4717622_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    plt.hist2d(df['LONGITUDE'], df['LATITUDE'], (100, 75), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638336833.3027024 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:33:57 2021 -0600", "msg": "1638336833.3027024_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638336833.3027024 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    ax_w.set(ylabel='Crashes (log scale)')", "+    ax_l.set(ylabel='Crashes (log scale)')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    ax_r.set(ylabel='Crashes (log scale)')"], "sub": ["-    # ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.hist(np.log10(df['LIGHTING_CONDITION'].count()+1))", "-    # ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    # ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:33:42 2021 -0600", "msg": "1638336821.8938692_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    ax_w.set(ylabel='Crashes (log scale)')", "+    ax_l.set(ylabel='Crashes (log scale)')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    ax_r.set(ylabel='Crashes (log scale)')"], "sub": ["-    # ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.hist(np.log10(df['LIGHTING_CONDITION'].count()+1))", "-    # ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    # ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336493.75115 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:28:21 2021 -0600", "msg": "1638336493.75115_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336493.75115 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) \\", "+        & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"], "sub": ["-    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:28:13 2021 -0600", "msg": "1638336493.75115_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) \\", "+        & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"], "sub": ["-    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336406.2474897 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:26:53 2021 -0600", "msg": "1638336406.2474897_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336406.2474897 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # get_descriptive_stats(cdf)"], "sub": ["-", "-    get_descriptive_stats(cdf)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:26:46 2021 -0600", "msg": "1638336406.2474897_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # get_descriptive_stats(cdf)"], "sub": ["-", "-    get_descriptive_stats(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336220.618109 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:23:48 2021 -0600", "msg": "1638336220.618109_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638336220.618109 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/log2 b/explore/log2", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"], "sub": ["-    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) | (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) | (df['LONGITUDE'] <= -87.6202))]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:23:40 2021 -0600", "msg": "1638336220.618109_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) & (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) & (df['LONGITUDE'] <= -87.6202))]"], "sub": ["-    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) | (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) | (df['LONGITUDE'] <= -87.6202))]"]}, {"files": "diff --git a/explore/log2 b/explore/log2", "add": [], "sub": []}, {"files": "diff --git a/explore/log2.txt b/explore/log2.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638335885.4131718 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:18:13 2021 -0600", "msg": "1638335885.4131718_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638335885.4131718 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638335843.8055573 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:17:33 2021 -0600", "msg": "1638335843.8055573_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638335843.8055573 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def filter(df):", "+    # (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) | (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) | (df['LONGITUDE'] <= -87.6202))]", "+", "+    return zoom_in", "+    # df_2 = load('highest_freq_crashes.csv')", "+    zoom_in = filter(cdf)", "+    get_descriptive_stats(zoom_in)"], "sub": ["-", "-    # fig, ax = plt.subplots()", "-    # ax.plot(activity, dog, label=\"dog\")", "-    # ax.plot(activity, cat, label=\"cat\")", "-    # ax.legend()", "-", "-    df_2 = load('highest_freq_crashes.csv')", "-    get_descriptive_stats(df_2)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 23:17:23 2021 -0600", "msg": "1638335843.8055573_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def filter(df):", "+    # (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+    zoom_in = df.loc[((df['LATITUDE'] >= 41.8911) | (df['LATITUDE'] <= 41.8948)) & ((df['LONGITUDE'] >= -87.6253) | (df['LONGITUDE'] <= -87.6202))]", "+", "+    return zoom_in", "+    # df_2 = load('highest_freq_crashes.csv')", "+    zoom_in = filter(cdf)", "+    get_descriptive_stats(zoom_in)"], "sub": ["-", "-    # fig, ax = plt.subplots()", "-    # ax.plot(activity, dog, label=\"dog\")", "-    # ax.plot(activity, cat, label=\"cat\")", "-    # ax.legend()", "-", "-    df_2 = load('highest_freq_crashes.csv')", "-    get_descriptive_stats(df_2)"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333716.6886547 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:42:07 2021 -0600", "msg": "1638333716.6886547_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333716.6886547 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(20,15))"], "sub": ["-    fig = plt.figure(figsize=(15,20))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:41:56 2021 -0600", "msg": "1638333716.6886547_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(20,15))"], "sub": ["-    fig = plt.figure(figsize=(15,20))"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333655.8121195 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:41:06 2021 -0600", "msg": "1638333655.8121195_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333655.8121195 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(15,20))"], "sub": ["-    fig = plt.figure(figsize=(15,15))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:40:55 2021 -0600", "msg": "1638333655.8121195_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(15,20))"], "sub": ["-    fig = plt.figure(figsize=(15,15))"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333586.136035 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:39:56 2021 -0600", "msg": "1638333586.136035_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333586.136035 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)"], "sub": ["-    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:39:46 2021 -0600", "msg": "1638333586.136035_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar', logy = True)"], "sub": ["-    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333514.5444434 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:38:46 2021 -0600", "msg": "1638333514.5444434_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333514.5444434 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+from textwrap import wrap"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:38:34 2021 -0600", "msg": "1638333514.5444434_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+from textwrap import wrap"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333486.087163 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:38:10 2021 -0600", "msg": "1638333486.087163_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638333486.087163 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(15,15))", "+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar', logy = True)"], "sub": ["-    fig = plt.figure()", "-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:38:06 2021 -0600", "msg": "1638333486.087163_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+    fig = plt.figure(figsize=(15,15))", "+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar', logy = True)", "+    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar', logy = True)"], "sub": ["-    fig = plt.figure()", "-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638333158.9295032 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:32:43 2021 -0600", "msg": "1638333158.9295032_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638333158.9295032 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    fig = plt.figure(figsize=(15,15))"], "sub": ["-    fig = plt.figure()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:32:39 2021 -0600", "msg": "1638333158.9295032_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    fig = plt.figure(figsize=(15,15))"], "sub": ["-    fig = plt.figure()"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332959.9259832 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:29:24 2021 -0600", "msg": "1638332959.9259832_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332959.9259832 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    plt.yscale('log')", "+    plt.yscale('log')", "+    plt.yscale('log')"], "sub": ["-    plt.xscale('log')", "-    plt.xscale('log')", "-    plt.xscale('log')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:29:20 2021 -0600", "msg": "1638332959.9259832_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    plt.yscale('log')", "+    plt.yscale('log')", "+    plt.yscale('log')"], "sub": ["-    plt.xscale('log')", "-    plt.xscale('log')", "-    plt.xscale('log')"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332838.1046395 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:27:22 2021 -0600", "msg": "1638332838.1046395_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332838.1046395 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    plt.xscale('log')", "+    # ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "+    plt.xscale('log')", "+    plt.xscale('log')"], "sub": ["-    ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:27:18 2021 -0600", "msg": "1638332838.1046395_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    plt.xscale('log')", "+    # ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "+    plt.xscale('log')", "+    plt.xscale('log')"], "sub": ["-    ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332743.614801 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:25:47 2021 -0600", "msg": "1638332743.614801_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638332743.614801 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    # ax_l.hist(np.log10(df['LIGHTING_CONDITION'].count()+1))", "+    ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')"], "sub": ["-    # ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "-    ax_l.set_title('Lighting Condition vs Crash Frequency')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 22:25:43 2021 -0600", "msg": "1638332743.614801_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    # ax_l.hist(np.log10(df['LIGHTING_CONDITION'].count()+1))", "+    ax_l.groupby('LIGHTING_CONDITION').value_counts().plot(kind='bar', title='Lighting Condition vs Crash Frequency', logy=True, figsize=(12,5))", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')"], "sub": ["-    # ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "-    ax_l.set_title('Lighting Condition vs Crash Frequency')"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638328665.0069664 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:17:48 2021 -0600", "msg": "1638328665.0069664_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638328665.0069664 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    # ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "+    ax_w.hist(df['WEATHER_CONDITION'])", "+    # ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "+    ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'])"], "sub": ["-    ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "-    ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "-    ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "-    #plt.hist(np.log10(customers['BALANCE']+1))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:17:45 2021 -0600", "msg": "1638328665.0069664_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+    # ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "+    ax_w.hist(df['WEATHER_CONDITION'])", "+    # ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "+    ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'])"], "sub": ["-    ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "-    ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "-    ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "-    #plt.hist(np.log10(customers['BALANCE']+1))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638328525.3083582 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:15:28 2021 -0600", "msg": "1638328525.3083582_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638328525.3083582 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638328497.9285126 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:15:10 2021 -0600", "msg": "1638328497.9285126_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638328497.9285126 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638328440.204959 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:14:05 2021 -0600", "msg": "1638328440.204959_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638328440.204959 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    return df", "+    cdf.to_csv('clean.csv')"], "sub": ["-    return df #demo", "-    cdf.to_csv('clean5.csv')"]}, {"files": "diff --git a/explore/log copy.txt b/explore/log copy.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/log.txt b/explore/log.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+import numpy as np", "+    ax_w.hist(np.log10(df['WEATHER_CONDITION']+1))", "+    ax_l.hist(np.log10(df['LIGHTING_CONDITION']+1))", "+    ax_r.hist(np.log10(df['ROADWAY_SURFACE_COND']+1))", "+    #plt.hist(np.log10(customers['BALANCE']+1))"], "sub": ["-", "-    ax_w.hist(df['WEATHER_CONDITION'])", "-    ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_r.hist(df['ROADWAY_SURFACE_COND'])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # filtered out an approximate latitude and longitude for the block with highest", "+    # crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+    # copied the filtered values to a new csv, then printed out descriptive stats", "+    # for that csv in the main function.", "+", "+", "+    # --- Question 5 ---"], "sub": ["-    # factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "-    # plt.xticks(range(0,6),factors, rotation='vertical')", "-    # plt.yticks(range(0,6),factors)", "-    # img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "-    # plt.colorbar(img)", "-    # corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "-    # print(corr)", "-    # if (df[] == 'MOST_SEVERE_INJURY'):", "-    #         print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Tue Nov 30 21:14:00 2021 -0600", "msg": "1638328440.204959_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # filtered out an approximate latitude and longitude for the block with highest", "+    # crash frequency (Latitude: 41.8911 to 41.8948, Longitude: -87.6253 to -87.6202)", "+    # copied the filtered values to a new csv, then printed out descriptive stats", "+    # for that csv in the main function.", "+", "+", "+    # --- Question 5 ---"], "sub": ["-    # factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "-    # plt.xticks(range(0,6),factors, rotation='vertical')", "-    # plt.yticks(range(0,6),factors)", "-    # img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "-    # plt.colorbar(img)", "-    # corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "-    # print(corr)", "-    # if (df[] == 'MOST_SEVERE_INJURY'):", "-    #         print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638067216.8212233 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:40:24 2021 -0800", "msg": "1638067216.8212233_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638067216.8212233 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638067005.0062232 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    plot(cdf)", "-    plt.show()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:40:02 2021 -0800", "msg": "1638067005.0062232_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    plot(cdf)", "-    plt.show()"]}, {"files": "diff --git a/explore/log copy.txt b/explore/log copy.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/log.txt b/explore/log.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # print('Column: ', column)", "+        # print('Column: ', column)"], "sub": ["-        print('Column: ', column)", "-        print('Column: ', column)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:36:45 2021 -0800", "msg": "1638067005.0062232_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # print('Column: ', column)", "+        # print('Column: ', column)"], "sub": ["-        print('Column: ', column)", "-        print('Column: ', column)"]}, {"files": "diff --git a/explore/log.txt b/explore/log.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638066808.8237503 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:33:46 2021 -0800", "msg": "1638066808.8237503_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638066808.8237503 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638066687.687957 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:31:31 2021 -0800", "msg": "1638066687.687957_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638066687.687957 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df_2 = load('highest_freq_crashes.csv')"], "sub": ["-    df_2 = load('highest_freq_crahes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:31:27 2021 -0800", "msg": "1638066687.687957_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df_2 = load('highest_freq_crashes.csv')"], "sub": ["-    df_2 = load('highest_freq_crahes')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638066670.3031304 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:31:14 2021 -0800", "msg": "1638066670.3031304_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638066670.3031304 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/New Microsoft Excel Worksheet.xlsx b/explore/New Microsoft Excel Worksheet.xlsx", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'TRAFFICWAY_TYPE'):", "+            print('TRAFFICWAY_TYPE TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROAD_DEFECT'):", "+            print('ROAD_DEFECT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_TOTAL'):", "+            print('INJURIES_TOTAL TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_FATAL'):", "+            print('INJURIES_FATAL TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_INCAPACITATING'):", "+            print('INJURIES_INCAPACITATING TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_NON_INCAPACITATING'):", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_NO_INDICATION'):", "+            print('INJURIES_NO_INDICATION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+    # if (df[] == 'MOST_SEVERE_INJURY'):", "+    #         print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+    df_2 = load('highest_freq_crahes')", "+    get_descriptive_stats(df_2)", "+"], "sub": ["-        # if (column == 'WEATHER_CONDITION'):", "-        #     print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'LIGHTING_CONDITION'):", "-        #     print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'TRAFFICWAY_TYPE'):", "-        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROADWAY_SURFACE_COND'):", "-        #     print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROAD_DEFECT'):", "-        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_TOTAL'):", "-        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_FATAL'):", "-        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_INCAPACITATING'):", "-        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_NON_INCAPACITATING'):", "-        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_NO_INDICATION'):", "-        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:31:10 2021 -0800", "msg": "1638066670.3031304_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'TRAFFICWAY_TYPE'):", "+            print('TRAFFICWAY_TYPE TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROAD_DEFECT'):", "+            print('ROAD_DEFECT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_TOTAL'):", "+            print('INJURIES_TOTAL TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_FATAL'):", "+            print('INJURIES_FATAL TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_INCAPACITATING'):", "+            print('INJURIES_INCAPACITATING TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_NON_INCAPACITATING'):", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'INJURIES_NO_INDICATION'):", "+            print('INJURIES_NO_INDICATION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+    # if (df[] == 'MOST_SEVERE_INJURY'):", "+    #         print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+    df_2 = load('highest_freq_crahes')", "+    get_descriptive_stats(df_2)", "+"], "sub": ["-        # if (column == 'WEATHER_CONDITION'):", "-        #     print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'LIGHTING_CONDITION'):", "-        #     print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'TRAFFICWAY_TYPE'):", "-        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROADWAY_SURFACE_COND'):", "-        #     print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROAD_DEFECT'):", "-        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_TOTAL'):", "-        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_FATAL'):", "-        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_INCAPACITATING'):", "-        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_NON_INCAPACITATING'):", "-        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'INJURIES_NO_INDICATION'):", "-        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    get_descriptive_stats(cdf)"], "sub": ["-    # get_descriptive_stats(cdf)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:23:10 2021 -0800", "msg": "1638066190.026887_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    get_descriptive_stats(cdf)"], "sub": ["-    # get_descriptive_stats(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638066174.851236 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:23:04 2021 -0800", "msg": "1638066174.851236_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638066174.851236 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638065039.0265186 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:22:50 2021 -0800", "msg": "1638065039.0265186_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            print('MOST_SEVERE_INJURY TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638064930.088056 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:03:54 2021 -0800", "msg": "1638064930.088056_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (150, 200), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()"], "sub": ["-    # plt.show()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:02:10 2021 -0800", "msg": "1638064930.088056_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()"], "sub": ["-    # plt.show()"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlabel(\"Latitude\")", "+    plt.ylabel(\"Longitude\")", "+    plt.title('Location of Crashes')", "+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "+    plt.xlim([41.63, 42.025])", "+    plt.ylim([-87.87, -87.5])", "+    plt.colorbar()", "+    # corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "+    # print(corr)"], "sub": ["-    # plt.xlabel(\"Latitude\")", "-    # plt.ylabel(\"Longitude\")", "-    # plt.title('Location of Crashes')", "-    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "-    # plt.xlim([41.63, 42.025])", "-    # plt.ylim([-87.87, -87.5])", "-    # plt.colorbar()", "-    corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "-    print(corr)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 18:02:02 2021 -0800", "msg": "1638064922.788571_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlabel(\"Latitude\")", "+    plt.ylabel(\"Longitude\")", "+    plt.title('Location of Crashes')", "+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "+    plt.xlim([41.63, 42.025])", "+    plt.ylim([-87.87, -87.5])", "+    plt.colorbar()", "+    # corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "+    # print(corr)"], "sub": ["-    # plt.xlabel(\"Latitude\")", "-    # plt.ylabel(\"Longitude\")", "-    # plt.title('Location of Crashes')", "-    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "-    # plt.xlim([41.63, 42.025])", "-    # plt.ylim([-87.87, -87.5])", "-    # plt.colorbar()", "-    corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "-    print(corr)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638064075.079804 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 17:48:02 2021 -0800", "msg": "1638064075.079804_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638064075.079804 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plt.show()"], "sub": ["-    plt.show()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 17:47:55 2021 -0800", "msg": "1638064075.079804_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # plt.show()"], "sub": ["-    plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638064050.3758416 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 17:47:40 2021 -0800", "msg": "1638064050.3758416_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638064050.3758416 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import scipy.stats", "+    # factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "+    # plt.xticks(range(0,6),factors, rotation='vertical')", "+    # plt.yticks(range(0,6),factors)", "+    # img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "+    # plt.colorbar(img)", "+    corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "+    print(corr)"], "sub": ["-    factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "-    plt.xticks(range(0,6),factors, rotation='vertical')", "-    plt.yticks(range(0,6),factors)", "-    img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "-    plt.colorbar(img)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 17:47:30 2021 -0800", "msg": "1638064050.3758416_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import scipy.stats", "+    # factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "+    # plt.xticks(range(0,6),factors, rotation='vertical')", "+    # plt.yticks(range(0,6),factors)", "+    # img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "+    # plt.colorbar(img)", "+    corr = scipy.stats.pearsonr(df['LATITUDE'],df['ROADWAY_SURFACE_COND'])[0]", "+    print(corr)"], "sub": ["-    factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "-    plt.xticks(range(0,6),factors, rotation='vertical')", "-    plt.yticks(range(0,6),factors)", "-    img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "-    plt.colorbar(img)"]}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def calculate_injury_severity(row):", "+    if ((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']) != 0):", "+        rate =  float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+            float((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']))", "+        # print(rate)", "+        return rate", "+    else:", "+        return 0", "+", "+    '''plot(df) takes as input a clean dataframe and generates a plot. The", "+    style of the plot and variables are up to you.", "+    '''", "+    # FATAL CHARTS", "+    fig = plt.figure()", "+    ax_wd = fig.add_subplot(2, 3, 1)", "+    df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    ax_wd.set(xlabel='', ylabel='Crashes')", "+    ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_wd.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_ld = fig.add_subplot(2, 3, 2)", "+    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    ax_ld.set(xlabel='', ylabel='Crashes')", "+    ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_ld.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_rd = fig.add_subplot(2, 3, 3)", "+    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "+    ax_rd.set(xlabel='', ylabel='Crashes')", "+    ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_rd.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # INJURY CHARTS", "+    ax_wi = fig.add_subplot(2, 3, 4)", "+    df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)", "+    print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "+    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    ax_wi.set(xlabel='', ylabel='Crashes')", "+    ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_wi.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_li = fig.add_subplot(2, 3, 5)", "+    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "+    ax_li.set(xlabel='', ylabel='Crashes')", "+    ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_li.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_ri = fig.add_subplot(2, 3, 6)", "+    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "+    ax_ri.set(xlabel='', ylabel='Crashes')", "+    ax_ri.set_title('Road Condition vs Injury Crash Severity')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_ri.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+    return None"], "sub": ["-", "-  '''plot(df) takes as input a clean dataframe and generates a plot. The", "-  style of the plot and variables are up to you.", "-  '''", "-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # fig = plt.figure()", "+    # ax_wd = fig.add_subplot(2, 3, 1)", "+    # df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "+    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_wd.set(xlabel='', ylabel='Crashes')", "+    # ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    # ax_wd.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_ld = fig.add_subplot(2, 3, 2)", "+    # df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_ld.set(xlabel='', ylabel='Crashes')", "+    # ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    # ax_ld.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_rd = fig.add_subplot(2, 3, 3)", "+    # df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "+    # ax_rd.set(xlabel='', ylabel='Crashes')", "+    # ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    # ax_rd.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # # INJURY CHARTS", "+    # ax_wi = fig.add_subplot(2, 3, 4)", "+    # df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)", "+    # print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "+    # df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # ax_wi.set(xlabel='', ylabel='Crashes')", "+    # ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    # ax_wi.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_li = fig.add_subplot(2, 3, 5)", "+    # df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "+    # ax_li.set(xlabel='', ylabel='Crashes')", "+    # ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    # ax_li.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_ri = fig.add_subplot(2, 3, 6)", "+    # df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "+    # ax_ri.set(xlabel='', ylabel='Crashes')", "+    # ax_ri.set_title('Road Condition vs Injury Crash Severity')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    # ax_ri.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # --- Question 5 ---", "+    factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "+    plt.xticks(range(0,6),factors, rotation='vertical')", "+    plt.yticks(range(0,6),factors)", "+    img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "+    plt.colorbar(img)"], "sub": ["-# def using_mpl_scatter_density(fig, x, y):", "-#     white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "-#         (0, '#ffffff'),", "-#         (1e-20, '#440053'),", "-#         (0.2, '#404388'),", "-#         (0.4, '#2a788e'),", "-#         (0.6, '#21a784'),", "-#         (0.8, '#78d151'),", "-#         (1, '#fde624'),", "-#     ], N=256)", "-#     ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "-#     density = ax.scatter_density(x, y, cmap=white_viridis)", "-#     fig.colorbar(density, label='Number of points per pixel')", "-", "-    fig = plt.figure()", "-    ax_wd = fig.add_subplot(2, 3, 1)", "-    df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "-    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    ax_wd.set(xlabel='', ylabel='Crashes')", "-    ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    ax_wd.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_ld = fig.add_subplot(2, 3, 2)", "-    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    # print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "-    # ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_ld.set(xlabel='', ylabel='Crashes')", "-    ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "-    ax_ld.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_rd = fig.add_subplot(2, 3, 3)", "-    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "-    # print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "-    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_rd.set(xlabel='', ylabel='Crashes')", "-    ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "-    ax_rd.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    # INJURY CHARTS", "-    ax_wi = fig.add_subplot(2, 3, 4)", "-    # df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "-    #     + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "-    #     (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-    #     ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "-    df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)", "-    print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "-    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    ax_wi.set(xlabel='', ylabel='Crashes')", "-    ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    ax_wi.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_li = fig.add_subplot(2, 3, 5)", "-    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "-    # ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_li.set(xlabel='', ylabel='Crashes')", "-    ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "-    ax_li.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_ri = fig.add_subplot(2, 3, 6)", "-    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "-    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_ri.set(xlabel='', ylabel='Crashes')", "-    ax_ri.set_title('Road Condition vs Injury Crash Severity')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "-    ax_ri.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 17:39:15 2021 -0800", "msg": "1638063555.0671196_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # fig = plt.figure()", "+    # ax_wd = fig.add_subplot(2, 3, 1)", "+    # df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "+    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_wd.set(xlabel='', ylabel='Crashes')", "+    # ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    # ax_wd.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_ld = fig.add_subplot(2, 3, 2)", "+    # df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_ld.set(xlabel='', ylabel='Crashes')", "+    # ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    # ax_ld.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_rd = fig.add_subplot(2, 3, 3)", "+    # df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "+    # ax_rd.set(xlabel='', ylabel='Crashes')", "+    # ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    # ax_rd.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # # INJURY CHARTS", "+    # ax_wi = fig.add_subplot(2, 3, 4)", "+    # df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)", "+    # print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "+    # df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # ax_wi.set(xlabel='', ylabel='Crashes')", "+    # ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    # ax_wi.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_li = fig.add_subplot(2, 3, 5)", "+    # df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "+    # ax_li.set(xlabel='', ylabel='Crashes')", "+    # ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "+    # labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    # ax_li.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_ri = fig.add_subplot(2, 3, 6)", "+    # df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    # print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "+    # ax_ri.set(xlabel='', ylabel='Crashes')", "+    # ax_ri.set_title('Road Condition vs Injury Crash Severity')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    # ax_ri.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # --- Question 5 ---", "+    factors = ['WEATHER_CONDITION','LIGHTING_CONDITION','ROADWAY_SURFACE_COND','POSTED_SPEED_LIMIT','TRAFFICWAY_TYPE', 'ROAD_DEFECT']", "+    plt.xticks(range(0,6),factors, rotation='vertical')", "+    plt.yticks(range(0,6),factors)", "+    img = plt.imshow(np.corrcoef(df[factors].to_numpy().T))", "+    plt.colorbar(img)"], "sub": ["-# def using_mpl_scatter_density(fig, x, y):", "-#     white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "-#         (0, '#ffffff'),", "-#         (1e-20, '#440053'),", "-#         (0.2, '#404388'),", "-#         (0.4, '#2a788e'),", "-#         (0.6, '#21a784'),", "-#         (0.8, '#78d151'),", "-#         (1, '#fde624'),", "-#     ], N=256)", "-#     ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "-#     density = ax.scatter_density(x, y, cmap=white_viridis)", "-#     fig.colorbar(density, label='Number of points per pixel')", "-", "-    fig = plt.figure()", "-    ax_wd = fig.add_subplot(2, 3, 1)", "-    df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "-    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    ax_wd.set(xlabel='', ylabel='Crashes')", "-    ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    ax_wd.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_ld = fig.add_subplot(2, 3, 2)", "-    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    # print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "-    # ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_ld.set(xlabel='', ylabel='Crashes')", "-    ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "-    ax_ld.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_rd = fig.add_subplot(2, 3, 3)", "-    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "-    # print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "-    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_rd.set(xlabel='', ylabel='Crashes')", "-    ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "-    ax_rd.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    # INJURY CHARTS", "-    ax_wi = fig.add_subplot(2, 3, 4)", "-    # df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "-    #     + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "-    #     (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-    #     ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "-    df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)", "-    print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "-    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    ax_wi.set(xlabel='', ylabel='Crashes')", "-    ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    ax_wi.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_li = fig.add_subplot(2, 3, 5)", "-    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "-    # ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_li.set(xlabel='', ylabel='Crashes')", "-    ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "-    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "-    ax_li.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-", "-    ax_ri = fig.add_subplot(2, 3, 6)", "-    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "-    print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "-    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_ri.set(xlabel='', ylabel='Crashes')", "-    ax_ri.set_title('Road Condition vs Injury Crash Severity')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "-    ax_ri.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd.set(xlabel='', ylabel='Crashes')", "+    ax_ld.set(xlabel='', ylabel='Crashes')", "+    ax_rd.set(xlabel='', ylabel='Crashes')", "+    ax_wi.set(xlabel='', ylabel='Crashes')", "+    ax_li.set(xlabel='', ylabel='Crashes')", "+    ax_ri.set(xlabel='', ylabel='Crashes')"], "sub": ["-    ax_wd.set(ylabel='Crashes')", "-    ax_ld.set(ylabel='Crashes')", "-    ax_rd.set(ylabel='Crashes')", "-    ax_wi.set(ylabel='Crashes')", "-    ax_li.set(ylabel='Crashes')", "-    ax_ri.set(ylabel='Crashes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:28:23 2021 -0800", "msg": "1638059303.105836_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd.set(xlabel='', ylabel='Crashes')", "+    ax_ld.set(xlabel='', ylabel='Crashes')", "+    ax_rd.set(xlabel='', ylabel='Crashes')", "+    ax_wi.set(xlabel='', ylabel='Crashes')", "+    ax_li.set(xlabel='', ylabel='Crashes')", "+    ax_ri.set(xlabel='', ylabel='Crashes')"], "sub": ["-    ax_wd.set(ylabel='Crashes')", "-    ax_ld.set(ylabel='Crashes')", "-    ax_rd.set(ylabel='Crashes')", "-    ax_wi.set(ylabel='Crashes')", "-    ax_li.set(ylabel='Crashes')", "-    ax_ri.set(ylabel='Crashes')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wi.set(ylabel='Crashes')", "+    ax_li.set(ylabel='Crashes')", "+    ax_ri.set(ylabel='Crashes')"], "sub": ["-    ax_wi.set(xlabel='Categories', ylabel='Crashes')", "-    ax_li.set(xlabel='Categories', ylabel='Crashes')", "-    ax_ri.set(xlabel='Categories', ylabel='Crashes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:27:11 2021 -0800", "msg": "1638059231.1849558_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wi.set(ylabel='Crashes')", "+    ax_li.set(ylabel='Crashes')", "+    ax_ri.set(ylabel='Crashes')"], "sub": ["-    ax_wi.set(xlabel='Categories', ylabel='Crashes')", "-    ax_li.set(xlabel='Categories', ylabel='Crashes')", "-    ax_ri.set(xlabel='Categories', ylabel='Crashes')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd.set(ylabel='Crashes')", "+    ax_ld.set(ylabel='Crashes')", "+    ax_rd.set(ylabel='Crashes')"], "sub": ["-    ax_wd.set(xlabel='Categories', ylabel='Crashes')", "-    ax_ld.set(xlabel='Categories', ylabel='Crashes')", "-    ax_rd.set(xlabel='Categories', ylabel='Crashes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:26:46 2021 -0800", "msg": "1638059206.462246_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd.set(ylabel='Crashes')", "+    ax_ld.set(ylabel='Crashes')", "+    ax_rd.set(ylabel='Crashes')"], "sub": ["-    ax_wd.set(xlabel='Categories', ylabel='Crashes')", "-    ax_ld.set(xlabel='Categories', ylabel='Crashes')", "-    ax_rd.set(xlabel='Categories', ylabel='Crashes')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            float((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']))"], "sub": ["-            float((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:25:28 2021 -0800", "msg": "1638059128.087882_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            float((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']))"], "sub": ["-            float((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    if ((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']) != 0):", "+        # print(rate)"], "sub": ["-    if ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']) != 0):", "-        print(rate)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:25:17 2021 -0800", "msg": "1638059117.495897_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    if ((row['INJURIES_TOTAL']) - (row['INJURIES_FATAL']) != 0):", "+        # print(rate)"], "sub": ["-    if ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']) != 0):", "-        print(rate)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638057639.1333997 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'WEATHER_CONDITION'):", "+        #     print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'LIGHTING_CONDITION'):", "+        #     print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'TRAFFICWAY_TYPE'):", "+        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROADWAY_SURFACE_COND'):", "+        #     print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        rate =  float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+        print(rate)", "+        return rate", "+    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    # print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "+    # print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "+    # get_descriptive_stats(cdf)"], "sub": ["-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-    #     # if (column == 'TRAFFICWAY_TYPE'):", "-    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        return float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "-    print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "-    get_descriptive_stats(cdf)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 16:24:36 2021 -0800", "msg": "1638057639.1333997_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'WEATHER_CONDITION'):", "+        #     print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'LIGHTING_CONDITION'):", "+        #     print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'TRAFFICWAY_TYPE'):", "+        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROADWAY_SURFACE_COND'):", "+        #     print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+        rate =  float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+        print(rate)", "+        return rate", "+    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    # print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "+    # print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "+    # get_descriptive_stats(cdf)"], "sub": ["-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-    #     # if (column == 'TRAFFICWAY_TYPE'):", "-    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "-        return float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "-    print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "-    get_descriptive_stats(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638057538.9500408 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:59:15 2021 -0800", "msg": "1638057538.9500408_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638057538.9500408 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638056565.601348 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        return float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+            float((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"], "sub": ["-        return float(((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-            (row['INJURIES_REPORTED_NOT_EVIDENT']))) / \\", "-            ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:58:55 2021 -0800", "msg": "1638056565.601348_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        return float((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+            float((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"], "sub": ["-        return float(((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-            (row['INJURIES_REPORTED_NOT_EVIDENT']))) / \\", "-            ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd = fig.add_subplot(2, 3, 1)", "+    ax_wd.set(xlabel='Categories', ylabel='Crashes')", "+    ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "+    ax_wd.set_xticklabels(labels)", "+    ax_ld = fig.add_subplot(2, 3, 2)", "+    ax_ld.set(xlabel='Categories', ylabel='Crashes')", "+    ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    ax_ld.set_xticklabels(labels)", "+    ax_rd = fig.add_subplot(2, 3, 3)", "+    ax_rd.set(xlabel='Categories', ylabel='Crashes')", "+    ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "+    ax_rd.set_xticklabels(labels)", "+    ax_wi = fig.add_subplot(2, 3, 4)", "+    ax_wi.set(xlabel='Categories', ylabel='Crashes')", "+    ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "+    ax_wi.set_xticklabels(labels)", "+    ax_li = fig.add_subplot(2, 3, 5)", "+    ax_li.set(xlabel='Categories', ylabel='Crashes')", "+    ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "+    ax_li.set_xticklabels(labels)", "+    ax_ri = fig.add_subplot(2, 3, 6)", "+    ax_ri.set(xlabel='Categories', ylabel='Crashes')", "+    ax_ri.set_title('Road Condition vs Injury Crash Severity')", "+    ax_ri.set_xticklabels(labels)"], "sub": ["-    ax_w = fig.add_subplot(2, 3, 1)", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Fatal Crash Frequency')", "-    ax_w.set_xticklabels(labels)", "-    ax_l = fig.add_subplot(2, 3, 2)", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Fatal Crash Frequency')", "-    ax_l.set_xticklabels(labels)", "-    ax_r = fig.add_subplot(2, 3, 3)", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Fatal Crash Frequency')", "-    ax_r.set_xticklabels(labels)", "-    fig = plt.figure()", "-    ax_w = fig.add_subplot(2, 3, 4)", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Injury Crash Severity')", "-    ax_w.set_xticklabels(labels)", "-    ax_l = fig.add_subplot(2, 3, 5)", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Injury Crash Severity')", "-    ax_l.set_xticklabels(labels)", "-    ax_r = fig.add_subplot(2, 3, 6)", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Injury Crash Severity')", "-    ax_r.set_xticklabels(labels)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:42:45 2021 -0800", "msg": "1638056565.601348_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_wd = fig.add_subplot(2, 3, 1)", "+    ax_wd.set(xlabel='Categories', ylabel='Crashes')", "+    ax_wd.set_title('Weather Condition vs Fatal Crash Frequency')", "+    ax_wd.set_xticklabels(labels)", "+    ax_ld = fig.add_subplot(2, 3, 2)", "+    ax_ld.set(xlabel='Categories', ylabel='Crashes')", "+    ax_ld.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    ax_ld.set_xticklabels(labels)", "+    ax_rd = fig.add_subplot(2, 3, 3)", "+    ax_rd.set(xlabel='Categories', ylabel='Crashes')", "+    ax_rd.set_title('Road Condition vs Fatal Crash Frequency')", "+    ax_rd.set_xticklabels(labels)", "+    ax_wi = fig.add_subplot(2, 3, 4)", "+    ax_wi.set(xlabel='Categories', ylabel='Crashes')", "+    ax_wi.set_title('Weather Condition vs Injury Crash Severity')", "+    ax_wi.set_xticklabels(labels)", "+    ax_li = fig.add_subplot(2, 3, 5)", "+    ax_li.set(xlabel='Categories', ylabel='Crashes')", "+    ax_li.set_title('Lighting Condition vs Injury Crash Severity')", "+    ax_li.set_xticklabels(labels)", "+    ax_ri = fig.add_subplot(2, 3, 6)", "+    ax_ri.set(xlabel='Categories', ylabel='Crashes')", "+    ax_ri.set_title('Road Condition vs Injury Crash Severity')", "+    ax_ri.set_xticklabels(labels)"], "sub": ["-    ax_w = fig.add_subplot(2, 3, 1)", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Fatal Crash Frequency')", "-    ax_w.set_xticklabels(labels)", "-    ax_l = fig.add_subplot(2, 3, 2)", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Fatal Crash Frequency')", "-    ax_l.set_xticklabels(labels)", "-    ax_r = fig.add_subplot(2, 3, 3)", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Fatal Crash Frequency')", "-    ax_r.set_xticklabels(labels)", "-    fig = plt.figure()", "-    ax_w = fig.add_subplot(2, 3, 4)", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Injury Crash Severity')", "-    ax_w.set_xticklabels(labels)", "-    ax_l = fig.add_subplot(2, 3, 5)", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Injury Crash Severity')", "-    ax_l.set_xticklabels(labels)", "-    ax_r = fig.add_subplot(2, 3, 6)", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Injury Crash Severity')", "-    ax_r.set_xticklabels(labels)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638056346.859964 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        return float(((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT']))) / \\"], "sub": ["-        return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:41:21 2021 -0800", "msg": "1638056346.859964_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        return float(((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT']))) / \\"], "sub": ["-        return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    if ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']) != 0):", "+        return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+            ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))", "+    else:", "+        return 0"], "sub": ["-    return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-        (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-        ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:39:07 2021 -0800", "msg": "1638056346.859964_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    if ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']) != 0):", "+        return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+            (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+            ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))", "+    else:", "+        return 0"], "sub": ["-    return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "-        (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-        ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638056234.3154972 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:37:23 2021 -0800", "msg": "1638056234.3154972_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638056234.3154972 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def calculate_injury_severity(row):", "+    return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+        (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+        ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))", "+    # df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "+    #     + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "+    #     (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+    #     ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "+    df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)"], "sub": ["-    df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "-        + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "-        (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-        ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:37:14 2021 -0800", "msg": "1638056234.3154972_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def calculate_injury_severity(row):", "+    return ((3 * row['INJURIES_INCAPACITATING']) + (2 * row['INJURIES_NON_INCAPACITATING']) + \\", "+        (row['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+        ((row['INJURIES_TOTAL']) - (row['INJURIES_TOTAL']))", "+    # df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "+    #     + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "+    #     (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+    #     ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "+    df['INJURY_SEVERITY'] = df.apply(lambda row: calculate_injury_severity(row), axis = 1)"], "sub": ["-    df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "-        + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "-        (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "-        ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638055306.639477 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:21:55 2021 -0800", "msg": "1638055306.639477_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638055306.639477 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # INJURY CHARTS", "+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 3, 4)", "+    df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "+        + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "+        (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+        ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "+    print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "+    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_l = fig.add_subplot(2, 3, 5)", "+    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_l.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_r = fig.add_subplot(2, 3, 6)", "+    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Injury Crash Severity')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_r.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:21:46 2021 -0800", "msg": "1638055306.639477_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # INJURY CHARTS", "+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 3, 4)", "+    df = df.assign(INJURY_SEVERITY=[((3 * x for x in df['INJURIES_INCAPACITATING']) \\", "+        + (2 * x for x in df['INJURIES_NON_INCAPACITATING']) + \\", "+        (x for x in df['INJURIES_REPORTED_NOT_EVIDENT'])) / \\", "+        ((x for x in df['INJURIES_TOTAL']) - (x for x in df['INJURIES_TOTAL']))])", "+    print(df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum())", "+    df.groupby('WEATHER_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_l = fig.add_subplot(2, 3, 5)", "+    df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('LIGHTING_CONDITION')['INJURY_SEVERITY'].sum())", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Injury Crash Severity')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_l.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_r = fig.add_subplot(2, 3, 6)", "+    df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum().plot(kind='bar')", "+    print(df.groupby('ROADWAY_SURFACE_COND')['INJURY_SEVERITY'].sum())", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Injury Crash Severity')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_r.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638054530.1952908 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:09:28 2021 -0800", "msg": "1638054530.1952908_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638054530.1952908 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638054318.1220353 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # FATAL CHARTS", "+    ax_w = fig.add_subplot(2, 3, 1)", "+    ax_l = fig.add_subplot(2, 3, 2)", "+    ax_r = fig.add_subplot(2, 3, 3)"], "sub": ["-    ax_w = fig.add_subplot(2, 2, 1)", "-    # count injuries_fatal", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_r = fig.add_subplot(2, 2, 3)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:08:46 2021 -0800", "msg": "1638054318.1220353_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # FATAL CHARTS", "+    ax_w = fig.add_subplot(2, 3, 1)", "+    ax_l = fig.add_subplot(2, 3, 2)", "+    ax_r = fig.add_subplot(2, 3, 3)"], "sub": ["-    ax_w = fig.add_subplot(2, 2, 1)", "-    # count injuries_fatal", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_r = fig.add_subplot(2, 2, 3)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638054229.994561 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "+    ax_l.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "+    ax_r.set_title('Road Condition vs Fatal Crash Frequency')"], "sub": ["-    ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    ax_r.set_title('Road Condition vs Crash Frequency')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:05:12 2021 -0800", "msg": "1638054229.994561_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('LIGHTING_CONDITION')['FATALITY'].sum())", "+    ax_l.set_title('Lighting Condition vs Fatal Crash Frequency')", "+    print(df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum())", "+    ax_r.set_title('Road Condition vs Fatal Crash Frequency')"], "sub": ["-    ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    ax_r.set_title('Road Condition vs Crash Frequency')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638054064.1417656 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_l.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+    ax_r = fig.add_subplot(2, 2, 3)", "+    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_r.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])", "-    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    # ax_l = fig.add_subplot(2, 2, 2)", "-    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "-    # ax_l.set_xticklabels(labels)", "-    # plt.xticks(fontsize = 8, rotation = 55)", "-    # ax_r = fig.add_subplot(2, 2, 3)", "-    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_r.set_title('Road Condition vs Crash Frequency')", "-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "-    # ax_r.set_xticklabels(labels)", "-    # plt.xticks(fontsize = 8, rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:03:45 2021 -0800", "msg": "1638054064.1417656_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    df.groupby('LIGHTING_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    labels = ['\\n'.join(wrap(l, 10)) for l in sorted(df['LIGHTING_CONDITION'].unique())]", "+    ax_l.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+    ax_r = fig.add_subplot(2, 2, 3)", "+    df.groupby('ROADWAY_SURFACE_COND')['FATALITY'].sum().plot(kind='bar')", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['ROADWAY_SURFACE_COND'].unique())]", "+    ax_r.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])", "-    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "-    # ax_l = fig.add_subplot(2, 2, 2)", "-    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "-    # ax_l.set_xticklabels(labels)", "-    # plt.xticks(fontsize = 8, rotation = 55)", "-    # ax_r = fig.add_subplot(2, 2, 3)", "-    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    # ax_r.set_title('Road Condition vs Crash Frequency')", "-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "-    # ax_r.set_xticklabels(labels)", "-    # plt.xticks(fontsize = 8, rotation = 55)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638053934.123619 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_w.set_xticklabels(labels)"], "sub": ["-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    # ax_w.set_xticklabels(labels)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 15:01:00 2021 -0800", "msg": "1638053934.123619_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in sorted(df['WEATHER_CONDITION'].unique())]", "+    ax_w.set_xticklabels(labels)"], "sub": ["-    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    # ax_w.set_xticklabels(labels)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    # ax_w.set_xticklabels(labels)"], "sub": ["-    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    ax_w.set_xticklabels(labels)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:58:54 2021 -0800", "msg": "1638053934.123619_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    # ax_w.set_xticklabels(labels)"], "sub": ["-    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    ax_w.set_xticklabels(labels)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638053786.0355122 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:56:40 2021 -0800", "msg": "1638053786.0355122_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638053786.0355122 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    df.hist(('WEATHER_CONDITION')['FATALITY'].sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:56:26 2021 -0800", "msg": "1638053786.0355122_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    df.hist(('WEATHER_CONDITION')['FATALITY'].sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638053752.4104998 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:56:00 2021 -0800", "msg": "1638053752.4104998_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638053752.4104998 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638053657.067126 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    df.hist(('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:55:48 2021 -0800", "msg": "1638053657.067126_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    df.hist(('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:54:17 2021 -0800", "msg": "1638053657.067126_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638053429.8243015 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:50:37 2021 -0800", "msg": "1638053429.8243015_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638053429.8243015 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638053341.3893075 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot()"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:50:25 2021 -0800", "msg": "1638053341.3893075_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot()"], "sub": ["-    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052789.5426886 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:48:52 2021 -0800", "msg": "1638052789.5426886_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.groupby('WEATHER_CONDITION')['FATALITY'].sum().plot(kind='bar')", "+    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052753.619983 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:39:42 2021 -0800", "msg": "1638052753.619983_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638052698.5839808 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:39:04 2021 -0800", "msg": "1638052698.5839808_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:38:18 2021 -0800", "msg": "1638052698.5839808_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())", "-    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:37:54 2021 -0800", "msg": "1638052674.4134324_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].sum())"], "sub": ["-    print(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052634.870509 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:37:45 2021 -0800", "msg": "1638052634.870509_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052634.870509 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638052579.0727954 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].count())", "+    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:37:06 2021 -0800", "msg": "1638052579.0727954_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df.groupby('WEATHER_CONDITION')['FATALITY'].count())", "+    # ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:36:19 2021 -0800", "msg": "1638052579.0727954_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638052512.1497874 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:35:20 2021 -0800", "msg": "1638052512.1497874_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638052512.1497874 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])", "+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'])"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:35:12 2021 -0800", "msg": "1638052512.1497874_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])", "+    ax_w.hist(df.groupby('WEATHER_CONDITION')['FATALITY'])"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052385.2773788 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:33:13 2021 -0800", "msg": "1638052385.2773788_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052385.2773788 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638052204.3110332 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:32:52 2021 -0800", "msg": "1638052204.3110332_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'])"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].count())"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])"], "sub": ["-    df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:30:04 2021 -0800", "msg": "1638052204.3110332_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])"], "sub": ["-    df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052161.6632774 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:29:29 2021 -0800", "msg": "1638052161.6632774_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638052161.6632774 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638051095.1634812 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['INJURIES_FATAL'].count())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 14:28:40 2021 -0800", "msg": "1638051095.1634812_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df.assign(FATALITY=[1 if x > 0 else 0 for x in df['INJURIES_FATAL']])", "+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['FATALITY'].count())"], "sub": ["-    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['INJURIES_FATAL'].count())"]}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+from textwrap import wrap", "+    '''plot(df) takes as input a clean dataframe and generates a plot. The", "+    style of the plot and variables are up to you.", "+    '''", "+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 2, 1)", "+    ax_w.hist(df['WEATHER_CONDITION'])", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    ax_l.hist(df['LIGHTING_CONDITION'])", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    ax_l.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    ax_r = fig.add_subplot(2, 2, 3)", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    ax_r.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    return None"], "sub": ["-  '''plot(df) takes as input a clean dataframe and generates a plot. The", "-  style of the plot and variables are up to you.", "-  '''", "-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638049483.1338305 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # fig = plt.figure()", "+    # ax_w = fig.add_subplot(2, 2, 1)", "+    # ax_w.hist(df['WEATHER_CONDITION'])", "+    # ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_w.set_title('Weather Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    # ax_w.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+    # ax_l = fig.add_subplot(2, 2, 2)", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    # ax_l.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+    # ax_r = fig.add_subplot(2, 2, 3)", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_r.set_title('Road Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    # ax_r.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 2, 1)", "+    # count injuries_fatal", "+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['INJURIES_FATAL'].count())", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Fatal Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_l = fig.add_subplot(2, 2, 2)", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    # ax_l.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_r = fig.add_subplot(2, 2, 3)", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_r.set_title('Road Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    # ax_r.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    fig = plt.figure()", "-    ax_w = fig.add_subplot(2, 2, 1)", "-    ax_w.hist(df['WEATHER_CONDITION'])", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    ax_w.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "-    ax_l.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-    ax_r = fig.add_subplot(2, 2, 3)", "-    ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "-    ax_r.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:54:21 2021 -0800", "msg": "1638049483.1338305_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+    # fig = plt.figure()", "+    # ax_w = fig.add_subplot(2, 2, 1)", "+    # ax_w.hist(df['WEATHER_CONDITION'])", "+    # ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_w.set_title('Weather Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    # ax_w.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+    # ax_l = fig.add_subplot(2, 2, 2)", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    # ax_l.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+    # ax_r = fig.add_subplot(2, 2, 3)", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_r.set_title('Road Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    # ax_r.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 2, 1)", "+    # count injuries_fatal", "+    ax_w.bar(df['WEATHER_CONDITION'].unique(), df.groupby('WEATHER_CONDITION')['INJURIES_FATAL'].count())", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Fatal Crash Frequency')", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_l = fig.add_subplot(2, 2, 2)", "+    # ax_l.hist(df['LIGHTING_CONDITION'])", "+    # ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    # ax_l.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)", "+", "+    # ax_r = fig.add_subplot(2, 2, 3)", "+    # ax_r.hist(df['ROADWAY_SURFACE_COND'])", "+    # ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    # ax_r.set_title('Road Condition vs Crash Frequency')", "+    # labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    # ax_r.set_xticklabels(labels)", "+    # plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    fig = plt.figure()", "-    ax_w = fig.add_subplot(2, 2, 1)", "-    ax_w.hist(df['WEATHER_CONDITION'])", "-    ax_w.set(xlabel='Categories', ylabel='Crashes')", "-    ax_w.set_title('Weather Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]", "-    ax_w.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_l.hist(df['LIGHTING_CONDITION'])", "-    ax_l.set(xlabel='Categories', ylabel='Crashes')", "-    ax_l.set_title('Lighting Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "-    ax_l.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-    ax_r = fig.add_subplot(2, 2, 3)", "-    ax_r.hist(df['ROADWAY_SURFACE_COND'])", "-    ax_r.set(xlabel='Categories', ylabel='Crashes')", "-    ax_r.set_title('Road Condition vs Crash Frequency')", "-    labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "-    ax_r.set_xticklabels(labels)", "-    plt.xticks(fontsize = 8, rotation = 55)", "-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w = fig.add_subplot(2, 2, 1)", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    ax_r = fig.add_subplot(2, 2, 3)", "+"], "sub": ["-    ax_w = fig.add_subplot(1, 1, 1)", "-    ax_l = fig.add_subplot(1, 2, 2)", "-    ax_r = fig.add_subplot(1, 3, 3)", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:44:43 2021 -0800", "msg": "1638049483.1338305_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w = fig.add_subplot(2, 2, 1)", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    ax_r = fig.add_subplot(2, 2, 3)", "+"], "sub": ["-    ax_w = fig.add_subplot(1, 1, 1)", "-    ax_l = fig.add_subplot(1, 2, 2)", "-    ax_r = fig.add_subplot(1, 3, 3)", "-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_l = fig.add_subplot(1, 2, 2)", "+    ax_r = fig.add_subplot(1, 3, 3)"], "sub": ["-    ax_l = fig.add_subplot(1, 1, 2)", "-    ax_r = fig.add_subplot(1, 1, 3)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:44:12 2021 -0800", "msg": "1638049452.0858812_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_l = fig.add_subplot(1, 2, 2)", "+    ax_r = fig.add_subplot(1, 3, 3)"], "sub": ["-    ax_l = fig.add_subplot(1, 1, 2)", "-    ax_r = fig.add_subplot(1, 1, 3)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638049388.4373722 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:43:16 2021 -0800", "msg": "1638049388.4373722_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638049388.4373722 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w = fig.add_subplot(1, 1, 1)", "+    ax_l = fig.add_subplot(1, 1, 2)", "+    ax_r = fig.add_subplot(1, 1, 3)", "+    # --- Question 3 ---", "+", "+"], "sub": ["-    ax_w = fig.add_subplot(2, 2, 1)", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_r = fig.add_subplot(2, 2, 3)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:43:08 2021 -0800", "msg": "1638049388.4373722_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w = fig.add_subplot(1, 1, 1)", "+    ax_l = fig.add_subplot(1, 1, 2)", "+    ax_r = fig.add_subplot(1, 1, 3)", "+    # --- Question 3 ---", "+", "+"], "sub": ["-    ax_w = fig.add_subplot(2, 2, 1)", "-    ax_l = fig.add_subplot(2, 2, 2)", "-    ax_r = fig.add_subplot(2, 2, 3)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638049002.5328572 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    ax_l.set_xticklabels(labels)", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    ax_r.set_xticklabels(labels)"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:39:46 2021 -0800", "msg": "1638049002.5328572_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['LIGHTING_CONDITION'].unique()]", "+    ax_l.set_xticklabels(labels)", "+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['ROADWAY_SURFACE_COND'].unique()]", "+    ax_r.set_xticklabels(labels)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638048834.777366 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].unique()]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:34:36 2021 -0800", "msg": "1638048834.777366_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 10)) for l in df['WEATHER_CONDITION'].unique()]"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].unique()]"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.set_xticklabels(labels)"], "sub": ["-    # ax_w.set_xticklabels(labels)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:33:54 2021 -0800", "msg": "1638048834.777366_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_w.set_xticklabels(labels)"], "sub": ["-    # ax_w.set_xticklabels(labels)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].unique()]"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].cat.categories()]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:33:10 2021 -0800", "msg": "1638048790.1848946_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].unique()]"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].cat.categories()]"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638048760.8055637 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:32:48 2021 -0800", "msg": "1638048760.8055637_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638048760.8055637 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638048574.3303442 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].cat.categories()]", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    # labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "-    plt.xticks(rotation = 55, wrap = True)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:32:19 2021 -0800", "msg": "1638048574.3303442_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION'].cat.categories()]", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    # labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "-    plt.xticks(rotation = 55, wrap = True)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638048263.1944919 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "+    # ax_w.set_xticklabels(labels)", "+    plt.xticks(rotation = 55, wrap = True)"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "-    ax_w.set_xticklabels(labels)", "-    plt.xticks(rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:27:03 2021 -0800", "msg": "1638048263.1944919_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "+    # ax_w.set_xticklabels(labels)", "+    plt.xticks(rotation = 55, wrap = True)"], "sub": ["-    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "-    ax_w.set_xticklabels(labels)", "-    plt.xticks(rotation = 55)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638047938.5896852 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from textwrap import wrap", "+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(rotation = 55)"], "sub": ["-# import mpl_scatter_density", "-    plt.xticks(fontsize = 8, rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:23:17 2021 -0800", "msg": "1638047938.5896852_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from textwrap import wrap", "+    labels = [ '\\n'.join(wrap(l, 20)) for l in df['WEATHER_CONDITION']]", "+    ax_w.set_xticklabels(labels)", "+    plt.xticks(rotation = 55)"], "sub": ["-# import mpl_scatter_density", "-    plt.xticks(fontsize = 8, rotation = 55)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(fontsize = 8, rotation = 55)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    plt.xticks(fontsize = 4, rotation = 55)", "-    plt.xticks(fontsize = 4, rotation = 55)", "-    plt.xticks(fontsize = 4, rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:18:58 2021 -0800", "msg": "1638047938.5896852_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(fontsize = 8, rotation = 55)", "+    plt.xticks(fontsize = 8, rotation = 55)", "+    plt.xticks(fontsize = 8, rotation = 55)"], "sub": ["-    plt.xticks(fontsize = 4, rotation = 55)", "-    plt.xticks(fontsize = 4, rotation = 55)", "-    plt.xticks(fontsize = 4, rotation = 55)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638047825.4657938 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:17:40 2021 -0800", "msg": "1638047825.4657938_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638047825.4657938 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638047705.799631 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(fontsize = 4, rotation = 55)", "+    plt.xticks(fontsize = 4, rotation = 55)", "+    plt.xticks(fontsize = 4, rotation = 55)"], "sub": ["-    plt.xticks(fontsize = 14, rotation = 55)", "-    plt.xticks(fontsize = 14, rotation = 55)", "-    plt.xticks(fontsize = 14, rotation = 55)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:15:25 2021 -0800", "msg": "1638047705.799631_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(fontsize = 4, rotation = 55)", "+    plt.xticks(fontsize = 4, rotation = 55)", "+    plt.xticks(fontsize = 4, rotation = 55)"], "sub": ["-    plt.xticks(fontsize = 14, rotation = 55)", "-    plt.xticks(fontsize = 14, rotation = 55)", "-    plt.xticks(fontsize = 14, rotation = 55)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    # dawn as 1/24, dusk as 1/24, night as 10/24, day as 12/24", "+    # dawn is .017715, dusk is .030925, darkness is .048293, darkness - lighted road = .22333, day is .67973", "+    # weights: 2.3521,  1.3473,   8.6279,   1.8657,   0.73559"], "sub": ["-    plt.xticks(rotation = 55)", "-    plt.xticks(rotation = 55)", "-    plt.xticks(rotation = 55)", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Sat Nov 27 13:15:06 2021 -0800", "msg": "1638047705.799631_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+", "+", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    plt.xticks(fontsize = 14, rotation = 55)", "+    # dawn as 1/24, dusk as 1/24, night as 10/24, day as 12/24", "+    # dawn is .017715, dusk is .030925, darkness is .048293, darkness - lighted road = .22333, day is .67973", "+    # weights: 2.3521,  1.3473,   8.6279,   1.8657,   0.73559"], "sub": ["-    plt.xticks(rotation = 55)", "-    plt.xticks(rotation = 55)", "-    plt.xticks(rotation = 55)", "-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 55)", "+    plt.xticks(rotation = 55)", "+    plt.xticks(rotation = 55)"], "sub": ["-    plt.xticks(rotation = 45)", "-    plt.xticks(rotation = 45)", "-    plt.xticks(rotation = 45)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:46:48 2021 -0800", "msg": "1637995607.8975172_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 55)", "+    plt.xticks(rotation = 55)", "+    plt.xticks(rotation = 55)"], "sub": ["-    plt.xticks(rotation = 45)", "-    plt.xticks(rotation = 45)", "-    plt.xticks(rotation = 45)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637995345.98169 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 45)", "+    plt.xticks(rotation = 45)"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:42:57 2021 -0800", "msg": "1637995345.98169_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 45)", "+    plt.xticks(rotation = 45)"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 45)"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:42:26 2021 -0800", "msg": "1637995345.98169_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xticks(rotation = 45)"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_l.hist(df['LIGHTING_CONDITION'])", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'])"], "sub": ["-    ax_l.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    ax_r.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:40:31 2021 -0800", "msg": "1637995230.9704247_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    ax_l.hist(df['LIGHTING_CONDITION'])", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'])"], "sub": ["-    ax_l.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    ax_r.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637995098.0975642 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:38:26 2021 -0800", "msg": "1637995098.0975642_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637995098.0975642 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 2, 1)", "+    ax_w.hist(df['WEATHER_CONDITION'])", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Crash Frequency')", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    ax_l.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    ax_r = fig.add_subplot(2, 2, 3)", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Crash Frequency')"], "sub": ["-    # ax = plt.figure().add_subplot(projection='3d')", "-    # ax.set_xlabel(\"WEATHER_CONDITION\")", "-    # ax.set_ylabel(\"LIGHTING_CONDITION\")", "-    # ax.set_zlabel(\"ROADWAY_SURFACE_COND\")", "-    # plt.scatter(df['A'],df['B'])", "-    # cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "-    # dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "-    # activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "-    fig, axs = plt.subplots(3, 1)", "-    axs.hist(df['WEATHER_CONDITION'])", "-    axs.set_title('Weather Condition vs Crash Frequency')", "-    axs.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    axs.set_title('Lighting Condition vs Crash Frequency')", "-    axs.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    axs.set_title('Road Condition vs Crash Frequency')", "-    for ax in axs.flat:", "-        ax.set(xlabel='Categories', ylabel='Crashes')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:38:18 2021 -0800", "msg": "1637995098.0975642_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    fig = plt.figure()", "+    ax_w = fig.add_subplot(2, 2, 1)", "+    ax_w.hist(df['WEATHER_CONDITION'])", "+    ax_w.set(xlabel='Categories', ylabel='Crashes')", "+    ax_w.set_title('Weather Condition vs Crash Frequency')", "+    ax_l = fig.add_subplot(2, 2, 2)", "+    ax_l.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    ax_l.set(xlabel='Categories', ylabel='Crashes')", "+    ax_l.set_title('Lighting Condition vs Crash Frequency')", "+    ax_r = fig.add_subplot(2, 2, 3)", "+    ax_r.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    ax_r.set(xlabel='Categories', ylabel='Crashes')", "+    ax_r.set_title('Road Condition vs Crash Frequency')"], "sub": ["-    # ax = plt.figure().add_subplot(projection='3d')", "-    # ax.set_xlabel(\"WEATHER_CONDITION\")", "-    # ax.set_ylabel(\"LIGHTING_CONDITION\")", "-    # ax.set_zlabel(\"ROADWAY_SURFACE_COND\")", "-    # plt.scatter(df['A'],df['B'])", "-    # cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "-    # dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "-    # activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "-    fig, axs = plt.subplots(3, 1)", "-    axs.hist(df['WEATHER_CONDITION'])", "-    axs.set_title('Weather Condition vs Crash Frequency')", "-    axs.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    axs.set_title('Lighting Condition vs Crash Frequency')", "-    axs.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    axs.set_title('Road Condition vs Crash Frequency')", "-    for ax in axs.flat:", "-        ax.set(xlabel='Categories', ylabel='Crashes')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637994191.3673851 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:23:19 2021 -0800", "msg": "1637994191.3673851_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637994191.3673851 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    axs.hist(df['WEATHER_CONDITION'])", "+    axs.set_title('Weather Condition vs Crash Frequency')", "+    axs.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    axs.set_title('Lighting Condition vs Crash Frequency')", "+    axs.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    axs.set_title('Road Condition vs Crash Frequency')", "+    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    # axs[2, 0].set_title('Road Condition vs Crash Frequency')"], "sub": ["-    axs[0, 0].hist(df['WEATHER_CONDITION'])", "-    axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "-    axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "-    axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    axs[2, 0].set_title('Road Condition vs Crash Frequency')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:23:11 2021 -0800", "msg": "1637994191.3673851_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    axs.hist(df['WEATHER_CONDITION'])", "+    axs.set_title('Weather Condition vs Crash Frequency')", "+    axs.hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    axs.set_title('Lighting Condition vs Crash Frequency')", "+    axs.hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    axs.set_title('Road Condition vs Crash Frequency')", "+    # axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    # axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    # axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    # axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    # axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    # axs[2, 0].set_title('Road Condition vs Crash Frequency')"], "sub": ["-    axs[0, 0].hist(df['WEATHER_CONDITION'])", "-    axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "-    axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "-    axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "-    axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "-    axs[2, 0].set_title('Road Condition vs Crash Frequency')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637994120.77227 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:22:08 2021 -0800", "msg": "1637994120.77227_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637994120.77227 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+    '''plot(df) takes as input a clean dataframe and generates a plot. The", "+    style of the plot and variables are up to you.", "+    '''", "+    plt.xlabel(\"Latitude\")", "+    plt.ylabel(\"Longitude\")", "+    plt.title('Location of Crashes')", "+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "+    plt.xlim([41.63, 42.025])", "+    plt.ylim([-87.87, -87.5])", "+    plt.colorbar()", "+    return None"], "sub": ["-  '''plot(df) takes as input a clean dataframe and generates a plot. The", "-  style of the plot and variables are up to you.", "-  '''", "-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# import mpl_scatter_density", "+    return crashes", "+def get_descriptive_stats(df):", "+    for column in df.columns:", "+        print('Column: ', column)", "+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+    #     # if (column == 'TRAFFICWAY_TYPE'):", "+    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'ROAD_DEFECT'):", "+        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_TOTAL'):", "+        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_FATAL'):", "+        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_INCAPACITATING'):", "+        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_NON_INCAPACITATING'):", "+        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_NO_INDICATION'):", "+        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)", "+        # print('Missing Values -',crashes[column].isna().sum())", "+        # print('---')", "+    fig, axs = plt.subplots(3, 1)", "+    axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    axs[2, 0].set_title('Road Condition vs Crash Frequency')", "+    # axs[1, 1].plot(x, -y, 'tab:red')", "+    # axs[1, 1].set_title('Axis [1, 1]')", "+", "+    for ax in axs.flat:", "+        ax.set(xlabel='Categories', ylabel='Crashes')", "+    # plt.xlabel(\"Latitude\")", "+    # plt.ylabel(\"Longitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([41.63, 42.025])", "+    # plt.ylim([-87.87, -87.5])", "+    # plt.colorbar()", "+    get_descriptive_stats(cdf)"], "sub": ["-import mpl_scatter_density", "-    for column in crashes.columns:", "-        print('Column: ', column)", "-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-    #     # if (column == 'TRAFFICWAY_TYPE'):", "-    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'ROAD_DEFECT'):", "-        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_TOTAL'):", "-        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_FATAL'):", "-        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_INCAPACITATING'):", "-        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_NON_INCAPACITATING'):", "-        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_NO_INDICATION'):", "-        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)", "-        # print('Missing Values -',crashes[column].isna().sum())", "-        # print('---')", "-    return crashes #demo", "-    plt.xlabel(\"Latitude\")", "-    plt.ylabel(\"Longitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])", "-    plt.colorbar()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:22:00 2021 -0800", "msg": "1637994120.77227_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# import mpl_scatter_density", "+    return crashes", "+def get_descriptive_stats(df):", "+    for column in df.columns:", "+        print('Column: ', column)", "+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+    #     # if (column == 'TRAFFICWAY_TYPE'):", "+    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',df[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'ROAD_DEFECT'):", "+        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_TOTAL'):", "+        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_FATAL'):", "+        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_INCAPACITATING'):", "+        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_NON_INCAPACITATING'):", "+        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'INJURIES_NO_INDICATION'):", "+        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)", "+        # print('Missing Values -',crashes[column].isna().sum())", "+        # print('---')", "+    fig, axs = plt.subplots(3, 1)", "+    axs[0, 0].hist(df['WEATHER_CONDITION'])", "+    axs[0, 0].set_title('Weather Condition vs Crash Frequency')", "+    axs[1, 0].hist(df['LIGHTING_CONDITION'], 'tab:orange')", "+    axs[1, 0].set_title('Lighting Condition vs Crash Frequency')", "+    axs[2, 0].hist(df['ROADWAY_SURFACE_COND'], 'tab:green')", "+    axs[2, 0].set_title('Road Condition vs Crash Frequency')", "+    # axs[1, 1].plot(x, -y, 'tab:red')", "+    # axs[1, 1].set_title('Axis [1, 1]')", "+", "+    for ax in axs.flat:", "+        ax.set(xlabel='Categories', ylabel='Crashes')", "+    # plt.xlabel(\"Latitude\")", "+    # plt.ylabel(\"Longitude\")", "+    # plt.title('Location of Crashes')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "+    # plt.xlim([41.63, 42.025])", "+    # plt.ylim([-87.87, -87.5])", "+    # plt.colorbar()", "+    get_descriptive_stats(cdf)"], "sub": ["-import mpl_scatter_density", "-    for column in crashes.columns:", "-        print('Column: ', column)", "-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-    #     # if (column == 'TRAFFICWAY_TYPE'):", "-    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'ROAD_DEFECT'):", "-        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_TOTAL'):", "-        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_FATAL'):", "-        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_INCAPACITATING'):", "-        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_NON_INCAPACITATING'):", "-        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'INJURIES_NO_INDICATION'):", "-        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-", "-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)", "-        # print('Missing Values -',crashes[column].isna().sum())", "-        # print('---')", "-    return crashes #demo", "-    plt.xlabel(\"Latitude\")", "-    plt.ylabel(\"Longitude\")", "-    plt.title('Location of Crashes')", "-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)", "-    plt.xlim([41.63, 42.025])", "-    plt.ylim([-87.87, -87.5])", "-    plt.colorbar()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637987901.5070782 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 22:05:25 2021 -0800", "msg": "1637987901.5070782_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637987901.5070782 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637987879.6372528 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 50), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 20:38:15 2021 -0800", "msg": "1637987879.6372528_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 100), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 50), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 50), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 20:37:59 2021 -0800", "msg": "1637987879.6372528_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 50), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637987776.2937944 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.ylim([-87.87, -87.5])"], "sub": ["-    plt.xlim([-87.87, -87.5])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 20:36:33 2021 -0800", "msg": "1637987776.2937944_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.ylim([-87.87, -87.5])"], "sub": ["-    plt.xlim([-87.87, -87.5])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([41.63, 42.025])", "+    plt.xlim([-87.87, -87.5])"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 20:36:16 2021 -0800", "msg": "1637987776.2937944_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.xlim([41.63, 42.025])", "+    plt.xlim([-87.87, -87.5])"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for column in crashes.columns:", "+        print('Column: ', column)"], "sub": ["-    # for column in crashes.columns:", "-    #     print('Column: ', column)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:32:40 2021 -0800", "msg": "1637983960.3797622_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for column in crashes.columns:", "+        print('Column: ', column)"], "sub": ["-    # for column in crashes.columns:", "-    #     print('Column: ', column)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637983938.149577 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:32:18 2021 -0800", "msg": "1637983938.149577_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637983938.149577 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-    #     if (column == 'WEATHER_CONDITION'):", "-    #         print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-    #     if (column == 'LIGHTING_CONDITION'):", "-    #         print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-    #     if (column == 'ROADWAY_SURFACE_COND'):", "-    #         print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:32:18 2021 -0800", "msg": "1637983938.149577_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-    #     if (column == 'WEATHER_CONDITION'):", "-    #         print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-    #     if (column == 'LIGHTING_CONDITION'):", "-    #         print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-    #     if (column == 'ROADWAY_SURFACE_COND'):", "-    #         print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# def using_mpl_scatter_density(fig, x, y):", "+#     white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "+#         (0, '#ffffff'),", "+#         (1e-20, '#440053'),", "+#         (0.2, '#404388'),", "+#         (0.4, '#2a788e'),", "+#         (0.6, '#21a784'),", "+#         (0.8, '#78d151'),", "+#         (1, '#fde624'),", "+#     ], N=256)", "+#     ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "+#     density = ax.scatter_density(x, y, cmap=white_viridis)", "+#     fig.colorbar(density, label='Number of points per pixel')", "+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "+    plt.colorbar()", "+    # fig = plt.figure()", "+    # using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])"], "sub": ["-def using_mpl_scatter_density(fig, x, y):", "-    white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "-        (0, '#ffffff'),", "-        (1e-20, '#440053'),", "-        (0.2, '#404388'),", "-        (0.4, '#2a788e'),", "-        (0.6, '#21a784'),", "-        (0.8, '#78d151'),", "-        (1, '#fde624'),", "-    ], N=256)", "-    ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "-    density = ax.scatter_density(x, y, cmap=white_viridis)", "-    fig.colorbar(density, label='Number of points per pixel')", "-    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "-    # plt.colorbar()", "-    fig = plt.figure()", "-    using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:28:36 2021 -0800", "msg": "1637983716.3008385_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+# def using_mpl_scatter_density(fig, x, y):", "+#     white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "+#         (0, '#ffffff'),", "+#         (1e-20, '#440053'),", "+#         (0.2, '#404388'),", "+#         (0.4, '#2a788e'),", "+#         (0.6, '#21a784'),", "+#         (0.8, '#78d151'),", "+#         (1, '#fde624'),", "+#     ], N=256)", "+#     ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "+#     density = ax.scatter_density(x, y, cmap=white_viridis)", "+#     fig.colorbar(density, label='Number of points per pixel')", "+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "+    plt.colorbar()", "+    # fig = plt.figure()", "+    # using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])"], "sub": ["-def using_mpl_scatter_density(fig, x, y):", "-    white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "-        (0, '#ffffff'),", "-        (1e-20, '#440053'),", "-        (0.2, '#404388'),", "-        (0.4, '#2a788e'),", "-        (0.6, '#21a784'),", "-        (0.8, '#78d151'),", "-        (1, '#fde624'),", "-    ], N=256)", "-    ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "-    density = ax.scatter_density(x, y, cmap=white_viridis)", "-    fig.colorbar(density, label='Number of points per pixel')", "-    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "-    # plt.colorbar()", "-    fig = plt.figure()", "-    using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637983372.0227485 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from matplotlib.colors import LinearSegmentedColormap", "+    white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "+        (0, '#ffffff'),", "+        (1e-20, '#440053'),", "+        (0.2, '#404388'),", "+        (0.4, '#2a788e'),", "+        (0.6, '#21a784'),", "+        (0.8, '#78d151'),", "+        (1, '#fde624'),", "+    ], N=256)", "+    density = ax.scatter_density(x, y, cmap=white_viridis)", "+"], "sub": ["-    density = ax.scatter_density(x, y, cmap='viridis')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:25:00 2021 -0800", "msg": "1637983372.0227485_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from matplotlib.colors import LinearSegmentedColormap", "+    white_viridis = LinearSegmentedColormap.from_list('white_viridis', [", "+        (0, '#ffffff'),", "+        (1e-20, '#440053'),", "+        (0.2, '#404388'),", "+        (0.4, '#2a788e'),", "+        (0.6, '#21a784'),", "+        (0.8, '#78d151'),", "+        (1, '#fde624'),", "+    ], N=256)", "+    density = ax.scatter_density(x, y, cmap=white_viridis)", "+"], "sub": ["-    density = ax.scatter_density(x, y, cmap='viridis')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import mpl_scatter_density"], "sub": ["-from scipy.stats import gaussian_kde"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:22:52 2021 -0800", "msg": "1637983372.0227485_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import mpl_scatter_density"], "sub": ["-from scipy.stats import gaussian_kde"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637983246.6652954 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:20:54 2021 -0800", "msg": "1637983246.6652954_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637983246.6652954 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637972835.8516533 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def using_mpl_scatter_density(fig, x, y):", "+    ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "+    density = ax.scatter_density(x, y, cmap='viridis')", "+    fig.colorbar(density, label='Number of points per pixel')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.colorbar()", "+", "+    fig = plt.figure()", "+    using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])", "+"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "-    plt.colorbar()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 19:20:42 2021 -0800", "msg": "1637972835.8516533_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def using_mpl_scatter_density(fig, x, y):", "+    ax = fig.add_subplot(1, 1, 1, projection='scatter_density')", "+    density = ax.scatter_density(x, y, cmap='viridis')", "+    fig.colorbar(density, label='Number of points per pixel')", "+    # plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "+    # plt.colorbar()", "+", "+    fig = plt.figure()", "+    using_mpl_scatter_density(fig, df['LATITUDE'], df['LONGITUDE'])", "+"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)", "-    plt.colorbar()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637972220.412853 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (100, 100), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:27:06 2021 -0800", "msg": "1637972220.412853_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (75, 75), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (100, 100), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637972191.200068 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (100, 100), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (500, 500), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:16:57 2021 -0800", "msg": "1637972191.200068_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (100, 100), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (500, 500), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637972120.0002637 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (500, 500), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet, cmin=1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:16:27 2021 -0800", "msg": "1637972120.0002637_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (500, 500), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet, cmin=1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637972003.3411248 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:15:07 2021 -0800", "msg": "1637972003.3411248_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet, cmin=1)"], "sub": ["-    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet)", "+    plt.colorbar()", "+    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"], "sub": ["-    xy = np.vstack([df['LATITUDE'],df['LONGITUDE']])", "-    z = gaussian_kde(xy)(xy)", "-    fig, ax = plt.subplots()", "-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:13:23 2021 -0800", "msg": "1637972003.3411248_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.hist2d(df['LATITUDE'], df['LONGITUDE'], (50, 50), cmap=plt.cm.jet)", "+    plt.colorbar()", "+    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"], "sub": ["-    xy = np.vstack([df['LATITUDE'],df['LONGITUDE']])", "-    z = gaussian_kde(xy)(xy)", "-    fig, ax = plt.subplots()", "-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    xy = np.vstack([df['LATITUDE'],df['LONGITUDE']])"], "sub": ["-    xy = np.vstack(df['LATITUDE'],df['LONGITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:09:51 2021 -0800", "msg": "1637971791.2847474_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    xy = np.vstack([df['LATITUDE'],df['LONGITUDE']])"], "sub": ["-    xy = np.vstack(df['LATITUDE'],df['LONGITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971759.144889 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:09:28 2021 -0800", "msg": "1637971759.144889_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971759.144889 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971406.6252813 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from scipy.stats import gaussian_kde", "+    xy = np.vstack(df['LATITUDE'],df['LONGITUDE'])", "+    z = gaussian_kde(xy)(xy)", "+    fig, ax = plt.subplots()", "+    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:09:12 2021 -0800", "msg": "1637971406.6252813_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from scipy.stats import gaussian_kde", "+    xy = np.vstack(df['LATITUDE'],df['LONGITUDE'])", "+    z = gaussian_kde(xy)(xy)", "+    fig, ax = plt.subplots()", "+    # plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], c=z, s=100)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637971369.9071958 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.004)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:03:23 2021 -0800", "msg": "1637971369.9071958_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=1.0/255)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.004)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.004)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:02:50 2021 -0800", "msg": "1637971369.9071958_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.004)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637971257.2956173 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "-    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "-    # print(beats)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:01:33 2021 -0800", "msg": "1637971257.2956173_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "-    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "-    # print(beats)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.001)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:00:57 2021 -0800", "msg": "1637971257.2956173_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.001)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971239.9011736 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:00:51 2021 -0800", "msg": "1637971239.9011736_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971239.9011736 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971186.6248944 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 16:00:36 2021 -0800", "msg": "1637971186.6248944_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637971162.2637272 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.000001)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:59:42 2021 -0800", "msg": "1637971162.2637272_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.000001)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.000001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:59:22 2021 -0800", "msg": "1637971162.2637272_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.000001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971122.5180793 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:59:07 2021 -0800", "msg": "1637971122.5180793_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.0001)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637971003.638931 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:58:38 2021 -0800", "msg": "1637971003.638931_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.01)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637970615.7427447 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:56:38 2021 -0800", "msg": "1637970615.7427447_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)"], "sub": ["-    plt.scatter(df['LATITUDE'], df['LONGITUDE'])"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # for column in crashes.columns:", "+    #     print('Column: ', column)", "+    #     if (column == 'WEATHER_CONDITION'):", "+    #         print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     if (column == 'LIGHTING_CONDITION'):", "+    #         print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     # if (column == 'TRAFFICWAY_TYPE'):", "+    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     if (column == 'ROADWAY_SURFACE_COND'):", "+    #         print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # print('---')", "+    # --- Question 2 ---", "+    # cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "+    # dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "+    # activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "+", "+    # fig, ax = plt.subplots()", "+    # ax.plot(activity, dog, label=\"dog\")", "+    # ax.plot(activity, cat, label=\"cat\")", "+    # ax.legend()", "+", "+    # --- Question 4 ---", "+    plt.xlabel(\"Latitude\")", "+    plt.ylabel(\"Longitude\")", "+    plt.title('Location of Crashes')", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'])", "+    cdf = clean(df)", "+    plot(cdf)"], "sub": ["-    for column in crashes.columns:", "-        print('Column: ', column)", "-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'TRAFFICWAY_TYPE'):", "-        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        print('---')", "-    cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "-    dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "-    activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "-", "-    fig, ax = plt.subplots()", "-    ax.plot(activity, dog, label=\"dog\")", "-    ax.plot(activity, cat, label=\"cat\")", "-    ax.legend()", "-", "-    # cdf = clean(df)", "-    plot(df)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:50:15 2021 -0800", "msg": "1637970615.7427447_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # for column in crashes.columns:", "+    #     print('Column: ', column)", "+    #     if (column == 'WEATHER_CONDITION'):", "+    #         print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     if (column == 'LIGHTING_CONDITION'):", "+    #         print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     # if (column == 'TRAFFICWAY_TYPE'):", "+    #     #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+    #     if (column == 'ROADWAY_SURFACE_COND'):", "+    #         print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # print('---')", "+    # --- Question 2 ---", "+    # cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "+    # dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "+    # activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "+", "+    # fig, ax = plt.subplots()", "+    # ax.plot(activity, dog, label=\"dog\")", "+    # ax.plot(activity, cat, label=\"cat\")", "+    # ax.legend()", "+", "+    # --- Question 4 ---", "+    plt.xlabel(\"Latitude\")", "+    plt.ylabel(\"Longitude\")", "+    plt.title('Location of Crashes')", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'])", "+    cdf = clean(df)", "+    plot(cdf)"], "sub": ["-    for column in crashes.columns:", "-        print('Column: ', column)", "-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'TRAFFICWAY_TYPE'):", "-        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        print('---')", "-    cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "-    dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "-    activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "-", "-    fig, ax = plt.subplots()", "-    ax.plot(activity, dog, label=\"dog\")", "-    ax.plot(activity, cat, label=\"cat\")", "-    ax.legend()", "-", "-    # cdf = clean(df)", "-    plot(df)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)", "+        # print('Missing Values -',crashes[column].isna().sum())", "+    # cdf = clean(df)", "+    plot(df)"], "sub": ["-        # if (column == 'WEATHER_CONDITION'):", "-        #     print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'LIGHTING_CONDITION'):", "-        #     print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROADWAY_SURFACE_COND'):", "-        #     print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'STREET_NO'):", "-            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        crashes = crashes.replace('UNKNOWN', np.NaN)", "-        print('Missing Values -',crashes[column].isna().sum())", "-    cdf = clean(df)", "-    plot(cdf)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:42:47 2021 -0800", "msg": "1637970167.4376097_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)", "+        # print('Missing Values -',crashes[column].isna().sum())", "+    # cdf = clean(df)", "+    plot(df)"], "sub": ["-        # if (column == 'WEATHER_CONDITION'):", "-        #     print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'LIGHTING_CONDITION'):", "-        #     print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'ROADWAY_SURFACE_COND'):", "-        #     print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'STREET_NO'):", "-            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        crashes = crashes.replace('UNKNOWN', np.NaN)", "-        print('Missing Values -',crashes[column].isna().sum())", "-    cdf = clean(df)", "-    plot(cdf)"]}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+", "+", "+", "+", "+"], "sub": ["-import matplotlib.pyplot as plt", "-    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "-    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "-    # print(beats)", "-            # mask = (df[column] % 10 != 0) & (df[column] % 10 != 5)", "-            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "-            # df[column].fillna(df[column].mean()", "-            # df['LATITUDE'] = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].transform(lambda x: x.fillna(x.mean))", "-            # temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "-            # df.fillna(method='ffill')", "-            #-----------------------", "-            # print(beats['BEAT_OF_OCCURRENCE'][0])", "-            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "-            # df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])", "-            # df[column].fillna(axis = 0, value = beats_lat) #doesnt work because we're trying to look up stuff from beats and not from latitude", "-            # narow = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "-            # na_row is now all the rows with na in latitude", "-            # na_row = df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']", "-            # now look up the beat and do conditional mean", "-            # mean = (df['BEAT_OF_OCCURRENCE'] == df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']).mean()", "-        # if (column == 'LONGITUDE'):", "-        #     df = df.replace({column: {0:np.NaN}})", "-        #     temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-        #     df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)", "-        #     df[column].fillna(axis = 0, value = beats_long)", "-            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "-            # df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))", "-            # df = df.replace({'LONGITUDE': {0:np.NaN}})", "-", "-        # if (column == 'STREET_NO'):", "-        #     df = df.replace({'STREET_NO': {0:np.NaN}})", "-", "-", "-    # df = pd.read_csv('data_2.csv', index_col='CRASH_ID')", "-    # for column in df.columns:", "-    #     print('Column: ', column)", "-    # #         # print('Mean -',df[column].mean())", "-    # #         # print('STD -',df[column].std())", "-    # #         # print('Range -',df[column].min(), df[column].max())", "-    #     if (column == 'POSTED_SPEED_LIMIT'):", "-    #         df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-    #     if (column == 'STREET_NO'):", "-    #         df = df.replace({'STREET_NO': {0:np.NaN}})", "-    #     if (column == 'LATITUDE'):", "-    #         df = df.replace({'LATITUDE': {0:np.NaN}})", "-    #     if (column == 'LONGITUDE'):", "-    #         df = df.replace({'LONGITUDE': {0:np.NaN}})", "-    # #         df = df.replace('UNKNOWN', np.NaN)", "-    #     print('Missing Values -',df[column].isna().sum())", "-    #     print('---')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    '''load(filename) takes as input a filename and loads a dataframe.", "+    '''", "+    crashes = pd.read_csv(filename, index_col='CRASH_ID')", "+", "+    return crashes #demo", "+", "+def clean(df):", "+    '''clean(df) takes as input a dataframe and fixes any data errors", "+        *that might affect your results*. it returns a copy of the dataframe", "+        without errors.", "+    '''", "+    df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "+    # print(beats)", "+    for column in df.columns:", "+        print('Column: ', column)", "+        if ((column == 'ROADWAY_SURFACE_COND') | (column == 'WEATHER_CONDITION') \\", "+            | (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):", "+            df = df[df.ROADWAY_SURFACE_COND != 'UNKNOWN']", "+            df = df[df.WEATHER_CONDITION != 'UNKNOWN']", "+            df = df[df.LIGHTING_CONDITION != 'UNKNOWN']", "+            df = df[df.TRAFFICWAY_TYPE != 'UNKNOWN']", "+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            df[column].fillna('NO INDICATION OF INJURY', inplace = True)", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df[column].fillna(df[column].median(), inplace = True)", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            # mask = (df[column] % 10 != 0) & (df[column] % 10 != 5)", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df[column].fillna(df[column].median(), inplace = True)", "+        if ((column == 'LATITUDE')):", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+            # df[column].fillna(df[column].mean()", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+            # df['LATITUDE'] = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].transform(lambda x: x.fillna(x.mean))", "+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'], inplace = True)", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'], inplace = True)", "+            df = df.dropna(subset = ['LATITUDE', 'LONGITUDE'])", "+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+            #-----------------------", "+            # print(beats['BEAT_OF_OCCURRENCE'][0])", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+            # df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])", "+            # df[column].fillna(axis = 0, value = beats_lat) #doesnt work because we're trying to look up stuff from beats and not from latitude", "+            # narow = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            # na_row is now all the rows with na in latitude", "+            # na_row = df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']", "+            # now look up the beat and do conditional mean", "+            # mean = (df['BEAT_OF_OCCURRENCE'] == df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']).mean()", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+        #     df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)", "+        #     df[column].fillna(axis = 0, value = beats_long)", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+            # df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})", "+", "+", "+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({'STREET_NO': {0:np.NaN}})", "+    return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+    '''plot(df) takes as input a clean dataframe and generates a plot. The", "+    style of the plot and variables are up to you.", "+    '''", "+    # ax = plt.figure().add_subplot(projection='3d')", "+    # ax.set_xlabel(\"WEATHER_CONDITION\")", "+    # ax.set_ylabel(\"LIGHTING_CONDITION\")", "+    # ax.set_zlabel(\"ROADWAY_SURFACE_COND\")", "+    # plt.scatter(df['A'],df['B'])", "+    cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "+    dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "+    activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "+", "+    fig, ax = plt.subplots()", "+    ax.plot(activity, dog, label=\"dog\")", "+    ax.plot(activity, cat, label=\"cat\")", "+    ax.legend()", "+", "+    return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+"], "sub": ["-  '''load(filename) takes as input a filename and loads a dataframe.", "-  '''", "-  return pd.read_csv(filename) #demo", "-", "-def clean(df):", "-  '''clean(df) takes as input a dataframe and fixes any data errors", "-     *that might affect your results*. it returns a copy of the dataframe", "-     without errors.", "-  '''", "-", "-  return df #demo", "-", "-", "-#TODO 2.", "-def plot(df):", "-  '''plot(df) takes as input a clean dataframe and generates a plot. The", "-  style of the plot and variables are up to you.", "-  '''", "-", "-  plt.scatter(df['A'],df['B'])", "-  return None", "-", "-", "-", "-#The main() function  of this program", "-", "-if __name__ == \"__main__\":", "-    # df = load('data.csv')", "-    # cdf = clean(df)", "-    # plot(cdf)", "-    # plt.show()", "-    crashes = pd.read_csv('clean5.csv', index_col='CRASH_ID')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 15:38:34 2021 -0800", "msg": "1637969914.2280385_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    '''load(filename) takes as input a filename and loads a dataframe.", "+    '''", "+    crashes = pd.read_csv(filename, index_col='CRASH_ID')", "+", "+    return crashes #demo", "+", "+def clean(df):", "+    '''clean(df) takes as input a dataframe and fixes any data errors", "+        *that might affect your results*. it returns a copy of the dataframe", "+        without errors.", "+    '''", "+    df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "+    # print(beats)", "+    for column in df.columns:", "+        print('Column: ', column)", "+        if ((column == 'ROADWAY_SURFACE_COND') | (column == 'WEATHER_CONDITION') \\", "+            | (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):", "+            df = df[df.ROADWAY_SURFACE_COND != 'UNKNOWN']", "+            df = df[df.WEATHER_CONDITION != 'UNKNOWN']", "+            df = df[df.LIGHTING_CONDITION != 'UNKNOWN']", "+            df = df[df.TRAFFICWAY_TYPE != 'UNKNOWN']", "+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            df[column].fillna('NO INDICATION OF INJURY', inplace = True)", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df[column].fillna(df[column].median(), inplace = True)", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            # mask = (df[column] % 10 != 0) & (df[column] % 10 != 5)", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df[column].fillna(df[column].median(), inplace = True)", "+        if ((column == 'LATITUDE')):", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+            # df[column].fillna(df[column].mean()", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+            # df['LATITUDE'] = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].transform(lambda x: x.fillna(x.mean))", "+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'], inplace = True)", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'], inplace = True)", "+            df = df.dropna(subset = ['LATITUDE', 'LONGITUDE'])", "+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+            #-----------------------", "+            # print(beats['BEAT_OF_OCCURRENCE'][0])", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+            # df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])", "+            # df[column].fillna(axis = 0, value = beats_lat) #doesnt work because we're trying to look up stuff from beats and not from latitude", "+            # narow = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            # na_row is now all the rows with na in latitude", "+            # na_row = df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']", "+            # now look up the beat and do conditional mean", "+            # mean = (df['BEAT_OF_OCCURRENCE'] == df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']).mean()", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+        #     df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)", "+        #     df[column].fillna(axis = 0, value = beats_long)", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+            # df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})", "+", "+", "+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({'STREET_NO': {0:np.NaN}})", "+    return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+    '''plot(df) takes as input a clean dataframe and generates a plot. The", "+    style of the plot and variables are up to you.", "+    '''", "+    # ax = plt.figure().add_subplot(projection='3d')", "+    # ax.set_xlabel(\"WEATHER_CONDITION\")", "+    # ax.set_ylabel(\"LIGHTING_CONDITION\")", "+    # ax.set_zlabel(\"ROADWAY_SURFACE_COND\")", "+    # plt.scatter(df['A'],df['B'])", "+    cat = [\"bored\", \"happy\", \"bored\", \"bored\", \"happy\", \"bored\"]", "+    dog = [\"happy\", \"happy\", \"happy\", \"happy\", \"bored\", \"bored\"]", "+    activity = [\"combing\", \"drinking\", \"feeding\", \"napping\", \"playing\", \"washing\"]", "+", "+    fig, ax = plt.subplots()", "+    ax.plot(activity, dog, label=\"dog\")", "+    ax.plot(activity, cat, label=\"cat\")", "+    ax.legend()", "+", "+    return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+"], "sub": ["-  '''load(filename) takes as input a filename and loads a dataframe.", "-  '''", "-  return pd.read_csv(filename) #demo", "-", "-def clean(df):", "-  '''clean(df) takes as input a dataframe and fixes any data errors", "-     *that might affect your results*. it returns a copy of the dataframe", "-     without errors.", "-  '''", "-", "-  return df #demo", "-", "-", "-#TODO 2.", "-def plot(df):", "-  '''plot(df) takes as input a clean dataframe and generates a plot. The", "-  style of the plot and variables are up to you.", "-  '''", "-", "-  plt.scatter(df['A'],df['B'])", "-  return None", "-", "-", "-", "-#The main() function  of this program", "-", "-if __name__ == \"__main__\":", "-    # df = load('data.csv')", "-    # cdf = clean(df)", "-    # plot(cdf)", "-    # plt.show()", "-    crashes = pd.read_csv('clean5.csv', index_col='CRASH_ID')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962564.6800134 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:36:12 2021 -0800", "msg": "1637962564.6800134_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962564.6800134 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962393.735892 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:33:26 2021 -0800", "msg": "1637962393.735892_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962393.735892 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-            df = df.replace({['LATITUDE', 'LONGITUDE']: {0:np.NaN}})", "-            # df = df.replace({'LONGITUDE': {0:np.NaN}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:33:13 2021 -0800", "msg": "1637962393.735892_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-            df = df.replace({['LATITUDE', 'LONGITUDE']: {0:np.NaN}})", "-            # df = df.replace({'LONGITUDE': {0:np.NaN}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637962371.6438737 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:32:58 2021 -0800", "msg": "1637962371.6438737_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637962371.6438737 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637962359.5565894 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:32:47 2021 -0800", "msg": "1637962359.5565894_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637962359.5565894 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({['LATITUDE', 'LONGITUDE']: {0:np.NaN}})", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-            # df = df.replace({'LATITUDE': {0:np.NaN}})", "-            df = df.replace({column: {0:np.NaN}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:32:39 2021 -0800", "msg": "1637962359.5565894_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({['LATITUDE', 'LONGITUDE']: {0:np.NaN}})", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-            # df = df.replace({'LATITUDE': {0:np.NaN}})", "-            df = df.replace({column: {0:np.NaN}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962202.340076 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:30:10 2021 -0800", "msg": "1637962202.340076_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962202.340076 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962181.3480937 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:29:44 2021 -0800", "msg": "1637962181.3480937_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637962181.3480937 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962104.5677764 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:28:37 2021 -0800", "msg": "1637962104.5677764_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962104.5677764 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            # df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:28:24 2021 -0800", "msg": "1637962104.5677764_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            # df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962030.1889415 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:27:24 2021 -0800", "msg": "1637962030.1889415_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637962030.1889415 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna('NO INDICATION OF INJURY', inplace = True)"], "sub": ["-            df[column].fillna('NO INDICATION OF INJURY')"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_TOTAL'):", "+        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_FATAL'):", "+        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_INCAPACITATING'):", "+        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_NON_INCAPACITATING'):", "+        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_NO_INDICATION'):", "+        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'STREET_NO'):", "+            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        if (column == 'LATITUDE'):", "+            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        # print('Mean -',crashes[column].mean())", "-        # print('STD -',crashes[column].std())", "-        # print('Range -',crashes[column].min(), crashes[column].max())", "-        if (column == 'MOST_SEVERE_INJURY'):", "-            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_TOTAL'):", "-            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_FATAL'):", "-            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_INCAPACITATING'):", "-            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_NON_INCAPACITATING'):", "-            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_NO_INDICATION'):", "-            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:27:10 2021 -0800", "msg": "1637962030.1889415_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_TOTAL'):", "+        #     print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_FATAL'):", "+        #     print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_INCAPACITATING'):", "+        #     print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_NON_INCAPACITATING'):", "+        #     print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+        #     print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'INJURIES_NO_INDICATION'):", "+        #     print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        if (column == 'STREET_NO'):", "+            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        if (column == 'LATITUDE'):", "+            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        # print('Mean -',crashes[column].mean())", "-        # print('STD -',crashes[column].std())", "-        # print('Range -',crashes[column].min(), crashes[column].max())", "-        if (column == 'MOST_SEVERE_INJURY'):", "-            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_TOTAL'):", "-            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_FATAL'):", "-            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_INCAPACITATING'):", "-            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_NON_INCAPACITATING'):", "-            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "-            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'INJURIES_NO_INDICATION'):", "-            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        # if (column == 'STREET_NO'):", "-        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        # if (column == 'LATITUDE'):", "-        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        # crashes = crashes.replace('UNKNOWN', np.NaN)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637961941.8048513 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:25:45 2021 -0800", "msg": "1637961941.8048513_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1637961941.8048513 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637961913.5654979 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:25:16 2021 -0800", "msg": "1637961913.5654979_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637961913.5654979 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    crashes = pd.read_csv('clean5.csv', index_col='CRASH_ID')"], "sub": ["-    crashes = pd.read_csv('data_2.csv', index_col='CRASH_ID')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:25:13 2021 -0800", "msg": "1637961913.5654979_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    crashes = pd.read_csv('clean5.csv', index_col='CRASH_ID')"], "sub": ["-    crashes = pd.read_csv('data_2.csv', index_col='CRASH_ID')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961839.7890072 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:24:14 2021 -0800", "msg": "1637961839.7890072_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961839.7890072 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.dropna(subset = ['LATITUDE', 'LONGITUDE'])", "+    cdf.to_csv('clean5.csv')"], "sub": ["-        #         # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "-        #         df = df.fillna(0)", "-        #         # print(df[column].apply(type))", "-    cdf.to_csv('clean4.csv')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:23:59 2021 -0800", "msg": "1637961839.7890072_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.dropna(subset = ['LATITUDE', 'LONGITUDE'])", "+    cdf.to_csv('clean5.csv')"], "sub": ["-        #         # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "-        #         df = df.fillna(0)", "-        #         # print(df[column].apply(type))", "-    cdf.to_csv('clean4.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961509.76468 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:18:43 2021 -0800", "msg": "1637961509.76468_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961509.76468 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "+    cdf.to_csv('clean4.csv')"], "sub": ["-            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "-    cdf.to_csv('clean3.csv')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:18:29 2021 -0800", "msg": "1637961509.76468_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "+    cdf.to_csv('clean4.csv')"], "sub": ["-            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])", "-    cdf.to_csv('clean3.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961413.0708394 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:17:06 2021 -0800", "msg": "1637961413.0708394_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961413.0708394 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:16:53 2021 -0800", "msg": "1637961413.0708394_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961355.656074 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:16:10 2021 -0800", "msg": "1637961355.656074_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961355.656074 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:15:55 2021 -0800", "msg": "1637961355.656074_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(columns=['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(['LATITUDE_notnull', 'LONGITUDE_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961322.2825582 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:15:29 2021 -0800", "msg": "1637961322.2825582_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961322.2825582 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(['LATITUDE', 'LONGITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:15:22 2021 -0800", "msg": "1637961322.2825582_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(['LATITUDE_notnull', 'LONGITUDE_notnull'])"], "sub": ["-            df.drop(['LATITUDE', 'LONGITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961280.5739229 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:14:47 2021 -0800", "msg": "1637961280.5739229_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961280.5739229 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(['LATITUDE', 'LONGITUDE'])"], "sub": ["-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:14:40 2021 -0800", "msg": "1637961280.5739229_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.drop(['LATITUDE', 'LONGITUDE'])"], "sub": ["-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961088.7168205 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:11:43 2021 -0800", "msg": "1637961088.7168205_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961088.7168205 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].median(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean(), inplace = True)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:11:28 2021 -0800", "msg": "1637961088.7168205_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].median(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean(), inplace = True)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961032.0893836 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:10:46 2021 -0800", "msg": "1637961032.0893836_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637961032.0893836 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].median(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean(), inplace = True)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:10:32 2021 -0800", "msg": "1637961032.0893836_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].median(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean(), inplace = True)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960961.356655 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:09:35 2021 -0800", "msg": "1637960961.356655_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960961.356655 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            # df = df.replace({column: {0:np.NaN}})", "-            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = 0"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:09:21 2021 -0800", "msg": "1637960961.356655_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            # df = df.replace({column: {0:np.NaN}})", "-            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = 0"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960937.7407675 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:09:11 2021 -0800", "msg": "1637960937.7407675_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960937.7407675 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # mask = (df[column] % 10 != 0) & (df[column] % 10 != 5)", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            mask = (df[column] % 10 != 0) | (df[column] % 10 != 5)", "-            df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:08:57 2021 -0800", "msg": "1637960937.7407675_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # mask = (df[column] % 10 != 0) & (df[column] % 10 != 5)", "+            df.loc[(df[column] % 10 != 0) & (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            mask = (df[column] % 10 != 0) | (df[column] % 10 != 5)", "-            df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960840.6259382 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:07:34 2021 -0800", "msg": "1637960840.6259382_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960840.6259382 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            df = df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:07:20 2021 -0800", "msg": "1637960840.6259382_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            df = df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960809.4077468 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:06:52 2021 -0800", "msg": "1637960809.4077468_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960809.4077468 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df.replace({column: {0:np.NaN}})", "+            mask = (df[column] % 10 != 0) | (df[column] % 10 != 5)", "+            df = df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            df = df.replace({column: {0:np.NaN}})", "-            df = df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:06:49 2021 -0800", "msg": "1637960809.4077468_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df.replace({column: {0:np.NaN}})", "+            mask = (df[column] % 10 != 0) | (df[column] % 10 != 5)", "+            df = df.loc[mask, 'POSTED_SPEED_LIMIT'] = 0"], "sub": ["-            df = df.replace({column: {0:np.NaN}})", "-            df = df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960700.0443068 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:05:03 2021 -0800", "msg": "1637960700.0443068_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960700.0443068 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:05:00 2021 -0800", "msg": "1637960700.0443068_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637960546.659605 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 13:02:40 2021 -0800", "msg": "1637960546.659605_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637960546.659605 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960320.486131 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:58:47 2021 -0800", "msg": "1637960320.486131_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960320.486131 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].mean(), inplace = True)", "+            df[column].fillna(df[column].mean(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean())", "-            df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:58:40 2021 -0800", "msg": "1637960320.486131_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(df[column].mean(), inplace = True)", "+            df[column].fillna(df[column].mean(), inplace = True)"], "sub": ["-            df[column].fillna(df[column].mean())", "-            df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960066.6454837 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:54:40 2021 -0800", "msg": "1637960066.6454837_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637960066.6454837 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'], inplace = True)", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'], inplace = True)"], "sub": ["-            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'])", "-            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:54:26 2021 -0800", "msg": "1637960066.6454837_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'], inplace = True)", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'], inplace = True)"], "sub": ["-            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'])", "-            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959852.5474265 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:51:06 2021 -0800", "msg": "1637959852.5474265_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959852.5474265 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'])", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'])", "+"], "sub": ["-            df[column].fillna(value=df[column + '_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:50:52 2021 -0800", "msg": "1637959852.5474265_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df['LATITUDE'].fillna(value=df['LATITUDE_notnull'])", "+            df['LONGITUDE'].fillna(value=df['LONGITUDE_notnull'])", "+"], "sub": ["-            df[column].fillna(value=df[column + '_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959729.3152435 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:49:02 2021 -0800", "msg": "1637959729.3152435_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959729.3152435 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE')):", "+            df[column].fillna(value=df[column + '_notnull'])"], "sub": ["-        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "-            # df[column].fillna(value=temp[column + '_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:48:49 2021 -0800", "msg": "1637959729.3152435_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE')):", "+            df[column].fillna(value=df[column + '_notnull'])"], "sub": ["-        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "-            # df[column].fillna(value=temp[column + '_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959624.3065286 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:47:19 2021 -0800", "msg": "1637959624.3065286_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959624.3065286 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"], "sub": ["-            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_notnull'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:47:04 2021 -0800", "msg": "1637959624.3065286_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"], "sub": ["-            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_notnull'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959600.701986 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:46:47 2021 -0800", "msg": "1637959600.701986_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959600.701986 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_notnull'))"], "sub": ["-    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "-            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:46:40 2021 -0800", "msg": "1637959600.701986_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats[beats['BEAT_OF_OCCURRENCE'] == 1655])", "+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_notnull'))"], "sub": ["-    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "-            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959460.414886 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:44:36 2021 -0800", "msg": "1637959460.414886_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959460.414886 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "+            # temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df[column].fillna(value=temp[column + '_notnull'])"], "sub": ["-            # df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "-            temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df[column].fillna(value=temp[column + '_notnull'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:44:20 2021 -0800", "msg": "1637959460.414886_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "+            # temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df[column].fillna(value=temp[column + '_notnull'])"], "sub": ["-            # df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "-            temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df[column].fillna(value=temp[column + '_notnull'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959385.2480412 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:43:17 2021 -0800", "msg": "1637959385.2480412_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959385.2480412 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+        #     df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-        if ((column == 'LATITUDE')):", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({column: {0:np.NaN}})", "-            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:43:05 2021 -0800", "msg": "1637959385.2480412_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+        #     df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-        if ((column == 'LATITUDE')):", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({column: {0:np.NaN}})", "-            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959354.9400487 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:42:41 2021 -0800", "msg": "1637959354.9400487_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637959354.9400487 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "+            # df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "+            temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df[column].fillna(value=temp[column + '_notnull'])", "+    cdf.to_csv('clean3.csv')"], "sub": ["-    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "-    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "-            df = df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "-            # temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            # df.LATITUDE.fillna(value=temp.LATITUDE_notnull)", "-    cdf.to_csv('clean2.csv')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:42:35 2021 -0800", "msg": "1637959354.9400487_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "+    # print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "+            # df = df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "+            temp = df[df[column].isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df[column].fillna(value=temp[column + '_notnull'])", "+    cdf.to_csv('clean3.csv')"], "sub": ["-    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "-    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])", "-            df = df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))", "-            # temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            # df.LATITUDE.fillna(value=temp.LATITUDE_notnull)", "-    cdf.to_csv('clean2.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958740.9475515 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:32:34 2021 -0800", "msg": "1637958740.9475515_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958740.9475515 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:32:21 2021 -0800", "msg": "1637958740.9475515_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958678.053813 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:31:31 2021 -0800", "msg": "1637958678.053813_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958678.053813 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"], "sub": ["-            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left', suffixes=('_x', '_y'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:31:18 2021 -0800", "msg": "1637958678.053813_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('_x', '_y'))"], "sub": ["-            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left', suffixes=('_x', '_y'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958541.4713528 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:29:14 2021 -0800", "msg": "1637958541.4713528_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958541.4713528 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "+    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])"], "sub": ["-    print(beats_lat)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:29:01 2021 -0800", "msg": "1637958541.4713528_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 1934])", "+    print(beats_lat[beats_lat['BEAT_OF_OCCURRENCE'] == 111])"], "sub": ["-    print(beats_lat)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958261.9633205 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:24:34 2021 -0800", "msg": "1637958261.9633205_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637958261.9633205 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)", "+            # df['LATITUDE'] = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].transform(lambda x: x.fillna(x.mean))", "+            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left', suffixes=('_x', '_y'))"], "sub": ["-    # print(beats_lat)", "-            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:24:22 2021 -0800", "msg": "1637958261.9633205_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)", "+            # df['LATITUDE'] = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].transform(lambda x: x.fillna(x.mean))", "+            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left', suffixes=('_x', '_y'))"], "sub": ["-    # print(beats_lat)", "-            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637957644.8358788 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:14:18 2021 -0800", "msg": "1637957644.8358788_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637957644.8358788 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left')", "+            # df.fillna(method='ffill')", "+            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-            # df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "-            df.fillna(beats_lat)", "-            # temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            # df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:14:05 2021 -0800", "msg": "1637957644.8358788_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on='BEAT_OF_OCCURRENCE', how = 'left')", "+            # df.fillna(method='ffill')", "+            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-            # df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "-            df.fillna(beats_lat)", "-            # temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            # df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956995.942007 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:03:28 2021 -0800", "msg": "1637956995.942007_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956995.942007 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "+            df.fillna(beats_lat)", "+            # temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "-            # df.fillna(method='ffill')", "-            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 12:03:16 2021 -0800", "msg": "1637956995.942007_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "+            df.fillna(beats_lat)", "+            # temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))", "-            # df.fillna(method='ffill')", "-            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956710.3259258 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:58:43 2021 -0800", "msg": "1637956710.3259258_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956710.3259258 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:58:30 2021 -0800", "msg": "1637956710.3259258_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'right', suffixes=('', '_notnull'))"], "sub": ["-            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956603.5902839 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:56:56 2021 -0800", "msg": "1637956603.5902839_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956603.5902839 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df.LATITUDE.fillna(value=temp.LATITUDE_notnull)"], "sub": ["-            # df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "-            temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LATITUDE.fillna(value=temp.LATITUDE_notnull)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:56:43 2021 -0800", "msg": "1637956603.5902839_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            # df.LATITUDE.fillna(value=temp.LATITUDE_notnull)"], "sub": ["-            # df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "-            temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            df.LATITUDE.fillna(value=temp.LATITUDE_notnull)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956483.9798741 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:54:56 2021 -0800", "msg": "1637956483.9798741_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956483.9798741 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+            temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-            temp = df[df.LATITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            temp = df[df.LONGITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:54:44 2021 -0800", "msg": "1637956483.9798741_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+            temp = df[df.LATITUDE.isna()].merge(beats_lat, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            temp = df[df.LONGITUDE.isna()].merge(beats_long, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-            temp = df[df.LATITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "-            temp = df[df.LONGITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637956343.1914058 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:52:35 2021 -0800", "msg": "1637956343.1914058_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637956343.1914058 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956330.4351695 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:52:16 2021 -0800", "msg": "1637956330.4351695_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637956330.4351695 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE')):", "+            # df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "+            temp = df[df.LATITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LATITUDE.fillna(value=temp.LATITUDE_notnull)", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({column: {0:np.NaN}})", "+            temp = df[df.LONGITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "-            df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "-        # if (column == 'LONGITUDE'):", "-        #     df = df.replace({column: {0:np.NaN}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:52:10 2021 -0800", "msg": "1637956330.4351695_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'LATITUDE')):", "+            # df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "+            temp = df[df.LATITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LATITUDE.fillna(value=temp.LATITUDE_notnull)", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({column: {0:np.NaN}})", "+            temp = df[df.LONGITUDE.isna()].merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left', suffixes=('', '_notnull'))", "+            df.LONGITUDE.fillna(value=temp.LONGITUDE_notnull)"], "sub": ["-        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):", "-            df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "-        # if (column == 'LONGITUDE'):", "-        #     df = df.replace({column: {0:np.NaN}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637955941.0861633 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:45:54 2021 -0800", "msg": "1637955941.0861633_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637955941.0861633 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+            df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+    cdf.to_csv('clean2.csv')"], "sub": ["-    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-            df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "-            df.fillna(method='ffill')", "-    cdf.to_csv('clean.csv')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:45:41 2021 -0800", "msg": "1637955941.0861633_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+            df.merge(beats, on=['BEAT_OF_OCCURRENCE'], how = 'left')", "+            # df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            # df.fillna(method='ffill')", "+    cdf.to_csv('clean2.csv')"], "sub": ["-    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-            df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "-            df.fillna(method='ffill')", "-    cdf.to_csv('clean.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637954244.4741805 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:17:37 2021 -0800", "msg": "1637954244.4741805_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637954244.4741805 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+            #-----------------------"], "sub": ["-    df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:17:24 2021 -0800", "msg": "1637954244.4741805_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+            #-----------------------"], "sub": ["-    df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637953867.9740849 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:11:21 2021 -0800", "msg": "1637953867.9740849_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637953867.9740849 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637953853.7186532 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:11:01 2021 -0800", "msg": "1637953853.7186532_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637953853.7186532 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # print(beats_lat)", "+        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):"], "sub": ["-    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats_lat)", "-        if (column == 'LATITUDE' | column == 'LONGITUDE'):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:10:53 2021 -0800", "msg": "1637953853.7186532_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    # beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    # print(beats_lat)", "+        if ((column == 'LATITUDE') | (column == 'LONGITUDE')):"], "sub": ["-    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "-    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "-    beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats_lat)", "-        if (column == 'LATITUDE' | column == 'LONGITUDE'):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637953827.3043354 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:10:32 2021 -0800", "msg": "1637953827.3043354_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637953827.3043354 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'LATITUDE' | column == 'LONGITUDE'):", "+            df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            df.fillna(method='ffill')", "+            # df[column].fillna(axis = 0, value = beats_lat) #doesnt work because we're trying to look up stuff from beats and not from latitude", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     df[column].fillna(axis = 0, value = beats_long)"], "sub": ["-        if (column == 'LATITUDE'):", "-            df[column].fillna(axis = 0, value = beats_lat)", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({column: {0:np.NaN}})", "-            df[column].fillna(axis = 0, value = beats_long)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Fri Nov 26 11:10:27 2021 -0800", "msg": "1637953827.3043354_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'LATITUDE' | column == 'LONGITUDE'):", "+            df.sort_values(by='BEAT_OF_OCCURRENCE',inplace=True)", "+            df.fillna(method='ffill')", "+            # df[column].fillna(axis = 0, value = beats_lat) #doesnt work because we're trying to look up stuff from beats and not from latitude", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     df[column].fillna(axis = 0, value = beats_long)"], "sub": ["-        if (column == 'LATITUDE'):", "-            df[column].fillna(axis = 0, value = beats_lat)", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({column: {0:np.NaN}})", "-            df[column].fillna(axis = 0, value = beats_long)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910989.9317439 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:16:42 2021 -0800", "msg": "1637910989.9317439_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910989.9317439 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(axis = 0, value = beats_lat)", "+            df[column].fillna(axis = 0, value = beats_long)"], "sub": ["-            df[column].fillna(value = beats_lat)", "-            df[column].fillna(value = beats_long)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:16:30 2021 -0800", "msg": "1637910989.9317439_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(axis = 0, value = beats_lat)", "+            df[column].fillna(axis = 0, value = beats_long)"], "sub": ["-            df[column].fillna(value = beats_lat)", "-            df[column].fillna(value = beats_long)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910297.3702862 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:05:03 2021 -0800", "msg": "1637910297.3702862_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910297.3702862 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)"], "sub": ["-    print(beats_lat)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:04:57 2021 -0800", "msg": "1637910297.3702862_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)"], "sub": ["-    print(beats_lat)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910280.6588736 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:04:47 2021 -0800", "msg": "1637910280.6588736_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910280.6588736 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)"], "sub": ["-    # print(beats)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:04:40 2021 -0800", "msg": "1637910280.6588736_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    print(beats_lat)"], "sub": ["-    # print(beats)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910201.8169606 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:03:34 2021 -0800", "msg": "1637910201.8169606_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910201.8169606 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(value = beats_long)", "+            # df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:03:22 2021 -0800", "msg": "1637910201.8169606_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(value = beats_long)", "+            # df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910168.8192713 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:02:55 2021 -0800", "msg": "1637910168.8192713_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910168.8192713 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # print(beats)", "+    beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+            df[column].fillna(value = beats_lat)"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    beats = beats.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats)", "-            df[column].fillna(value = beats[0])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:02:49 2021 -0800", "msg": "1637910168.8192713_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "+    beats_lat = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE'].mean()", "+    beats_long = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LONGITUDE'].mean()", "+    # print(beats)", "+    beats_lat = beats_lat.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+    beats_long = beats_long.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "+            df[column].fillna(value = beats_lat)"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()", "-    beats = beats.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')", "-    print(beats)", "-            df[column].fillna(value = beats[0])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910085.3706613 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:01:31 2021 -0800", "msg": "1637910085.3706613_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637910085.3706613 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])", "+            df[column].fillna(value = beats[0])"], "sub": ["-            df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 23:01:25 2021 -0800", "msg": "1637910085.3706613_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])", "+            df[column].fillna(value = beats[0])"], "sub": ["-            df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637909770.7246792 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:56:17 2021 -0800", "msg": "1637909770.7246792_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637909770.7246792 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # print(beats)", "+    beats = beats.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:56:10 2021 -0800", "msg": "1637909770.7246792_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    # print(beats)", "+    beats = beats.set_index('BEAT_OF_OCCURRENCE').T.to_dict('list')"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908950.7451718 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:42:37 2021 -0800", "msg": "1637908950.7451718_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908950.7451718 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # print(beats['BEAT_OF_OCCURRENCE'][0])"], "sub": ["-            print(beats['BEAT_OF_OCCURRENCE'][0])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:42:30 2021 -0800", "msg": "1637908950.7451718_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # print(beats['BEAT_OF_OCCURRENCE'][0])"], "sub": ["-            print(beats['BEAT_OF_OCCURRENCE'][0])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908931.2363293 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:42:17 2021 -0800", "msg": "1637908931.2363293_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908931.2363293 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc[df.BEAT_OF_OCCURRENCE, 'LATITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:42:11 2021 -0800", "msg": "1637908931.2363293_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[df['BEAT_OF_OCCURRENCE'], 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc[df.BEAT_OF_OCCURRENCE, 'LATITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908882.5430393 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:41:28 2021 -0800", "msg": "1637908882.5430393_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908882.5430393 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[df.BEAT_OF_OCCURRENCE, 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc(df.BEAT_OF_OCCURRENCE, 'LATITUDE'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:41:22 2021 -0800", "msg": "1637908882.5430393_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[df.BEAT_OF_OCCURRENCE, 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc(df.BEAT_OF_OCCURRENCE, 'LATITUDE'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908849.7990446 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:40:56 2021 -0800", "msg": "1637908849.7990446_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908849.7990446 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc(df.BEAT_OF_OCCURRENCE, 'LATITUDE'))", "+            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LATITUDE']))", "-            [column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:40:49 2021 -0800", "msg": "1637908849.7990446_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc(df.BEAT_OF_OCCURRENCE, 'LATITUDE'))", "+            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LATITUDE']))", "-            [column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908679.5520558 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:38:05 2021 -0800", "msg": "1637908679.5520558_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908679.5520558 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LATITUDE']))", "+            [column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LATITUDE']])", "-            [column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:37:59 2021 -0800", "msg": "1637908679.5520558_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LATITUDE']))", "+            [column].fillna(beats.lookup(df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']))"], "sub": ["-            df[column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LATITUDE']])", "-            [column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908643.803876 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:37:30 2021 -0800", "msg": "1637908643.803876_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908643.803876 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LATITUDE']])", "+            [column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']])"], "sub": ["-            df[column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LATITUDE']])", "-            [column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LONGITUDE']])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:37:23 2021 -0800", "msg": "1637908643.803876_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LATITUDE']])", "+            [column].fillna(beats.lookup[df.BEAT_OF_OCCURRENCE, beats['LONGITUDE']])"], "sub": ["-            df[column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LATITUDE']])", "-            [column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LONGITUDE']])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908589.902791 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:36:36 2021 -0800", "msg": "1637908589.902791_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908589.902791 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+            df[column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LATITUDE']])", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+            [column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LONGITUDE']])"], "sub": ["-            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "-            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:36:30 2021 -0800", "msg": "1637908589.902791_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+            df[column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LATITUDE']])", "+            # df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+            [column].fillna(beats.lookup[df['BEAT_OF_OCCURRENCE'], beats['LONGITUDE']])"], "sub": ["-            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "-            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908409.0210323 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:33:35 2021 -0800", "msg": "1637908409.0210323_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908409.0210323 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()"], "sub": ["-    beats = df['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']", "-    beats = beats.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:33:29 2021 -0800", "msg": "1637908409.0210323_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE', as_index=False)['LATITUDE', 'LONGITUDE'].mean()"], "sub": ["-    beats = df['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']", "-    beats = beats.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908269.5845573 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:31:13 2021 -0800", "msg": "1637908269.5845573_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908269.5845573 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']"], "sub": ["-    beats = df.['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:31:09 2021 -0800", "msg": "1637908269.5845573_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']"], "sub": ["-    beats = df.['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908261.8673851 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:31:02 2021 -0800", "msg": "1637908261.8673851_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637908261.8673851 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']", "+    beats = beats.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "+            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "-            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:31:02 2021 -0800", "msg": "1637908261.8673851_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.['BEAT_OF_OCCURRENCE', 'LATITUDE', 'LONGITUDE']", "+    beats = beats.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "+            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])"], "sub": ["-    beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "-            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907898.3151116 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:25:04 2021 -0800", "msg": "1637907898.3151116_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907898.3151116 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            print(beats['BEAT_OF_OCCURRENCE'][0])", "+            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LATITUDE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:24:58 2021 -0800", "msg": "1637907898.3151116_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            print(beats['BEAT_OF_OCCURRENCE'][0])", "+            df[column].fillna(beats.loc[(beats['BEAT_OF_OCCURRENCE'] == df['BEAT_OF_OCCURRENCE']), 'LATITUDE'])"], "sub": ["-            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LATITUDE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907812.2449942 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:23:38 2021 -0800", "msg": "1637907812.2449942_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907812.2449942 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+"], "sub": ["-        # if (column == 'LONGITUDE'):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:23:32 2021 -0800", "msg": "1637907812.2449942_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LATITUDE'])", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df[column].fillna(beats.loc[(df['BEAT_OF_OCCURRENCE'] == beats['BEAT_OF_OCCURRENCE']), 'LONGITUDE'])", "+"], "sub": ["-        # if (column == 'LONGITUDE'):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907415.909936 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:17:07 2021 -0800", "msg": "1637907415.909936_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907415.909936 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "+    print(beats)"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]", "-            print(beats)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:16:56 2021 -0800", "msg": "1637907415.909936_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()", "+    print(beats)"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]", "-            print(beats)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907369.4463527 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:16:21 2021 -0800", "msg": "1637907369.4463527_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907369.4463527 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE']['LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:16:09 2021 -0800", "msg": "1637907369.4463527_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE', 'LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE']['LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907311.2262375 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:15:17 2021 -0800", "msg": "1637907311.2262375_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907311.2262375 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE']['LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = [df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean(), df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:15:11 2021 -0800", "msg": "1637907311.2262375_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE']['LONGITUDE'].mean()#, df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = [df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean(), df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907265.8478599 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:14:38 2021 -0800", "msg": "1637907265.8478599_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907265.8478599 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = [df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean(), df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean()"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:14:26 2021 -0800", "msg": "1637907265.8478599_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            beats = [df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean(), df.groupby('BEAT_OF_OCCURRENCE')['LONGITUDE'].mean()]"], "sub": ["-            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907194.830824 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:13:28 2021 -0800", "msg": "1637907194.830824_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637907194.830824 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {0:np.NaN}})", "+            # narow = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            # na_row is now all the rows with na in latitude", "+            # na_row = df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']", "+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean()", "+            # now look up the beat and do conditional mean", "+            # mean = (df['BEAT_OF_OCCURRENCE'] == df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']).mean()", "+            print(beats)"], "sub": ["-            beat = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "-            print(beat)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 22:13:15 2021 -0800", "msg": "1637907194.830824_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {0:np.NaN}})", "+            # narow = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            # na_row is now all the rows with na in latitude", "+            # na_row = df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']", "+            beats = df.groupby('BEAT_OF_OCCURRENCE')['LATITUDE'].mean()", "+            # now look up the beat and do conditional mean", "+            # mean = (df['BEAT_OF_OCCURRENCE'] == df.loc[(df[column].isna()), 'BEAT_OF_OCCURRENCE']).mean()", "+            print(beats)"], "sub": ["-            beat = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "-            print(beat)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637905549.839606 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 21:45:56 2021 -0800", "msg": "1637905549.839606_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637905549.839606 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'LATITUDE'):", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            # df = df.replace({'LATITUDE': {0:np.NaN}})", "+            # df[column].fillna(df[column].mean()", "+            beat = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            print(beat)", "+        # if (column == 'LONGITUDE'):", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-        # # print(type(df))", "-        # # if (column == 'STREET_NO'):", "-        # #     df = df.replace({column: {0:np.NaN}})", "-        # #     print('Missing Values -',df[column].isna().sum())", "-        # if (column == 'STREET_NAME'):", "-        #     df = df.replace({column: {'UNKNOWN':np.NaN}})", "-        # # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-        # #     print('Missing Values -',df[column].isna().sum())", "-        #     # df = df.fillna('NO INDICATION OF INJURY')", "-        # #         print('Missing Values -',df[column].isna().sum())", "-        # if (column == 'LATITUDE'):", "-        #     df = df.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     df = df.replace({'LONGITUDE': {0:np.NaN}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 21:45:50 2021 -0800", "msg": "1637905549.839606_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'LATITUDE'):", "+            # df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            # df = df.replace({'LATITUDE': {0:np.NaN}})", "+            # df[column].fillna(df[column].mean()", "+            beat = df.loc[(df['BEAT_OF_OCCURRENCE'])]", "+            print(beat)", "+        # if (column == 'LONGITUDE'):", "+            # df = df.replace({'LONGITUDE': {0:np.NaN}})"], "sub": ["-        # # print(type(df))", "-        # # if (column == 'STREET_NO'):", "-        # #     df = df.replace({column: {0:np.NaN}})", "-        # #     print('Missing Values -',df[column].isna().sum())", "-        # if (column == 'STREET_NAME'):", "-        #     df = df.replace({column: {'UNKNOWN':np.NaN}})", "-        # # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-        # #     print('Missing Values -',df[column].isna().sum())", "-        #     # df = df.fillna('NO INDICATION OF INJURY')", "-        # #         print('Missing Values -',df[column].isna().sum())", "-        # if (column == 'LATITUDE'):", "-        #     df = df.replace({'LATITUDE': {0:np.NaN}})", "-        # if (column == 'LONGITUDE'):", "-        #     df = df.replace({'LONGITUDE': {0:np.NaN}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901540.5244055 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:39:12 2021 -0800", "msg": "1637901540.5244055_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901540.5244055 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     df = df.replace({column: {0:np.NaN}})", "-        #     df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:39:00 2021 -0800", "msg": "1637901540.5244055_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+            df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'POSTED_SPEED_LIMIT'):", "-        #     df = df.replace({column: {0:np.NaN}})", "-        #     df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901469.761744 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:38:01 2021 -0800", "msg": "1637901469.761744_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901469.761744 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-            # df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:37:49 2021 -0800", "msg": "1637901469.761744_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-            # df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901431.2725046 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:37:23 2021 -0800", "msg": "1637901431.2725046_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901431.2725046 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna('NO INDICATION OF INJURY')"], "sub": ["-            df = df[column].fillna('NO INDICATION OF INJURY')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:37:11 2021 -0800", "msg": "1637901431.2725046_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df[column].fillna('NO INDICATION OF INJURY')"], "sub": ["-            df = df[column].fillna('NO INDICATION OF INJURY')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901402.5924757 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:36:49 2021 -0800", "msg": "1637901402.5924757_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901402.5924757 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            # df = df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-            df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:36:42 2021 -0800", "msg": "1637901402.5924757_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            # df = df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-            df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901363.546495 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:36:09 2021 -0800", "msg": "1637901363.546495_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901363.546495 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df = df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        # #         df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:36:03 2021 -0800", "msg": "1637901363.546495_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+            df = df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        # #         df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901253.5852513 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:34:25 2021 -0800", "msg": "1637901253.5852513_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901253.5852513 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})"], "sub": ["-        # if (column == 'ROAD_DEFECT'):", "-        #     df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:34:13 2021 -0800", "msg": "1637901253.5852513_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})"], "sub": ["-        # if (column == 'ROAD_DEFECT'):", "-        #     df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637901197.7367954 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:33:29 2021 -0800", "msg": "1637901197.7367954_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637901197.7367954 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901188.6820216 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:33:14 2021 -0800", "msg": "1637901188.6820216_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901188.6820216 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'ROAD_DEFECT'):", "+        #     df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        # # print(type(df))", "+        # # if (column == 'STREET_NO'):", "+        # #     df = df.replace({column: {0:np.NaN}})", "+        # #     print('Missing Values -',df[column].isna().sum())", "+        # if (column == 'STREET_NAME'):", "+        #     df = df.replace({column: {'UNKNOWN':np.NaN}})", "+        # # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "+        # #     print('Missing Values -',df[column].isna().sum())", "+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     df = df[column].fillna('NO INDICATION OF INJURY')", "+        #     # df = df.fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        # #         print('Missing Values -',df[column].isna().sum())", "+        # #         df = df[column].fillna(df[column].mean())", "+        #         # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "+        #         df = df.fillna(0)", "+        #         # print(df[column].apply(type))", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-        if (column == 'ROAD_DEFECT'):", "-            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "-        # print(type(df))", "-        # if (column == 'STREET_NO'):", "-        #     print('Missing Values -',df[column].isna().sum())", "-        if (column == 'STREET_NAME'):", "-            df = df.replace({column: {'UNKNOWN':np.NaN}})", "-        # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-        #     print('Missing Values -',df[column].isna().sum())", "-        if (column == 'MOST_SEVERE_INJURY'):", "-            df = df[column].fillna('NO INDICATION OF INJURY')", "-            # df = df.fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        #         print('Missing Values -',df[column].isna().sum())", "-        #         df = df[column].fillna(df[column].mean())", "-                # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "-                df = df.fillna(0)", "-                # print(df[column].apply(type))", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            df = df.replace({column: {0:np.NaN}})", "-            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:33:08 2021 -0800", "msg": "1637901188.6820216_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'ROAD_DEFECT'):", "+        #     df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        # # print(type(df))", "+        # # if (column == 'STREET_NO'):", "+        # #     df = df.replace({column: {0:np.NaN}})", "+        # #     print('Missing Values -',df[column].isna().sum())", "+        # if (column == 'STREET_NAME'):", "+        #     df = df.replace({column: {'UNKNOWN':np.NaN}})", "+        # # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "+        # #     print('Missing Values -',df[column].isna().sum())", "+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     df = df[column].fillna('NO INDICATION OF INJURY')", "+        #     # df = df.fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        # #         print('Missing Values -',df[column].isna().sum())", "+        # #         df = df[column].fillna(df[column].mean())", "+        #         # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "+        #         df = df.fillna(0)", "+        #         # print(df[column].apply(type))", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-        if (column == 'ROAD_DEFECT'):", "-            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "-        # print(type(df))", "-        # if (column == 'STREET_NO'):", "-        #     print('Missing Values -',df[column].isna().sum())", "-        if (column == 'STREET_NAME'):", "-            df = df.replace({column: {'UNKNOWN':np.NaN}})", "-        # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-        #     print('Missing Values -',df[column].isna().sum())", "-        if (column == 'MOST_SEVERE_INJURY'):", "-            df = df[column].fillna('NO INDICATION OF INJURY')", "-            # df = df.fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        #         print('Missing Values -',df[column].isna().sum())", "-        #         df = df[column].fillna(df[column].mean())", "-                # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())", "-                df = df.fillna(0)", "-                # print(df[column].apply(type))", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            df = df.replace({column: {0:np.NaN}})", "-            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637901135.3040562 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:32:22 2021 -0800", "msg": "1637901135.3040562_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637901135.3040562 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901121.9751387 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:32:08 2021 -0800", "msg": "1637901121.9751387_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637901121.9751387 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                df = df.fillna(0)"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                # df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:32:02 2021 -0800", "msg": "1637901121.9751387_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                df = df.fillna(0)"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                # df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900849.1780276 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:27:36 2021 -0800", "msg": "1637900849.1780276_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900849.1780276 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        #         print('Missing Values -',df[column].isna().sum())", "+        #         df = df[column].fillna(df[column].mean())"], "sub": ["-            # deleted STREET_NO here bc the rows with 0 in it were already deleted by a previous filter", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                print('Missing Values -',df[column].isna().sum())", "-                df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:27:29 2021 -0800", "msg": "1637900849.1780276_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        #         print('Missing Values -',df[column].isna().sum())", "+        #         df = df[column].fillna(df[column].mean())"], "sub": ["-            # deleted STREET_NO here bc the rows with 0 in it were already deleted by a previous filter", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                print('Missing Values -',df[column].isna().sum())", "-                df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900794.5112083 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:26:40 2021 -0800", "msg": "1637900794.5112083_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900794.5112083 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-    df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "-", "-        # df.dropna(subset = ['STREET_DIRECTION'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:26:34 2021 -0800", "msg": "1637900794.5112083_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-    df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "-", "-        # df.dropna(subset = ['STREET_DIRECTION'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900714.9588711 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:25:21 2021 -0800", "msg": "1637900714.9588711_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900714.9588711 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                print('Missing Values -',df[column].isna().sum())", "+                df = df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        #         df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:25:15 2021 -0800", "msg": "1637900714.9588711_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                print('Missing Values -',df[column].isna().sum())", "+                df = df[column].fillna(df[column].mean())"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        #         df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900665.3557725 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:24:32 2021 -0800", "msg": "1637900665.3557725_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900665.3557725 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        #         df = df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                df = df[column].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:24:25 2021 -0800", "msg": "1637900665.3557725_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        #         df = df[column].fillna(df[column].mean())"], "sub": ["-        # if (column == 'MOST_SEVERE_INJURY'):", "-        #     df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                df = df[column].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900407.519195 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:20:13 2021 -0800", "msg": "1637900407.519195_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900407.519195 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     df = df[column].fillna('NO INDICATION OF INJURY')", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\"], "sub": ["-        if (column == 'MOST_SEVERE_INJURY'):", "-            df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_FATAL') | \\"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:20:07 2021 -0800", "msg": "1637900407.519195_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'MOST_SEVERE_INJURY'):", "+        #     df = df[column].fillna('NO INDICATION OF INJURY')", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\"], "sub": ["-        if (column == 'MOST_SEVERE_INJURY'):", "-            df = df[column].fillna('NO INDICATION OF INJURY')", "-        if ((column == 'INJURIES_FATAL') | \\"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900389.037917 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:19:55 2021 -0800", "msg": "1637900389.037917_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900389.037917 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_FATAL') | \\"], "sub": ["-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:19:49 2021 -0800", "msg": "1637900389.037917_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_FATAL') | \\"], "sub": ["-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900340.1210175 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:19:06 2021 -0800", "msg": "1637900340.1210175_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900340.1210175 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+"], "sub": ["-        # print('Mean -',df[column].mean())", "-        # print('STD -',df[column].std())", "-        # print('Range -',df[column].min(), df[column].max())", "-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:19:00 2021 -0800", "msg": "1637900340.1210175_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+    df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+"], "sub": ["-        # print('Mean -',df[column].mean())", "-        # print('STD -',df[column].std())", "-        # print('Range -',df[column].min(), df[column].max())", "-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900271.797177 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:18:00 2021 -0800", "msg": "1637900271.797177_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900271.797177 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        print('Column: ', column)", "+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+    # for column in df.columns:", "+    #     print('Column: ', column)", "+    # #         # print('Mean -',df[column].mean())", "+    # #         # print('STD -',df[column].std())", "+    # #         # print('Range -',df[column].min(), df[column].max())", "+    #     if (column == 'POSTED_SPEED_LIMIT'):", "+    #         df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+    #     if (column == 'STREET_NO'):", "+    #         df = df.replace({'STREET_NO': {0:np.NaN}})", "+    #     if (column == 'LATITUDE'):", "+    #         df = df.replace({'LATITUDE': {0:np.NaN}})", "+    #     if (column == 'LONGITUDE'):", "+    #         df = df.replace({'LONGITUDE': {0:np.NaN}})", "+    # #         df = df.replace('UNKNOWN', np.NaN)", "+    #     print('Missing Values -',df[column].isna().sum())", "+    #     print('---')"], "sub": ["-        # print('Column: ', column)", "-        # df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])", "-        # if ((column == 'INJURIES_FATAL')):", "-    for column in df.columns:", "-        print('Column: ', column)", "-    #         # print('Mean -',df[column].mean())", "-    #         # print('STD -',df[column].std())", "-    #         # print('Range -',df[column].min(), df[column].max())", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        if (column == 'STREET_NO'):", "-            df = df.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            df = df.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({'LONGITUDE': {0:np.NaN}})", "-    #         df = df.replace('UNKNOWN', np.NaN)", "-        print('Missing Values -',df[column].isna().sum())", "-        print('---')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:17:51 2021 -0800", "msg": "1637900271.797177_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        print('Column: ', column)", "+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+    # for column in df.columns:", "+    #     print('Column: ', column)", "+    # #         # print('Mean -',df[column].mean())", "+    # #         # print('STD -',df[column].std())", "+    # #         # print('Range -',df[column].min(), df[column].max())", "+    #     if (column == 'POSTED_SPEED_LIMIT'):", "+    #         df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+    #     if (column == 'STREET_NO'):", "+    #         df = df.replace({'STREET_NO': {0:np.NaN}})", "+    #     if (column == 'LATITUDE'):", "+    #         df = df.replace({'LATITUDE': {0:np.NaN}})", "+    #     if (column == 'LONGITUDE'):", "+    #         df = df.replace({'LONGITUDE': {0:np.NaN}})", "+    # #         df = df.replace('UNKNOWN', np.NaN)", "+    #     print('Missing Values -',df[column].isna().sum())", "+    #     print('---')"], "sub": ["-        # print('Column: ', column)", "-        # df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])", "-        # if ((column == 'INJURIES_FATAL')):", "-    for column in df.columns:", "-        print('Column: ', column)", "-    #         # print('Mean -',df[column].mean())", "-    #         # print('STD -',df[column].std())", "-    #         # print('Range -',df[column].min(), df[column].max())", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        if (column == 'STREET_NO'):", "-            df = df.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            df = df.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            df = df.replace({'LONGITUDE': {0:np.NaN}})", "-    #         df = df.replace('UNKNOWN', np.NaN)", "-        print('Missing Values -',df[column].isna().sum())", "-        print('---')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900010.1167376 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:13:36 2021 -0800", "msg": "1637900010.1167376_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637900010.1167376 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())"], "sub": ["-            df = df[[column]].fillna('NO INDICATION OF INJURY')", "-                df = df[[column]].fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:13:30 2021 -0800", "msg": "1637900010.1167376_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())"], "sub": ["-            df = df[[column]].fillna('NO INDICATION OF INJURY')", "-                df = df[[column]].fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899976.176824 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:13:02 2021 -0800", "msg": "1637899976.176824_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899976.176824 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "+        #     print('Missing Values -',df[column].isna().sum())", "+        # df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])"], "sub": ["-        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-            print('Missing Values -',df[column].isna().sum())", "-        df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:12:56 2021 -0800", "msg": "1637899976.176824_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "+        #     print('Missing Values -',df[column].isna().sum())", "+        # df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])"], "sub": ["-        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):", "-            print('Missing Values -',df[column].isna().sum())", "-        df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899942.0091712 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:12:25 2021 -0800", "msg": "1637899942.0091712_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899942.0091712 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])", "+        # df.dropna(subset = ['STREET_DIRECTION'])"], "sub": ["-        # df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "-        df.dropna(subset = ['STREET_DIRECTION'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:12:22 2021 -0800", "msg": "1637899942.0091712_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = df.columns[['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE']])", "+        # df.dropna(subset = ['STREET_DIRECTION'])"], "sub": ["-        # df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "-        df.dropna(subset = ['STREET_DIRECTION'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899798.1897352 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:10:06 2021 -0800", "msg": "1637899798.1897352_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899798.1897352 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+        df.dropna(subset = ['STREET_DIRECTION'])"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:09:58 2021 -0800", "msg": "1637899798.1897352_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+        df.dropna(subset = ['STREET_DIRECTION'])"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899765.3634164 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:09:34 2021 -0800", "msg": "1637899765.3634164_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899765.3634164 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:09:25 2021 -0800", "msg": "1637899765.3634164_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899717.7566733 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:08:46 2021 -0800", "msg": "1637899717.7566733_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899717.7566733 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:08:37 2021 -0800", "msg": "1637899717.7566733_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"], "sub": ["-        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899644.6543243 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:07:33 2021 -0800", "msg": "1637899644.6543243_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899644.6543243 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):"], "sub": ["-        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_NAME')):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:07:24 2021 -0800", "msg": "1637899644.6543243_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_DIRECTION')):"], "sub": ["-        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_NAME')):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899610.4184144 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:06:59 2021 -0800", "msg": "1637899610.4184144_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899610.4184144 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_NAME')):", "+            print('Missing Values -',df[column].isna().sum())"], "sub": ["-            # print('Missing Values -',df[column].isna().sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:06:50 2021 -0800", "msg": "1637899610.4184144_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'BEAT_OF_OCCURRENCE') | (column == 'STREET_NAME')):", "+            print('Missing Values -',df[column].isna().sum())"], "sub": ["-            # print('Missing Values -',df[column].isna().sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899553.5947702 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:06:02 2021 -0800", "msg": "1637899553.5947702_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899553.5947702 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     print('Missing Values -',df[column].isna().sum())", "+            # print('Missing Values -',df[column].isna().sum())"], "sub": ["-        if (column == 'STREET_NO'):", "-            df = df.replace({column: {0:np.NaN}})", "-            print('Missing Values -',df[column].isna().sum())", "-            print('Missing Values -',df[column].isna().sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:05:53 2021 -0800", "msg": "1637899553.5947702_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({column: {0:np.NaN}})", "+        #     print('Missing Values -',df[column].isna().sum())", "+            # print('Missing Values -',df[column].isna().sum())"], "sub": ["-        if (column == 'STREET_NO'):", "-            df = df.replace({column: {0:np.NaN}})", "-            print('Missing Values -',df[column].isna().sum())", "-            print('Missing Values -',df[column].isna().sum())"]}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # deleted STREET_NO here bc the rows with 0 in it were already deleted by a previous filter", "+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:05:49 2021 -0800", "msg": "1637899549.083455_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # deleted STREET_NO here bc the rows with 0 in it were already deleted by a previous filter", "+        df.dropna(subset = ['STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899434.8749218 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:04:03 2021 -0800", "msg": "1637899434.8749218_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899434.8749218 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            print('Missing Values -',df[column].isna().sum())", "+            print('Missing Values -',df[column].isna().sum())"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:03:55 2021 -0800", "msg": "1637899434.8749218_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            print('Missing Values -',df[column].isna().sum())", "+            print('Missing Values -',df[column].isna().sum())"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899390.1980786 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:03:19 2021 -0800", "msg": "1637899390.1980786_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899390.1980786 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        if (column == 'STREET_NAME'):", "+            df = df.replace({column: {'UNKNOWN':np.NaN}})"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 20:03:10 2021 -0800", "msg": "1637899390.1980786_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace({column: {'UNKNOWN':'NO DEFECTS'}})", "+        if (column == 'STREET_NAME'):", "+            df = df.replace({column: {'UNKNOWN':np.NaN}})"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637899123.2649395 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:58:52 2021 -0800", "msg": "1637899123.2649395_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637899123.2649395 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899100.4005046 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:58:23 2021 -0800", "msg": "1637899100.4005046_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637899100.4005046 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'STREET_NO'):", "+            df = df.replace({column: {0:np.NaN}})", "+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:58:20 2021 -0800", "msg": "1637899100.4005046_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if (column == 'STREET_NO'):", "+            df = df.replace({column: {0:np.NaN}})", "+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898739.1996233 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:52:28 2021 -0800", "msg": "1637898739.1996233_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898739.1996233 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # print(type(df))"], "sub": ["-        print(type(df))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:52:19 2021 -0800", "msg": "1637898739.1996233_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # print(type(df))"], "sub": ["-        print(type(df))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898663.8531034 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:51:12 2021 -0800", "msg": "1637898663.8531034_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898663.8531034 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"], "sub": ["-        df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:51:04 2021 -0800", "msg": "1637898663.8531034_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)"], "sub": ["-        df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898582.7712455 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:49:51 2021 -0800", "msg": "1637898582.7712455_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898582.7712455 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:49:42 2021 -0800", "msg": "1637898582.7712455_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df = df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898470.809323 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:47:59 2021 -0800", "msg": "1637898470.809323_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898470.809323 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+            df = df[[column]].fillna('NO INDICATION OF INJURY')", "+            # df = df.fillna('NO INDICATION OF INJURY')", "+                df = df[[column]].fillna(df[column].mean())", "+                # df = df.fillna(0)"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)", "-            # df = df[column].fillna('NO INDICATION OF INJURY')", "-            df = df.fillna('NO INDICATION OF INJURY')", "-                # df = df[column].fillna(df[column].mean())", "-                df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:47:50 2021 -0800", "msg": "1637898470.809323_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'])", "+            df = df[[column]].fillna('NO INDICATION OF INJURY')", "+            # df = df.fillna('NO INDICATION OF INJURY')", "+                df = df[[column]].fillna(df[column].mean())", "+                # df = df.fillna(0)"], "sub": ["-        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)", "-            # df = df[column].fillna('NO INDICATION OF INJURY')", "-            df = df.fillna('NO INDICATION OF INJURY')", "-                # df = df[column].fillna(df[column].mean())", "-                df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898291.7735474 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:45:13 2021 -0800", "msg": "1637898291.7735474_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898291.7735474 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df[column].fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df[column].fillna(df[column].mean())", "-                # df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:44:51 2021 -0800", "msg": "1637898291.7735474_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df[column].fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df[column].fillna(df[column].mean())", "-                # df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898274.9347427 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:44:45 2021 -0800", "msg": "1637898274.9347427_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898274.9347427 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df[column].fillna('NO INDICATION OF INJURY')", "+            df = df.fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())", "+                # df = df.fillna(0)"], "sub": ["-            df = df[column].fillna('NO INDICATION OF INJURY')", "-                # df = df[column].fillna(df[column].mean())", "-                df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:44:35 2021 -0800", "msg": "1637898274.9347427_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            # df = df[column].fillna('NO INDICATION OF INJURY')", "+            df = df.fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())", "+                # df = df.fillna(0)"], "sub": ["-            df = df[column].fillna('NO INDICATION OF INJURY')", "-                # df = df[column].fillna(df[column].mean())", "-                df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898247.545976 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:44:16 2021 -0800", "msg": "1637898247.545976_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898247.545976 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df[column].fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df[column].fillna(df[column].mean())", "-                # df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:44:07 2021 -0800", "msg": "1637898247.545976_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df[column].fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df[column].fillna(df[column].mean())", "-                # df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898098.4520059 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:41:47 2021 -0800", "msg": "1637898098.4520059_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637898098.4520059 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        # if ((column == 'INJURIES_FATAL')):"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        if ((column == 'INJURIES_FATAL')):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:41:38 2021 -0800", "msg": "1637898098.4520059_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        # if ((column == 'INJURIES_FATAL')):"], "sub": ["-        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-        if ((column == 'INJURIES_FATAL')):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897898.379972 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:38:27 2021 -0800", "msg": "1637897898.379972_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897898.379972 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace('UNKNOWN', 'NO DEFECTS')"], "sub": ["-            df = df[column].replace('UNKNOWN', 'NO DEFECTS')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:38:18 2021 -0800", "msg": "1637897898.379972_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace('UNKNOWN', 'NO DEFECTS')"], "sub": ["-            df = df[column].replace('UNKNOWN', 'NO DEFECTS')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897803.2919002 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:36:50 2021 -0800", "msg": "1637897803.2919002_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897803.2919002 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].replace('UNKNOWN', 'NO DEFECTS')", "+        print(type(df))"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:36:43 2021 -0800", "msg": "1637897803.2919002_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].replace('UNKNOWN', 'NO DEFECTS')", "+        print(type(df))"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897765.7195535 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:36:14 2021 -0800", "msg": "1637897765.7195535_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897765.7195535 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace('UNKNOWN', 'NO DEFECTS')"], "sub": ["-            df = df[column].replace('UNKNOWN', 'NO DEFECTS')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:36:05 2021 -0800", "msg": "1637897765.7195535_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.replace('UNKNOWN', 'NO DEFECTS')"], "sub": ["-            df = df[column].replace('UNKNOWN', 'NO DEFECTS')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637897710.5822725 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:35:17 2021 -0800", "msg": "1637897710.5822725_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637897710.5822725 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897673.4412642 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:34:40 2021 -0800", "msg": "1637897673.4412642_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897673.4412642 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].replace('UNKNOWN', 'NO DEFECTS')", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())", "+                # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')", "-            df = df.fillna('NO INDICATION OF INJURY')", "-                # df = df.fillna(df[column].mean())", "-                df = df.fillna(pd.to_numeric(df[column], errors='coerce').mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:34:33 2021 -0800", "msg": "1637897673.4412642_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df[column].replace('UNKNOWN', 'NO DEFECTS')", "+            df = df[column].fillna('NO INDICATION OF INJURY')", "+                df = df[column].fillna(df[column].mean())", "+                # df = df[column].fillna(pd.to_numeric(df[column], errors='coerce').mean())"], "sub": ["-            df = df.replace('UNKNOWN', 'NO DEFECTS')", "-            df = df.fillna('NO INDICATION OF INJURY')", "-                # df = df.fillna(df[column].mean())", "-                df = df.fillna(pd.to_numeric(df[column], errors='coerce').mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897278.1535432 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:28:16 2021 -0800", "msg": "1637897278.1535432_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637897278.1535432 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                df = df.fillna(pd.to_numeric(df[column], errors='coerce').mean())", "+                # print(df[column].apply(type))"], "sub": ["-                print(df[column].apply(type))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:27:58 2021 -0800", "msg": "1637897278.1535432_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                df = df.fillna(pd.to_numeric(df[column], errors='coerce').mean())", "+                # print(df[column].apply(type))"], "sub": ["-                print(df[column].apply(type))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637896840.162233 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:20:58 2021 -0800", "msg": "1637896840.162233_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637896840.162233 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df.fillna(0)", "+                print(df[column].apply(type))"], "sub": ["-                df = df.fillna(0)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:20:40 2021 -0800", "msg": "1637896840.162233_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df.fillna(0)", "+                print(df[column].apply(type))"], "sub": ["-                df = df.fillna(0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637895642.1168442 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:01:05 2021 -0800", "msg": "1637895642.1168442_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1637895642.1168442 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895605.9743543 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:00:19 2021 -0800", "msg": "1637895605.9743543_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895605.9743543 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df.fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df.fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 19:00:06 2021 -0800", "msg": "1637895605.9743543_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                # df = df.fillna(df[column].mean())", "+                df = df.fillna(0)"], "sub": ["-                df = df.fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895459.7080674 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:57:49 2021 -0800", "msg": "1637895459.7080674_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895459.7080674 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_FATAL')):"], "sub": ["-        if ((column == 'INJURIES_TOTAL')):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:57:39 2021 -0800", "msg": "1637895459.7080674_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'INJURIES_FATAL')):"], "sub": ["-        if ((column == 'INJURIES_TOTAL')):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895440.9832814 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:57:31 2021 -0800", "msg": "1637895440.9832814_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895440.9832814 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        if ((column == 'INJURIES_TOTAL')):", "+                df = df.fillna(df[column].mean())"], "sub": ["-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                df = df.fillna(df['INJURIES_TOTAL'].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:57:21 2021 -0800", "msg": "1637895440.9832814_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        # if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+        #     (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+        #     (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+        if ((column == 'INJURIES_TOTAL')):", "+                df = df.fillna(df[column].mean())"], "sub": ["-        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "-            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "-            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "-                df = df.fillna(df['INJURIES_TOTAL'].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895347.4695086 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:55:57 2021 -0800", "msg": "1637895347.4695086_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895347.4695086 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                df = df.fillna(df['INJURIES_TOTAL'].mean())"], "sub": ["-                df = df.fillna(df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:55:47 2021 -0800", "msg": "1637895347.4695086_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+                df = df.fillna(df['INJURIES_TOTAL'].mean())"], "sub": ["-                df = df.fillna(df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895265.6302338 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:54:35 2021 -0800", "msg": "1637895265.6302338_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895265.6302338 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.fillna('NO INDICATION OF INJURY')", "+                df = df.fillna(df[column].mean())"], "sub": ["-            df = df.replace(np.NaN, 'NO INDICATION OF INJURY')", "-                df = df.replace(np.NaN, df[column].mean())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:54:25 2021 -0800", "msg": "1637895265.6302338_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df = df.fillna('NO INDICATION OF INJURY')", "+                df = df.fillna(df[column].mean())"], "sub": ["-            df = df.replace(np.NaN, 'NO INDICATION OF INJURY')", "-                df = df.replace(np.NaN, df[column].mean())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895127.2525194 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:52:17 2021 -0800", "msg": "1637895127.2525194_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895127.2525194 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            df.loc[(df.column % 10 != 0) | (df.column % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:52:07 2021 -0800", "msg": "1637895127.2525194_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            df.loc[(df[column] % 10 != 0) | (df[column] % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"], "sub": ["-            df.loc[(df.column % 10 != 0) | (df.column % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895083.136673 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:51:26 2021 -0800", "msg": "1637895083.136673_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895083.136673 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            | (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):"], "sub": ["-            (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:51:23 2021 -0800", "msg": "1637895083.136673_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+            | (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):"], "sub": ["-            (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895031.094147 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:50:34 2021 -0800", "msg": "1637895031.094147_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637895031.094147 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'ROADWAY_SURFACE_COND') | (column == 'WEATHER_CONDITION') \\", "+            (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):", "+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace('UNKNOWN', 'NO DEFECTS')", "+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df.replace(np.NaN, 'NO INDICATION OF INJURY')", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                df = df.replace(np.NaN, df[column].mean())", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df.column % 10 != 0) | (df.column % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+", "+"], "sub": ["-        if ((column == 'ROAD_DEFECT') | (column == 'ROADWAY_SURFACE_COND') | \\", "-            (column == 'WEATHER_CONDITION') | (column == 'LIGHTING_CONDITION') | \\", "-            (column == 'TRAFFICWAY_TYPE')):", "-            df = df[df.ROAD_DEFECT != 'UNKNOWN']", "-        #     df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        # df = df.replace('UNKNOWN', np.NaN)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 18:50:31 2021 -0800", "msg": "1637895031.094147_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'ROADWAY_SURFACE_COND') | (column == 'WEATHER_CONDITION') \\", "+            (column == 'LIGHTING_CONDITION') | (column == 'TRAFFICWAY_TYPE')):", "+        if (column == 'ROAD_DEFECT'):", "+            df = df.replace('UNKNOWN', 'NO DEFECTS')", "+        df.dropna(subset = ['STREET_NO', 'STREET_DIRECTION', 'STREET_NAME', 'BEAT_OF_OCCURRENCE'], inplace = True)", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            df = df.replace(np.NaN, 'NO INDICATION OF INJURY')", "+        if ((column == 'INJURIES_TOTAL') | (column == 'INJURIES_FATAL') | \\", "+            (column == 'INJURIES_INCAPACITATING') | (column == 'INJURIES_NON_INCAPACITATING') | \\", "+            (column == 'INJURIES_REPORTED_NOT_EVIDENT') | (column == 'INJURIES_NO_INDICATION')):", "+                df = df.replace(np.NaN, df[column].mean())", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({column: {0:np.NaN}})", "+            df.loc[(df.column % 10 != 0) | (df.column % 10 != 5), 'POSTED_SPEED_LIMIT'] = np.NaN", "+", "+"], "sub": ["-        if ((column == 'ROAD_DEFECT') | (column == 'ROADWAY_SURFACE_COND') | \\", "-            (column == 'WEATHER_CONDITION') | (column == 'LIGHTING_CONDITION') | \\", "-            (column == 'TRAFFICWAY_TYPE')):", "-            df = df[df.ROAD_DEFECT != 'UNKNOWN']", "-        #     df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        # df = df.replace('UNKNOWN', np.NaN)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637889766.3458903 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 17:22:50 2021 -0800", "msg": "1637889766.3458903_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637889766.3458903 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        if (column == 'POSTED_SPEED_LIMIT'):", "-            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'STREET_NO'):", "-            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        crashes = crashes.replace('UNKNOWN', np.NaN)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 17:22:46 2021 -0800", "msg": "1637889766.3458903_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        # if (column == 'POSTED_SPEED_LIMIT'):", "+        #     print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'STREET_NO'):", "+        #     crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "+        # crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        if (column == 'POSTED_SPEED_LIMIT'):", "-            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "-        if (column == 'POSTED_SPEED_LIMIT'):", "-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'STREET_NO'):", "-            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})", "-        if (column == 'LATITUDE'):", "-            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "-        if (column == 'LONGITUDE'):", "-            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})", "-        crashes = crashes.replace('UNKNOWN', np.NaN)"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 17:22:20 2021 -0800", "msg": "1637889740.5604203_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637889100.6134732 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 17:11:49 2021 -0800", "msg": "1637889100.6134732_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637889100.6134732 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'WEATHER_CONDITION'):", "+        #     print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'LIGHTING_CONDITION'):", "+        #     print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'TRAFFICWAY_TYPE'):", "+        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROADWAY_SURFACE_COND'):", "+        #     print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROAD_DEFECT'):", "+        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_TOTAL'):", "+            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_FATAL'):", "+            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_INCAPACITATING'):", "+            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_NON_INCAPACITATING'):", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_NO_INDICATION'):", "+            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'TRAFFICWAY_TYPE'):", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROAD_DEFECT'):", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 17:11:40 2021 -0800", "msg": "1637889100.6134732_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # if (column == 'WEATHER_CONDITION'):", "+        #     print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'LIGHTING_CONDITION'):", "+        #     print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'TRAFFICWAY_TYPE'):", "+        #     print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROADWAY_SURFACE_COND'):", "+        #     print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+        # if (column == 'ROAD_DEFECT'):", "+        #     print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+", "+        if (column == 'MOST_SEVERE_INJURY'):", "+            print('MOST_SEVERE_INJURY TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_TOTAL'):", "+            print('INJURIES_TOTAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_FATAL'):", "+            print('INJURIES_FATAL TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_INCAPACITATING'):", "+            print('INJURIES_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_NON_INCAPACITATING'):", "+            print('INJURIES_NON_INCAPACITATING TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_REPORTED_NOT_EVIDENT'):", "+            print('INJURIES_REPORTED_NOT_EVIDENT TYPES -\\n',crashes[column].value_counts(normalize=True))", "+", "+        if (column == 'INJURIES_NO_INDICATION'):", "+            print('INJURIES_NO_INDICATION TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-        if (column == 'WEATHER_CONDITION'):", "-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'LIGHTING_CONDITION'):", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'TRAFFICWAY_TYPE'):", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROADWAY_SURFACE_COND'):", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-        if (column == 'ROAD_DEFECT'):", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637883944.6405532 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:45:53 2021 -0800", "msg": "1637883944.6405532_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637883944.6405532 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"], "sub": ["-        if (column == 'POSTED_SPEED_LIMIT'):", "-            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:45:44 2021 -0800", "msg": "1637883944.6405532_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"], "sub": ["-        if (column == 'POSTED_SPEED_LIMIT'):", "-            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637883904.0263832 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:45:13 2021 -0800", "msg": "1637883904.0263832_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637883904.0263832 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:45:04 2021 -0800", "msg": "1637883904.0263832_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637881678.0511808 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:08:07 2021 -0800", "msg": "1637881678.0511808_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637881678.0511808 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:07:58 2021 -0800", "msg": "1637881678.0511808_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            print('POSTED_SPEED_LIMIT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637881304.7071207 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:01:53 2021 -0800", "msg": "1637881304.7071207_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637881304.7071207 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 15:01:44 2021 -0800", "msg": "1637881304.7071207_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637878793.8630588 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 14:20:03 2021 -0800", "msg": "1637878793.8630588_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637878793.8630588 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 14:19:54 2021 -0800", "msg": "1637878793.8630588_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637878772.4386744 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 14:19:41 2021 -0800", "msg": "1637878772.4386744_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637878772.4386744 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 14:19:32 2021 -0800", "msg": "1637878772.4386744_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(dropna=False, normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875960.622806 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:32:50 2021 -0800", "msg": "1637875960.622806_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875960.622806 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts('WEATHER_CONDITION'))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts('LIGHTING_CONDITION'))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts('TRAFFICWAY_TYPE'))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts('ROADWAY_SURFACE_COND'))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts('ROAD_DEFECT'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:32:40 2021 -0800", "msg": "1637875960.622806_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts(normalize=True))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts(normalize=True))"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts('WEATHER_CONDITION'))", "-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts('LIGHTING_CONDITION'))", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts('TRAFFICWAY_TYPE'))", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts('ROADWAY_SURFACE_COND'))", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts('ROAD_DEFECT'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875282.1361833 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:21:31 2021 -0800", "msg": "1637875282.1361833_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875282.1361833 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts('LIGHTING_CONDITION'))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts('TRAFFICWAY_TYPE'))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts('ROADWAY_SURFACE_COND'))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts('ROAD_DEFECT'))"], "sub": ["-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts())", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts())", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts())", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:21:22 2021 -0800", "msg": "1637875282.1361833_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts('LIGHTING_CONDITION'))", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts('TRAFFICWAY_TYPE'))", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts('ROADWAY_SURFACE_COND'))", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts('ROAD_DEFECT'))"], "sub": ["-            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts())", "-            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts())", "-            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts())", "-            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875067.7346783 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:17:57 2021 -0800", "msg": "1637875067.7346783_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637875067.7346783 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts('WEATHER_CONDITION'))", "+"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts())", "-"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:17:47 2021 -0800", "msg": "1637875067.7346783_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts('WEATHER_CONDITION'))", "+"], "sub": ["-            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts())", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637874793.1470318 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:13:22 2021 -0800", "msg": "1637874793.1470318_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637874793.1470318 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'TRAFFICWAY_TYPE'):", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts())", "+", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts())", "+"], "sub": ["-            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 13:13:13 2021 -0800", "msg": "1637874793.1470318_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'WEATHER_CONDITION'):", "+            print('WEATHER_CONDITION TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'LIGHTING_CONDITION'):", "+            print('LIGHTING_CONDITION TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'TRAFFICWAY_TYPE'):", "+            print('TRAFFICWAY_TYPE TYPES -\\n',crashes[column].value_counts())", "+", "+        if (column == 'ROADWAY_SURFACE_COND'):", "+            print('ROADWAY_SURFACE_COND TYPES -\\n',crashes[column].value_counts())", "+", "+            print('ROAD_DEFECT TYPES -\\n',crashes[column].value_counts())", "+"], "sub": ["-            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873645.410333 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:54:14 2021 -0800", "msg": "1637873645.410333_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873645.410333 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts())"], "sub": ["-            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts('NO DEFECTS'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:54:05 2021 -0800", "msg": "1637873645.410333_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts())"], "sub": ["-            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts('NO DEFECTS'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873602.4049077 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:53:31 2021 -0800", "msg": "1637873602.4049077_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873602.4049077 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts('NO DEFECTS'))"], "sub": ["-            print('NO DEFECTS -',crashes[column].value_counts('NO DEFECTS'))"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:53:22 2021 -0800", "msg": "1637873602.4049077_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            print('ROAD DEFECT TYPES -\\n',crashes[column].value_counts('NO DEFECTS'))"], "sub": ["-            print('NO DEFECTS -',crashes[column].value_counts('NO DEFECTS'))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873547.8879664 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:52:37 2021 -0800", "msg": "1637873547.8879664_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637873547.8879664 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'ROAD_DEFECT'):", "+            print('NO DEFECTS -',crashes[column].value_counts('NO DEFECTS'))"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:52:28 2021 -0800", "msg": "1637873547.8879664_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'ROAD_DEFECT'):", "+            print('NO DEFECTS -',crashes[column].value_counts('NO DEFECTS'))"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873290.7464743 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:48:23 2021 -0800", "msg": "1637873290.7464743_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873290.7464743 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+def load(filename):", "+    return pd.read_csv(filename, index_col='CRASH_ID') #demo", "+    df = load('data_2.csv')", "+        print('Column: ', column)"], "sub": ["-def load(filename, index_col):", "-    return pd.read_csv(filename, index_col) #demo", "-    df = load('data_2.csv', 'CRASH_ID')", "-    #         print('Column: ', column)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:48:10 2021 -0800", "msg": "1637873290.7464743_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+def load(filename):", "+    return pd.read_csv(filename, index_col='CRASH_ID') #demo", "+    df = load('data_2.csv')", "+        print('Column: ', column)"], "sub": ["-def load(filename, index_col):", "-    return pd.read_csv(filename, index_col) #demo", "-    df = load('data_2.csv', 'CRASH_ID')", "-    #         print('Column: ', column)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873212.5934556 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:46:58 2021 -0800", "msg": "1637873212.5934556_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873212.5934556 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        print('Missing Values -',df[column].isna().sum())"], "sub": ["-        print('Missing Values -',crashes[column].isna().sum())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:46:52 2021 -0800", "msg": "1637873212.5934556_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        print('Missing Values -',df[column].isna().sum())"], "sub": ["-        print('Missing Values -',crashes[column].isna().sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873183.4267335 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:46:29 2021 -0800", "msg": "1637873183.4267335_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873183.4267335 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'ROAD_DEFECT') | (column == 'ROADWAY_SURFACE_COND') | \\", "+            (column == 'WEATHER_CONDITION') | (column == 'LIGHTING_CONDITION') | \\", "+            (column == 'TRAFFICWAY_TYPE')):"], "sub": ["-        if (column == 'ROAD_DEFECT' | column == 'ROADWAY_SURFACE_COND' | \\", "-            column == 'WEATHER_CONDITION' | column == 'LIGHTING_CONDITION' | \\", "-            column == 'TRAFFICWAY_TYPE'):"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:46:23 2021 -0800", "msg": "1637873183.4267335_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+        if ((column == 'ROAD_DEFECT') | (column == 'ROADWAY_SURFACE_COND') | \\", "+            (column == 'WEATHER_CONDITION') | (column == 'LIGHTING_CONDITION') | \\", "+            (column == 'TRAFFICWAY_TYPE')):"], "sub": ["-        if (column == 'ROAD_DEFECT' | column == 'ROADWAY_SURFACE_COND' | \\", "-            column == 'WEATHER_CONDITION' | column == 'LIGHTING_CONDITION' | \\", "-            column == 'TRAFFICWAY_TYPE'):"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873131.9528868 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:45:36 2021 -0800", "msg": "1637873131.9528868_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1637873131.9528868 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+import matplotlib.pyplot as plt", "+import numpy as np", "+def load(filename, index_col):", "+    '''load(filename) takes as input a filename and loads a dataframe.", "+    '''", "+    return pd.read_csv(filename, index_col) #demo", "+    '''clean(df) takes as input a dataframe and fixes any data errors", "+        *that might affect your results*. it returns a copy of the dataframe", "+        without errors.", "+    '''", "+    for column in df.columns:", "+        # print('Column: ', column)", "+        # print('Mean -',df[column].mean())", "+        # print('STD -',df[column].std())", "+        # print('Range -',df[column].min(), df[column].max())", "+        if (column == 'ROAD_DEFECT' | column == 'ROADWAY_SURFACE_COND' | \\", "+            column == 'WEATHER_CONDITION' | column == 'LIGHTING_CONDITION' | \\", "+            column == 'TRAFFICWAY_TYPE'):", "+            df = df[df.ROAD_DEFECT != 'UNKNOWN']", "+            df = df[df.ROADWAY_SURFACE_COND != 'UNKNOWN']", "+            df = df[df.WEATHER_CONDITION != 'UNKNOWN']", "+            df = df[df.LIGHTING_CONDITION != 'UNKNOWN']", "+            df = df[df.TRAFFICWAY_TYPE != 'UNKNOWN']", "+        #     df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     df = df.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({'LONGITUDE': {0:np.NaN}})", "+        # df = df.replace('UNKNOWN', np.NaN)", "+    return df #demo", "+    df = load('data_2.csv', 'CRASH_ID')", "+", "+", "+    # df = pd.read_csv('data_2.csv', index_col='CRASH_ID')", "+    for column in df.columns:", "+    #         print('Column: ', column)", "+    #         # print('Mean -',df[column].mean())", "+    #         # print('STD -',df[column].std())", "+    #         # print('Range -',df[column].min(), df[column].max())", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        if (column == 'STREET_NO'):", "+            df = df.replace({'STREET_NO': {0:np.NaN}})", "+        if (column == 'LATITUDE'):", "+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+    #         df = df.replace('UNKNOWN', np.NaN)", "+        print('Missing Values -',crashes[column].isna().sum())", "+        print('---')"], "sub": ["-", "-def load(filename):", "-  '''load(filename) takes as input a filename and loads a dataframe.", "-  '''", "-  return pd.read_csv(filename) #demo", "-  '''clean(df) takes as input a dataframe and fixes any data errors", "-     *that might affect your results*. it returns a copy of the dataframe", "-     without errors.", "-  '''", "-", "-  return df #demo", "-    df = load('data_2.csv')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Thu Nov 25 12:45:32 2021 -0800", "msg": "1637873131.9528868_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+import matplotlib.pyplot as plt", "+import numpy as np", "+def load(filename, index_col):", "+    '''load(filename) takes as input a filename and loads a dataframe.", "+    '''", "+    return pd.read_csv(filename, index_col) #demo", "+    '''clean(df) takes as input a dataframe and fixes any data errors", "+        *that might affect your results*. it returns a copy of the dataframe", "+        without errors.", "+    '''", "+    for column in df.columns:", "+        # print('Column: ', column)", "+        # print('Mean -',df[column].mean())", "+        # print('STD -',df[column].std())", "+        # print('Range -',df[column].min(), df[column].max())", "+        if (column == 'ROAD_DEFECT' | column == 'ROADWAY_SURFACE_COND' | \\", "+            column == 'WEATHER_CONDITION' | column == 'LIGHTING_CONDITION' | \\", "+            column == 'TRAFFICWAY_TYPE'):", "+            df = df[df.ROAD_DEFECT != 'UNKNOWN']", "+            df = df[df.ROADWAY_SURFACE_COND != 'UNKNOWN']", "+            df = df[df.WEATHER_CONDITION != 'UNKNOWN']", "+            df = df[df.LIGHTING_CONDITION != 'UNKNOWN']", "+            df = df[df.TRAFFICWAY_TYPE != 'UNKNOWN']", "+        #     df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        # if (column == 'STREET_NO'):", "+        #     df = df.replace({'STREET_NO': {0:np.NaN}})", "+        # if (column == 'LATITUDE'):", "+        #     df = df.replace({'LATITUDE': {0:np.NaN}})", "+        # if (column == 'LONGITUDE'):", "+        #     df = df.replace({'LONGITUDE': {0:np.NaN}})", "+        # df = df.replace('UNKNOWN', np.NaN)", "+    return df #demo", "+    df = load('data_2.csv', 'CRASH_ID')", "+", "+", "+    # df = pd.read_csv('data_2.csv', index_col='CRASH_ID')", "+    for column in df.columns:", "+    #         print('Column: ', column)", "+    #         # print('Mean -',df[column].mean())", "+    #         # print('STD -',df[column].std())", "+    #         # print('Range -',df[column].min(), df[column].max())", "+        if (column == 'POSTED_SPEED_LIMIT'):", "+            df = df.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})", "+        if (column == 'STREET_NO'):", "+            df = df.replace({'STREET_NO': {0:np.NaN}})", "+        if (column == 'LATITUDE'):", "+            df = df.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            df = df.replace({'LONGITUDE': {0:np.NaN}})", "+    #         df = df.replace('UNKNOWN', np.NaN)", "+        print('Missing Values -',crashes[column].isna().sum())", "+        print('---')"], "sub": ["-", "-def load(filename):", "-  '''load(filename) takes as input a filename and loads a dataframe.", "-  '''", "-  return pd.read_csv(filename) #demo", "-  '''clean(df) takes as input a dataframe and fixes any data errors", "-     *that might affect your results*. it returns a copy of the dataframe", "-     without errors.", "-  '''", "-", "-  return df #demo", "-    df = load('data_2.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637816678.5542598 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 21:04:48 2021 -0800", "msg": "1637816678.5542598_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637816678.5542598 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'LATITUDE'):", "+            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 21:04:38 2021 -0800", "msg": "1637816678.5542598_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'LATITUDE'):", "+            crashes = crashes.replace({'LATITUDE': {0:np.NaN}})", "+        if (column == 'LONGITUDE'):", "+            crashes = crashes.replace({'LONGITUDE': {0:np.NaN}})"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637798299.8546023 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:58:28 2021 -0800", "msg": "1637798299.8546023_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637798299.8546023 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'STREET_NO'):", "+            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:58:20 2021 -0800", "msg": "1637798299.8546023_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'STREET_NO'):", "+            crashes = crashes.replace({'STREET_NO': {0:np.NaN}})"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637797698.251083 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:48:27 2021 -0800", "msg": "1637797698.251083_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637797698.251083 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"], "sub": ["-            crashes = crashes.replace(0, np.NaN)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:48:18 2021 -0800", "msg": "1637797698.251083_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+            crashes = crashes.replace({'POSTED_SPEED_LIMIT': {0:np.NaN}})"], "sub": ["-            crashes = crashes.replace(0, np.NaN)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637795083.2960668 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:04:52 2021 -0800", "msg": "1637795083.2960668_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637795083.2960668 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            crashes = crashes.replace(0, np.NaN)", "+        crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        crashes = crashes.replace(\"UNKNOWN\", np.NaN)"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 15:04:43 2021 -0800", "msg": "1637795083.2960668_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        if (column == 'POSTED_SPEED_LIMIT'):", "+            crashes = crashes.replace(0, np.NaN)", "+        crashes = crashes.replace('UNKNOWN', np.NaN)"], "sub": ["-        crashes = crashes.replace(\"UNKNOWN\", np.NaN)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637789777.8718684 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:36:26 2021 -0800", "msg": "1637789777.8718684_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637789777.8718684 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import numpy as np", "+        crashes = crashes.replace(\"UNKNOWN\", np.NaN)"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:36:18 2021 -0800", "msg": "1637789777.8718684_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import numpy as np", "+        crashes = crashes.replace(\"UNKNOWN\", np.NaN)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637788845.9875436 , error_code: 0"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:20:49 2021 -0800", "msg": "1637788845.9875436_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637788845.9875436 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # print('Mean -',crashes[column].mean())", "+        # print('STD -',crashes[column].std())", "+        # print('Range -',crashes[column].min(), crashes[column].max())"], "sub": ["-        print('Mean -',crashes[column].mean())", "-        print('STD -',crashes[column].std())", "-        print('Range -',crashes[column].min(), crashes[column].max())"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:20:46 2021 -0800", "msg": "1637788845.9875436_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+        # print('Mean -',crashes[column].mean())", "+        # print('STD -',crashes[column].std())", "+        # print('Range -',crashes[column].min(), crashes[column].max())"], "sub": ["-        print('Mean -',crashes[column].mean())", "-        print('STD -',crashes[column].std())", "-        print('Range -',crashes[column].min(), crashes[column].max())"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df = load('data.csv')", "+    # cdf = clean(df)", "+    # plot(cdf)", "+    # plt.show()", "+    crashes = pd.read_csv('data_2.csv', index_col='CRASH_ID')"], "sub": ["-    df = load('data.csv')", "-    cdf = clean(df)", "-    plot(cdf)", "-    plt.show()", "-    crashes = pd.read_csv('data_2.csv', index_col='CUST_ID')"]}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:17:00 2021 -0800", "msg": "1637788620.1552382_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # df = load('data.csv')", "+    # cdf = clean(df)", "+    # plot(cdf)", "+    # plt.show()", "+    crashes = pd.read_csv('data_2.csv', index_col='CRASH_ID')"], "sub": ["-    df = load('data.csv')", "-    cdf = clean(df)", "-    plot(cdf)", "-    plt.show()", "-    crashes = pd.read_csv('data_2.csv', index_col='CUST_ID')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637788510.787812 , error_code: 1"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:15:38 2021 -0800", "msg": "1637788510.787812_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1637788510.787812 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    crashes = pd.read_csv('data_2.csv', index_col='CUST_ID')", "+    for column in crashes.columns:", "+        print('Column: ', column)", "+        print('Mean -',crashes[column].mean())", "+        print('STD -',crashes[column].std())", "+        print('Range -',crashes[column].min(), crashes[column].max())", "+        print('Missing Values -',crashes[column].isna().sum())", "+        print('---')"], "sub": []}], "author": "Anke Hao <ankehao10@gmail.com>", "date": "Wed Nov 24 13:15:11 2021 -0800", "msg": "1637788510.787812_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    crashes = pd.read_csv('data_2.csv', index_col='CUST_ID')", "+    for column in crashes.columns:", "+        print('Column: ', column)", "+        print('Mean -',crashes[column].mean())", "+        print('STD -',crashes[column].std())", "+        print('Range -',crashes[column].min(), crashes[column].max())", "+        print('Missing Values -',crashes[column].isna().sum())", "+        print('---')"], "sub": []}, {"files": "diff --git a/.DS_Store b/.DS_Store", "add": [], "sub": []}, {"files": "diff --git a/.gitignore b/.gitignore", "add": ["+*.csv"], "sub": []}, {"files": "diff --git a/README.md b/README.md", "add": ["+# README", "+", "+cnet_id: #", "+", "+name: #"], "sub": []}, {"files": "diff --git a/explore/data.csv b/explore/data.csv", "add": ["+A,B", "+1,2", "+3,4", "+5,0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+'''load.py Load loads the dataset, cleans it, and generates a new clean", "+csv file.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+", "+", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    cdf.to_csv('clean.csv')"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_2.png')"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_3.png')"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_4.png')"], "sub": []}, {"files": "diff --git a/explore/run.py b/explore/run.py", "add": ["+\"\"\"This python program executes your code", "+\"\"\"", "+", "+from git import Repo", "+import os", "+import time", "+import sys", "+import subprocess", "+", "+", "+#advanced feature change at your own risk", "+COMPILER_COMMAND = 'python' # replace with whatever usually used in the commandline ex. python3", "+", "+", "+", "+def check_diff(repo):", "+    hcommit = repo.head.commit", "+", "+    diffs = hcommit.diff(None)", "+", "+    if len(diffs) == 0:", "+        return False", "+    else:", "+        return True", "+", "+", "+def add_commit(id, check_changed = True, push = True):", "+    \"\"\"", "+    Add current changes and commit", "+    \"\"\"", "+    # need to check if anything in repo has changed", "+    repo = Repo(os.path.dirname(os.getcwd())) #changed to look at the parent", "+", "+    if check_changed:", "+        changed = check_diff(repo)", "+    else:", "+        changed = True", "+", "+    if changed:", "+        repo.git.add('.')", "+", "+        repo.git.commit('-m', id)", "+        if push:", "+            repo.remotes.origin.push()", "+        return changed", "+", "+    else:", "+        return changed", "+", "+", "+if __name__ == '__main__':", "+", "+    ##error checking", "+    if len(sys.argv) == 1:", "+        print(\"You must run the program as follows:\\n python run.py scratch.py \\n or \\n python run.py load.py \\n or \\n python run.py plot.py\")", "+        exit()", "+", "+", "+    id = str(time.time())", "+    committed = add_commit(id + '_start', push = False)", "+", "+    command = [COMPILER_COMMAND] + sys.argv[1:]", "+", "+    process = subprocess.run(command)", "+", "+    with open('./runs.txt', 'a') as f:", "+        record = '{} , {}, {} , error_code: {} \\n'.format(sys.argv[1], committed, id, process.returncode)", "+        f.write(record)", "+", "+    add_commit(id + '_end', check_changed = False, push=True)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+'''scratch.py", "+", "+You will write down any \"scratch\" code that you use to explore the dataset in", "+this file. This code does not produce any outputs (it does not modify any files)", "+but allows you to explore the data. We're separating this code from the rest because", "+it allows us to understand your thought process during data exploration.", "+", "+*Remember to replace the return statements with your code*", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+#TODO 1.", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+", "+"], "sub": []}, {"files": "diff --git a/requirements.txt b/requirements.txt", "add": ["+appnope==0.1.2", "+argon2-cffi==20.1.0", "+async-generator==1.10", "+attrs==21.2.0", "+backcall==0.2.0", "+bitstring==3.1.9", "+bleach==3.3.0", "+cffi==1.14.5", "+click==8.0.0", "+cloudpickle==1.6.0", "+cycler==0.10.0", "+dask==2021.4.1", "+decorator==5.0.7", "+defusedxml==0.7.1", "+distributed==2021.4.1", "+entrypoints==0.3", "+fsspec==2021.5.0", "+gitdb==4.0.9", "+GitPython==3.1.24", "+graphviz==0.16", "+HeapDict==1.0.1", "+ipykernel==5.5.5", "+ipython==7.23.1", "+ipython-genutils==0.2.0", "+ipywidgets==7.6.3", "+jedi==0.18.0", "+Jinja2==3.0.0", "+joblib==1.0.1", "+jsonschema==3.2.0", "+jupyter==1.0.0", "+jupyter-client==6.1.12", "+jupyter-console==6.4.0", "+jupyter-core==4.7.1", "+jupyterlab-pygments==0.1.2", "+jupyterlab-widgets==1.0.0", "+kiwisolver==1.3.1", "+locket==0.2.1", "+MarkupSafe==2.0.0", "+matplotlib==3.4.2", "+matplotlib-inline==0.1.2", "+mistune==0.8.4", "+msgpack==1.0.2", "+nbclient==0.5.3", "+nbconvert==6.0.7", "+nbformat==5.1.3", "+nest-asyncio==1.5.1", "+notebook==6.3.0", "+numpy==1.20.3", "+packaging==20.9", "+pandas==1.2.4", "+pandocfilters==1.4.3", "+parso==0.8.2", "+partd==1.2.0", "+pexpect==4.8.0", "+pickleshare==0.7.5", "+Pillow==8.2.0", "+prometheus-client==0.10.1", "+prompt-toolkit==3.0.18", "+psutil==5.8.0", "+ptyprocess==0.7.0", "+pycparser==2.20", "+Pygments==2.9.0", "+pyparsing==2.4.7", "+pyrsistent==0.17.3", "+python-dateutil==2.8.1", "+pytz==2021.1", "+PyYAML==5.4.1", "+pyzmq==22.0.3", "+qtconsole==5.1.0", "+QtPy==1.9.0", "+scikit-learn==0.24.2", "+scipy==1.6.3", "+Send2Trash==1.5.0", "+six==1.16.0", "+sklearn==0.0", "+smmap==5.0.0", "+sortedcontainers==2.3.0", "+tblib==1.7.0", "+terminado==0.9.5", "+testpath==0.4.4", "+threadpoolctl==2.1.0", "+toolz==0.11.1", "+tornado==6.1", "+traitlets==5.0.5", "+typing-extensions==3.10.0.2", "+wcwidth==0.2.5", "+webencodings==0.5.1", "+widgetsnbextension==3.5.1", "+zict==2.0.0"], "sub": []}], "author": "github-classroom[bot] <66690702+github-classroom[bot]@users.noreply.github.com>", "date": "Fri Nov 19 00:50:35 2021 +0000", "msg": "Initial commit"}]