[{"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356846.6189444 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:07:57 2021 -0600", "msg": "1638356846.6189444_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356846.6189444 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    scat_hist(df, 'Crashes')", "+", "+", "+    for var in df['WEATHER_CONDITION'].unique():", "+      scat_hist(df[df['WEATHER_CONDITION']==var], ('Crashes in {} weather'.format(var)))", "+", "+    for var in df['LIGHTING_CONDITION'].unique():", "+     scat_hist(df[df['LIGHTING_CONDITION']==var], ('Crashes in {}'.format(var)))", "+", "+    for var in df['ROADWAY_SURFACE_COND'].unique():", "+      scat_hist(df[df['ROADWAY_SURFACE_COND']==var], ('Crashes in {} roadway surface condition'.format(var)))", "+", "+    for var in df['ROAD_DEFECT'].unique():", "+      scat_hist(df[df['ROAD_DEFECT']==var], ('Crashes in {}'.format(var)))", "+", "+    for var in df['TRAFFICWAY_TYPE'].unique():", "+      scat_hist(df[df['TRAFFICWAY_TYPE']==var], ('Crashes in {} trafficway'.format(var)))", "+", "+    for var in df['ALIGNMENT'].unique():", "+     scat_hist(df[df['ALIGNMENT']==var], ('Crashes in {} street alignment'.format(var)))"], "sub": ["-    scat_hist(df, 'Crashes')"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:07:26 2021 -0600", "msg": "1638356846.6189444_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    scat_hist(df, 'Crashes')", "+", "+", "+    for var in df['WEATHER_CONDITION'].unique():", "+      scat_hist(df[df['WEATHER_CONDITION']==var], ('Crashes in {} weather'.format(var)))", "+", "+    for var in df['LIGHTING_CONDITION'].unique():", "+     scat_hist(df[df['LIGHTING_CONDITION']==var], ('Crashes in {}'.format(var)))", "+", "+    for var in df['ROADWAY_SURFACE_COND'].unique():", "+      scat_hist(df[df['ROADWAY_SURFACE_COND']==var], ('Crashes in {} roadway surface condition'.format(var)))", "+", "+    for var in df['ROAD_DEFECT'].unique():", "+      scat_hist(df[df['ROAD_DEFECT']==var], ('Crashes in {}'.format(var)))", "+", "+    for var in df['TRAFFICWAY_TYPE'].unique():", "+      scat_hist(df[df['TRAFFICWAY_TYPE']==var], ('Crashes in {} trafficway'.format(var)))", "+", "+    for var in df['ALIGNMENT'].unique():", "+     scat_hist(df[df['ALIGNMENT']==var], ('Crashes in {} street alignment'.format(var)))"], "sub": ["-    scat_hist(df, 'Crashes')"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356473.6255085 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:01:22 2021 -0600", "msg": "1638356473.6255085_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356473.6255085 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+from matplotlib.gridspec import GridSpec"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:01:13 2021 -0600", "msg": "1638356473.6255085_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+from matplotlib.gridspec import GridSpec"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356452.5785618 , error_code: 1"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:00:57 2021 -0600", "msg": "1638356452.5785618_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356452.5785618 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  def scat_hist(df, title):", "+    fig = plt.figure()", "+    gs = GridSpec(4,4)", "+", "+    ax_scatter = fig.add_subplot(gs[1:4, 0:3])", "+    ax_hist_x = fig.add_subplot(gs[0,0:3])", "+    ax_hist_y = fig.add_subplot(gs[1:4, 3])", "+", "+    ax_scatter.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+    ax_scatter.set_xlabel('Latitude', linespacing=3)", "+    ax_scatter.set_ylabel('Longitude', linespacing=3)", "+    ax_scatter.set_title(title)", "+", "+    ax_hist_x.hist(df['LATITUDE'])", "+    ax_hist_y.hist(df['LONGITUDE'], orientation = 'horizontal')", "+", "+    plt.show()", "+", "+  scat_hist(df, 'Crashes')"], "sub": ["-  plt.rcParams[\"figure.figsize\"] = [14, 14]", "-  plt.rcParams[\"figure.autolayout\"] = True", "-", "-  plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "-  plt.xlabel('Latitude')", "-  plt.ylabel('Longitude')", "-  plt.title('Crashes')", "-  plt.show()"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 05:00:52 2021 -0600", "msg": "1638356452.5785618_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  def scat_hist(df, title):", "+    fig = plt.figure()", "+    gs = GridSpec(4,4)", "+", "+    ax_scatter = fig.add_subplot(gs[1:4, 0:3])", "+    ax_hist_x = fig.add_subplot(gs[0,0:3])", "+    ax_hist_y = fig.add_subplot(gs[1:4, 3])", "+", "+    ax_scatter.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+    ax_scatter.set_xlabel('Latitude', linespacing=3)", "+    ax_scatter.set_ylabel('Longitude', linespacing=3)", "+    ax_scatter.set_title(title)", "+", "+    ax_hist_x.hist(df['LATITUDE'])", "+    ax_hist_y.hist(df['LONGITUDE'], orientation = 'horizontal')", "+", "+    plt.show()", "+", "+  scat_hist(df, 'Crashes')"], "sub": ["-  plt.rcParams[\"figure.figsize\"] = [14, 14]", "-  plt.rcParams[\"figure.autolayout\"] = True", "-", "-  plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "-  plt.xlabel('Latitude')", "-  plt.ylabel('Longitude')", "-  plt.title('Crashes')", "-  plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356363.9800565 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:59:44 2021 -0600", "msg": "1638356363.9800565_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356363.9800565 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from matplotlib.gridspec import GridSpec", "+    def scat_hist(df, title):", "+      fig = plt.figure()", "+      gs = GridSpec(4,4)", "+", "+      ax_scatter = fig.add_subplot(gs[1:4, 0:3])", "+      ax_hist_x = fig.add_subplot(gs[0,0:3])", "+      ax_hist_y = fig.add_subplot(gs[1:4, 3])", "+", "+      ax_scatter.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+      ax_scatter.set_xlabel('Latitude', linespacing=3)", "+      ax_scatter.set_ylabel('Longitude', linespacing=3)", "+      ax_scatter.set_title(title)", "+", "+      ax_hist_x.hist(df['LATITUDE'])", "+      ax_hist_y.hist(df['LONGITUDE'], orientation = 'horizontal')", "+      plt.show()", "+", "+    scat_hist(df, 'Crashes')"], "sub": ["-    plt.rcParams[\"figure.figsize\"] = [14, 14]", "-    plt.rcParams[\"figure.autolayout\"] = True", "-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "-    plt.xlabel('Latitude')", "-    plt.ylabel('Longitude')", "-    plt.title('Crashes')", "-    plt.show()"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:59:24 2021 -0600", "msg": "1638356363.9800565_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+from matplotlib.gridspec import GridSpec", "+    def scat_hist(df, title):", "+      fig = plt.figure()", "+      gs = GridSpec(4,4)", "+", "+      ax_scatter = fig.add_subplot(gs[1:4, 0:3])", "+      ax_hist_x = fig.add_subplot(gs[0,0:3])", "+      ax_hist_y = fig.add_subplot(gs[1:4, 3])", "+", "+      ax_scatter.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+      ax_scatter.set_xlabel('Latitude', linespacing=3)", "+      ax_scatter.set_ylabel('Longitude', linespacing=3)", "+      ax_scatter.set_title(title)", "+", "+      ax_hist_x.hist(df['LATITUDE'])", "+      ax_hist_y.hist(df['LONGITUDE'], orientation = 'horizontal')", "+      plt.show()", "+", "+    scat_hist(df, 'Crashes')"], "sub": ["-    plt.rcParams[\"figure.figsize\"] = [14, 14]", "-    plt.rcParams[\"figure.autolayout\"] = True", "-    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "-    plt.xlabel('Latitude')", "-    plt.ylabel('Longitude')", "-    plt.title('Crashes')", "-    plt.show()"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356204.9743714 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:56:54 2021 -0600", "msg": "1638356204.9743714_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638356204.9743714 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [14, 14]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+  plt.xlabel('Latitude')", "+  plt.ylabel('Longitude')", "+  plt.title('Crashes')", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:56:45 2021 -0600", "msg": "1638356204.9743714_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [14, 14]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+  plt.xlabel('Latitude')", "+  plt.ylabel('Longitude')", "+  plt.title('Crashes')", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356115.3281982 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:55:35 2021 -0600", "msg": "1638356115.3281982_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638356115.3281982 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()", "+", "+", "+    plt.rcParams[\"figure.figsize\"] = [14, 14]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+    plt.xlabel('Latitude')", "+    plt.ylabel('Longitude')", "+    plt.title('Crashes')"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:55:15 2021 -0600", "msg": "1638356115.3281982_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()", "+", "+", "+    plt.rcParams[\"figure.figsize\"] = [14, 14]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    plt.scatter(df['LATITUDE'], df['LONGITUDE'], alpha=0.1)", "+    plt.xlabel('Latitude')", "+    plt.ylabel('Longitude')", "+    plt.title('Crashes')"], "sub": []}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638355771.4155388 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:49:37 2021 -0600", "msg": "1638355771.4155388_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638355771.4155388 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [10, 6]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  pd.crosstab(index=df['WEATHER_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Weather Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  pd.crosstab(index=df['LIGHTING_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Lighting Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  pd.crosstab(index=df['ROADWAY_SURFACE_COND'], columns=df['CRASH_TYPE']).plot(title='Roadway Surface Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:49:31 2021 -0600", "msg": "1638355771.4155388_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [10, 6]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  pd.crosstab(index=df['WEATHER_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Weather Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  pd.crosstab(index=df['LIGHTING_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Lighting Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  pd.crosstab(index=df['ROADWAY_SURFACE_COND'], columns=df['CRASH_TYPE']).plot(title='Roadway Surface Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638355637.2210352 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:47:38 2021 -0600", "msg": "1638355637.2210352_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638355637.2210352 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()", "+", "+", "+    plt.rcParams[\"figure.figsize\"] = [10, 6]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    pd.crosstab(index=df['WEATHER_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Weather Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    pd.crosstab(index=df['LIGHTING_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Lighting Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    pd.crosstab(index=df['ROADWAY_SURFACE_COND'], columns=df['CRASH_TYPE']).plot(title='Roadway Surface Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:47:17 2021 -0600", "msg": "1638355637.2210352_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.show()", "+", "+", "+    plt.rcParams[\"figure.figsize\"] = [10, 6]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    pd.crosstab(index=df['WEATHER_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Weather Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    pd.crosstab(index=df['LIGHTING_CONDITION'], columns=df['CRASH_TYPE']).plot(title='Lighting Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    pd.crosstab(index=df['ROADWAY_SURFACE_COND'], columns=df['CRASH_TYPE']).plot(title='Roadway Surface Condition', ylabel='Log No. of Crashes', kind='bar', log=True)", "+"], "sub": []}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638355468.8026686 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:44:35 2021 -0600", "msg": "1638355468.8026686_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638355468.8026686 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [10, 18]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  fig, ax = plt.subplots()", "+", "+  plt.subplot(3, 1, 1)", "+  df['WEATHER_CONDITION'].value_counts().plot(title='Weather Condition', xlabel='WEATHER_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.subplot(3, 1, 2)", "+  df['LIGHTING_CONDITION'].value_counts().plot(title='Lighting Condition', xlabel='LIGHTING_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.subplot(3, 1, 3)", "+  df['ROADWAY_SURFACE_COND'].value_counts().plot(title='Roadway Surface Condition', xlabel='ROADWAY_SURFACE_COND', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:44:28 2021 -0600", "msg": "1638355468.8026686_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+  plt.rcParams[\"figure.figsize\"] = [10, 18]", "+  plt.rcParams[\"figure.autolayout\"] = True", "+", "+  fig, ax = plt.subplots()", "+", "+  plt.subplot(3, 1, 1)", "+  df['WEATHER_CONDITION'].value_counts().plot(title='Weather Condition', xlabel='WEATHER_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.subplot(3, 1, 2)", "+  df['LIGHTING_CONDITION'].value_counts().plot(title='Lighting Condition', xlabel='LIGHTING_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.subplot(3, 1, 3)", "+  df['ROADWAY_SURFACE_COND'].value_counts().plot(title='Roadway Surface Condition', xlabel='ROADWAY_SURFACE_COND', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+  plt.show()"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638355385.9577415 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:43:25 2021 -0600", "msg": "1638355385.9577415_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638355385.9577415 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import numpy as np", "+    plt.rcParams[\"figure.figsize\"] = [10, 18]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    fig, ax = plt.subplots()", "+", "+    plt.subplot(3, 1, 1)", "+    df['WEATHER_CONDITION'].value_counts().plot(title='Weather Condition', xlabel='WEATHER_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.subplot(3, 1, 2)", "+    df['LIGHTING_CONDITION'].value_counts().plot(title='Lighting Condition', xlabel='LIGHTING_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.subplot(3, 1, 3)", "+    df['ROADWAY_SURFACE_COND'].value_counts().plot(title='Roadway Surface Condition', xlabel='ROADWAY_SURFACE_COND', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.show()"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:43:06 2021 -0600", "msg": "1638355385.9577415_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+import numpy as np", "+    plt.rcParams[\"figure.figsize\"] = [10, 18]", "+    plt.rcParams[\"figure.autolayout\"] = True", "+", "+    fig, ax = plt.subplots()", "+", "+    plt.subplot(3, 1, 1)", "+    df['WEATHER_CONDITION'].value_counts().plot(title='Weather Condition', xlabel='WEATHER_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.subplot(3, 1, 2)", "+    df['LIGHTING_CONDITION'].value_counts().plot(title='Lighting Condition', xlabel='LIGHTING_CONDITION', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.subplot(3, 1, 3)", "+    df['ROADWAY_SURFACE_COND'].value_counts().plot(title='Roadway Surface Condition', xlabel='ROADWAY_SURFACE_COND', ylabel='Log No. of Crashes', kind='bar', log=True)", "+", "+    plt.show()"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638354894.4922793 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:35:12 2021 -0600", "msg": "1638354894.4922793_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638354894.4922793 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638354846.2320213 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:34:32 2021 -0600", "msg": "1638354846.2320213_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638354846.2320213 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for col in df.columns:", "+      print(df[col].unique())", "+", "+    for column in df.columns:", "+      print('Missing Values - ', df[column].isna().sum() + (df[column] == 'UNKNOWN').sum())", "+    cdf = clean(df)", "+"], "sub": ["-    cdf = clean(df)", "-    for col in cdf.columns:", "-      print(cdf[col].unique())", "-", "-    for column in cdf.columns:", "-      print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:34:06 2021 -0600", "msg": "1638354846.2320213_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for col in df.columns:", "+      print(df[col].unique())", "+", "+    for column in df.columns:", "+      print('Missing Values - ', df[column].isna().sum() + (df[column] == 'UNKNOWN').sum())", "+    cdf = clean(df)", "+"], "sub": ["-    cdf = clean(df)", "-    for col in cdf.columns:", "-      print(cdf[col].unique())", "-", "-    for column in cdf.columns:", "-      print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638354690.623145 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:31:49 2021 -0600", "msg": "1638354690.623145_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638354690.623145 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return None", "+      print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"], "sub": ["-  pd.crosstab(index=df['MOST_SEVERE_INJURY'], columns=df['DAMAGE'], normalize='index').plot(title='Damage Cost', ylabel='Percentage of Crashes', kind='bar', stacked=True)", "-      if column == 'LATITUDE':", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] < 40).sum())", "-      elif column == 'LONGITUDE':", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] > -80).sum())", "-      else:", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:31:30 2021 -0600", "msg": "1638354690.623145_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return None", "+      print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"], "sub": ["-  pd.crosstab(index=df['MOST_SEVERE_INJURY'], columns=df['DAMAGE'], normalize='index').plot(title='Damage Cost', ylabel='Percentage of Crashes', kind='bar', stacked=True)", "-      if column == 'LATITUDE':", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] < 40).sum())", "-      elif column == 'LONGITUDE':", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] > -80).sum())", "-      else:", "-          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638353934.4820533 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:19:24 2021 -0600", "msg": "1638353934.4820533_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638353934.4820533 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return pd.read_csv(filename)", "+  return df", "+    df = load('data_2.csv')"], "sub": ["-  return pd.read_csv(filename) #demo", "-  return df #demo", "-    df = load('data.csv')"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:18:55 2021 -0600", "msg": "1638353934.4820533_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  return pd.read_csv(filename)", "+  return df", "+    df = load('data_2.csv')"], "sub": ["-  return pd.read_csv(filename) #demo", "-  return df #demo", "-    df = load('data.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638353405.0026052 , error_code: 1"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:10:10 2021 -0600", "msg": "1638353405.0026052_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638353405.0026052 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638353196.8043103 , error_code: 0"], "sub": []}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:07:17 2021 -0600", "msg": "1638353196.8043103_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638353196.8043103 , error_code: 0"], "sub": []}, {"files": "diff --git a/README.md b/README.md", "add": ["+cnet_id: sumaiyaa", "+name: Sumaiya Ahmed"], "sub": ["-cnet_id: #", "-name: #"]}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  from pandas.api.types import is_numeric_dtype", "+", "+  for column in df.columns:", "+    if column == 'LATITUDE':", "+        df = df[df[column] >= 40]", "+    elif column == 'LONGITUDE':", "+        df = df[df[column] <= -80]", "+    if is_numeric_dtype(df[column]):", "+        df[column] = df[column].fillna(0)", "+    else:", "+        df.dropna()", "+    df = df[df[column] != 'UNKNOWN']", "+"], "sub": ["-"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  from pandas.api.types import is_numeric_dtype", "+", "+  for column in df.columns:", "+    if column == 'LATITUDE':", "+        df = df[df[column] >= 40]", "+    elif column == 'LONGITUDE':", "+        df = df[df[column] <= -80]", "+    if is_numeric_dtype(df[column]):", "+        df[column] = df[column].fillna(0)", "+    else:", "+        df.dropna()", "+    df = df[df[column] != 'UNKNOWN']", "+", "+  pd.crosstab(index=df['MOST_SEVERE_INJURY'], columns=df['DAMAGE'], normalize='index').plot(title='Damage Cost', ylabel='Percentage of Crashes', kind='bar', stacked=True)", "+", "+    for col in cdf.columns:", "+      print(\"Column: \", col)", "+      print(cdf[col].unique())", "+      print('---')", "+", "+    for column in cdf.columns:", "+      print('Column: ', column)", "+      if column == 'LATITUDE':", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] < 40).sum())", "+      elif column == 'LONGITUDE':", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] > -80).sum())", "+      else:", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())", "+      print('---')", "+"], "sub": ["-", "-", "-  plt.scatter(df['A'],df['B'])", "-  return None"]}], "author": "Sumaiya Ahmed <sumaiyaa@cs.uchicago.edu>", "date": "Wed Dec 1 04:06:37 2021 -0600", "msg": "1638353196.8043103_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  from pandas.api.types import is_numeric_dtype", "+", "+  for column in df.columns:", "+    if column == 'LATITUDE':", "+        df = df[df[column] >= 40]", "+    elif column == 'LONGITUDE':", "+        df = df[df[column] <= -80]", "+    if is_numeric_dtype(df[column]):", "+        df[column] = df[column].fillna(0)", "+    else:", "+        df.dropna()", "+    df = df[df[column] != 'UNKNOWN']", "+", "+  pd.crosstab(index=df['MOST_SEVERE_INJURY'], columns=df['DAMAGE'], normalize='index').plot(title='Damage Cost', ylabel='Percentage of Crashes', kind='bar', stacked=True)", "+", "+    for col in cdf.columns:", "+      print(\"Column: \", col)", "+      print(cdf[col].unique())", "+      print('---')", "+", "+    for column in cdf.columns:", "+      print('Column: ', column)", "+      if column == 'LATITUDE':", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] < 40).sum())", "+      elif column == 'LONGITUDE':", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] > -80).sum())", "+      else:", "+          print('Missing Values - ', cdf[column].isna().sum() + (cdf[column] == 'UNKNOWN').sum())", "+      print('---')", "+"], "sub": ["-", "-", "-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/.DS_Store b/.DS_Store", "add": [], "sub": []}, {"files": "diff --git a/.gitignore b/.gitignore", "add": ["+*.csv"], "sub": []}, {"files": "diff --git a/README.md b/README.md", "add": ["+# README", "+", "+cnet_id: #", "+", "+name: #"], "sub": []}, {"files": "diff --git a/explore/data.csv b/explore/data.csv", "add": ["+A,B", "+1,2", "+3,4", "+5,0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+'''load.py Load loads the dataset, cleans it, and generates a new clean", "+csv file.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+", "+", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    cdf.to_csv('clean.csv')"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_2.png')"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_3.png')"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_4.png')"], "sub": []}, {"files": "diff --git a/explore/run.py b/explore/run.py", "add": ["+\"\"\"This python program executes your code", "+\"\"\"", "+", "+from git import Repo", "+import os", "+import time", "+import sys", "+import subprocess", "+", "+", "+#advanced feature change at your own risk", "+COMPILER_COMMAND = 'python' # replace with whatever usually used in the commandline ex. python3", "+", "+", "+", "+def check_diff(repo):", "+    hcommit = repo.head.commit", "+", "+    diffs = hcommit.diff(None)", "+", "+    if len(diffs) == 0:", "+        return False", "+    else:", "+        return True", "+", "+", "+def add_commit(id, check_changed = True, push = True):", "+    \"\"\"", "+    Add current changes and commit", "+    \"\"\"", "+    # need to check if anything in repo has changed", "+    repo = Repo(os.path.dirname(os.getcwd())) #changed to look at the parent", "+", "+    if check_changed:", "+        changed = check_diff(repo)", "+    else:", "+        changed = True", "+", "+    if changed:", "+        repo.git.add('.')", "+", "+        repo.git.commit('-m', id)", "+        if push:", "+            repo.remotes.origin.push()", "+        return changed", "+", "+    else:", "+        return changed", "+", "+", "+if __name__ == '__main__':", "+", "+    ##error checking", "+    if len(sys.argv) == 1:", "+        print(\"You must run the program as follows:\\n python run.py scratch.py \\n or \\n python run.py load.py \\n or \\n python run.py plot.py\")", "+        exit()", "+", "+", "+    id = str(time.time())", "+    committed = add_commit(id + '_start', push = False)", "+", "+    command = [COMPILER_COMMAND] + sys.argv[1:]", "+", "+    process = subprocess.run(command)", "+", "+    with open('./runs.txt', 'a') as f:", "+        record = '{} , {}, {} , error_code: {} \\n'.format(sys.argv[1], committed, id, process.returncode)", "+        f.write(record)", "+", "+    add_commit(id + '_end', check_changed = False, push=True)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+'''scratch.py", "+", "+You will write down any \"scratch\" code that you use to explore the dataset in", "+this file. This code does not produce any outputs (it does not modify any files)", "+but allows you to explore the data. We're separating this code from the rest because", "+it allows us to understand your thought process during data exploration.", "+", "+*Remember to replace the return statements with your code*", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+#TODO 1.", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+", "+"], "sub": []}, {"files": "diff --git a/requirements.txt b/requirements.txt", "add": ["+appnope==0.1.2", "+argon2-cffi==20.1.0", "+async-generator==1.10", "+attrs==21.2.0", "+backcall==0.2.0", "+bitstring==3.1.9", "+bleach==3.3.0", "+cffi==1.14.5", "+click==8.0.0", "+cloudpickle==1.6.0", "+cycler==0.10.0", "+dask==2021.4.1", "+decorator==5.0.7", "+defusedxml==0.7.1", "+distributed==2021.4.1", "+entrypoints==0.3", "+fsspec==2021.5.0", "+gitdb==4.0.9", "+GitPython==3.1.24", "+graphviz==0.16", "+HeapDict==1.0.1", "+ipykernel==5.5.5", "+ipython==7.23.1", "+ipython-genutils==0.2.0", "+ipywidgets==7.6.3", "+jedi==0.18.0", "+Jinja2==3.0.0", "+joblib==1.0.1", "+jsonschema==3.2.0", "+jupyter==1.0.0", "+jupyter-client==6.1.12", "+jupyter-console==6.4.0", "+jupyter-core==4.7.1", "+jupyterlab-pygments==0.1.2", "+jupyterlab-widgets==1.0.0", "+kiwisolver==1.3.1", "+locket==0.2.1", "+MarkupSafe==2.0.0", "+matplotlib==3.4.2", "+matplotlib-inline==0.1.2", "+mistune==0.8.4", "+msgpack==1.0.2", "+nbclient==0.5.3", "+nbconvert==6.0.7", "+nbformat==5.1.3", "+nest-asyncio==1.5.1", "+notebook==6.3.0", "+numpy==1.20.3", "+packaging==20.9", "+pandas==1.2.4", "+pandocfilters==1.4.3", "+parso==0.8.2", "+partd==1.2.0", "+pexpect==4.8.0", "+pickleshare==0.7.5", "+Pillow==8.2.0", "+prometheus-client==0.10.1", "+prompt-toolkit==3.0.18", "+psutil==5.8.0", "+ptyprocess==0.7.0", "+pycparser==2.20", "+Pygments==2.9.0", "+pyparsing==2.4.7", "+pyrsistent==0.17.3", "+python-dateutil==2.8.1", "+pytz==2021.1", "+PyYAML==5.4.1", "+pyzmq==22.0.3", "+qtconsole==5.1.0", "+QtPy==1.9.0", "+scikit-learn==0.24.2", "+scipy==1.6.3", "+Send2Trash==1.5.0", "+six==1.16.0", "+sklearn==0.0", "+smmap==5.0.0", "+sortedcontainers==2.3.0", "+tblib==1.7.0", "+terminado==0.9.5", "+testpath==0.4.4", "+threadpoolctl==2.1.0", "+toolz==0.11.1", "+tornado==6.1", "+traitlets==5.0.5", "+typing-extensions==3.10.0.2", "+wcwidth==0.2.5", "+webencodings==0.5.1", "+widgetsnbextension==3.5.1", "+zict==2.0.0"], "sub": []}], "author": "github-classroom[bot] <66690702+github-classroom[bot]@users.noreply.github.com>", "date": "Wed Nov 17 02:48:46 2021 +0000", "msg": "Initial commit"}]