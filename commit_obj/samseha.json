[{"diffs": [{"files": "diff --git a/README.md b/README.md", "add": ["+cnet_id: samseha", "+name: Seha Choi"], "sub": ["-cnet_id: #", "-name: #"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Thu Dec 2 10:36:47 2021 -0600", "msg": "just change readme"}, {"diffs": [{"files": "diff --git a/README.md b/README.md", "add": ["+cnet_id: samseha", "+name: Seha Choi"], "sub": ["-cnet_id: #", "-name: #"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638330843.441729 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:54:06 2021 -0600", "msg": "1638330843.441729_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638330843.441729 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  c =0", "+    if c >20:", "+    print(df[df['BEAT_OF_OCCURRENCE'] == i]['TRAFFICWAY_TYPE'].value_counts())", "+    c += 1"], "sub": ["-    if i >20:", "-    print(df[df['BEAT_OF_OCCURRENCE'] == row[0]]['TRAFFICWAY_TYPE'].value_counts())"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:54:03 2021 -0600", "msg": "1638330843.441729_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  c =0", "+    if c >20:", "+    print(df[df['BEAT_OF_OCCURRENCE'] == i]['TRAFFICWAY_TYPE'].value_counts())", "+    c += 1"], "sub": ["-    if i >20:", "-    print(df[df['BEAT_OF_OCCURRENCE'] == row[0]]['TRAFFICWAY_TYPE'].value_counts())"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638330707.553347 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:52:20 2021 -0600", "msg": "1638330707.553347_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638330707.553347 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def q5(df):", "+  beat_count = df['BEAT_OF_OCCURRENCE'].value_counts()", "+  df_val_counts = pd.DataFrame(beat_count)", "+  for i, row in df_val_counts.iterrows():", "+    if i >20:", "+      break", "+    print(df[df['BEAT_OF_OCCURRENCE'] == row[0]]['TRAFFICWAY_TYPE'].value_counts())", "+    q5(df)"], "sub": ["-", "-    plot2(df)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:51:47 2021 -0600", "msg": "1638330707.553347_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def q5(df):", "+  beat_count = df['BEAT_OF_OCCURRENCE'].value_counts()", "+  df_val_counts = pd.DataFrame(beat_count)", "+  for i, row in df_val_counts.iterrows():", "+    if i >20:", "+      break", "+    print(df[df['BEAT_OF_OCCURRENCE'] == row[0]]['TRAFFICWAY_TYPE'].value_counts())", "+    q5(df)"], "sub": ["-", "-    plot2(df)"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638330036.379873 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:41:07 2021 -0600", "msg": "1638330036.379873_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638330036.379873 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tlab[i][j] = int(row['tot_sev'])"], "sub": ["-  \tlab[i][j] = row['tot_sev']"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:40:36 2021 -0600", "msg": "1638330036.379873_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tlab[i][j] = int(row['tot_sev'])"], "sub": ["-  \tlab[i][j] = row['tot_sev']"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329992.287842 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:40:24 2021 -0600", "msg": "1638329992.287842_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329992.287842 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tif row[0] == 'DARKNESS':", "+  \telif row[0] == 'DARKNESS, LIGHTED ROAD':", "+  \telif row[0] == 'DAWN':", "+  \telif row[0] == 'DAYLIGHT':", "+  \t  i = 4", "+", "+  return lab", "+  lab3 = get_label3(t2)", "+  plt.subplot(3,1,1)", "+  plt.subplot(3,1,2)", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "-  \telif row[0] == 'BLOWING SNOW':", "-  \telif row[0] == 'CLEAR':", "-  \telif row[0] == 'CLOUDY/OVERCAST':", "-  \telif row[0] == 'FOG/SMOKE/HAZE':", "-  \t  i = 4", "-  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "-  \t  i = 5", "-  \telif row[0] == 'OTHER':", "-  \t  i = 6", "-  \telif row[0] == 'RAIN':", "-  \t  i = 7", "-  \telif row[0] == 'SEVERE CROSS WIND GATE':", "-  \t  i = 8", "-  \telif row[0] == 'SLEET/HAIL':", "-  \t  i = 9", "-  \t  i = 10", "-  #lab3 = get_label2(t2)", "-  plt.subplot(2,1,1)", "-  plt.subplot(2,1,2)", "-  # plt.subplot(3,1,3)", "-  # plt.title('Heatmap of Lighting vs Roadway Surface')", "-  # sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:39:52 2021 -0600", "msg": "1638329992.287842_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tif row[0] == 'DARKNESS':", "+  \telif row[0] == 'DARKNESS, LIGHTED ROAD':", "+  \telif row[0] == 'DAWN':", "+  \telif row[0] == 'DAYLIGHT':", "+  \t  i = 4", "+", "+  return lab", "+  lab3 = get_label3(t2)", "+  plt.subplot(3,1,1)", "+  plt.subplot(3,1,2)", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "-  \telif row[0] == 'BLOWING SNOW':", "-  \telif row[0] == 'CLEAR':", "-  \telif row[0] == 'CLOUDY/OVERCAST':", "-  \telif row[0] == 'FOG/SMOKE/HAZE':", "-  \t  i = 4", "-  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "-  \t  i = 5", "-  \telif row[0] == 'OTHER':", "-  \t  i = 6", "-  \telif row[0] == 'RAIN':", "-  \t  i = 7", "-  \telif row[0] == 'SEVERE CROSS WIND GATE':", "-  \t  i = 8", "-  \telif row[0] == 'SLEET/HAIL':", "-  \t  i = 9", "-  \t  i = 10", "-  #lab3 = get_label2(t2)", "-  plt.subplot(2,1,1)", "-  plt.subplot(2,1,2)", "-  # plt.subplot(3,1,3)", "-  # plt.title('Heatmap of Lighting vs Roadway Surface')", "-  # sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329873.98246 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:38:24 2021 -0600", "msg": "1638329873.98246_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329873.98246 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tlab[i][j] = int(row['tot_sev'])"], "sub": ["-  \tlab[i][j] = row['tot_sev']"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:37:54 2021 -0600", "msg": "1638329873.98246_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tlab[i][j] = int(row['tot_sev'])"], "sub": ["-  \tlab[i][j] = row['tot_sev']"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329821.460609 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:37:31 2021 -0600", "msg": "1638329821.460609_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329821.460609 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  return lab", "+", "+def get_label3(g_df):", "+  lab = []", "+  for i in range(5):", "+  \tlab.append([0] * 6)", "+  for index, row in g_df.iterrows():", "+  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "+  \t  i = 0", "+  \telif row[0] == 'BLOWING SNOW':", "+  \t  i = 1", "+  \telif row[0] == 'CLEAR':", "+  \t  i = 2", "+  \telif row[0] == 'CLOUDY/OVERCAST':", "+  \t  i = 3", "+  \telif row[0] == 'FOG/SMOKE/HAZE':", "+  \t  i = 4", "+  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "+  \t  i = 5", "+  \telif row[0] == 'OTHER':", "+  \t  i = 6", "+  \telif row[0] == 'RAIN':", "+  \t  i = 7", "+  \telif row[0] == 'SEVERE CROSS WIND GATE':", "+  \t  i = 8", "+  \telif row[0] == 'SLEET/HAIL':", "+  \t  i = 9", "+  \telse:", "+  \t  i = 10", "+  \tif row[1] == 'DRY':", "+  \t  j = 0", "+  \telif row[1] == 'ICE':", "+  \t  j = 1", "+  \telif row[1] == 'OTHER':", "+  \t  j = 2", "+  \telif row[1] == 'SAND, MUD, DIRT':", "+  \t  j = 3", "+  \telif row[1] == 'SNOW OR SLUSH':", "+  \t  j = 4", "+  \telse:", "+  \t  j = 5", "+  \tlab[i][j] = row['tot_sev']"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:37:01 2021 -0600", "msg": "1638329821.460609_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  return lab", "+", "+def get_label3(g_df):", "+  lab = []", "+  for i in range(5):", "+  \tlab.append([0] * 6)", "+  for index, row in g_df.iterrows():", "+  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "+  \t  i = 0", "+  \telif row[0] == 'BLOWING SNOW':", "+  \t  i = 1", "+  \telif row[0] == 'CLEAR':", "+  \t  i = 2", "+  \telif row[0] == 'CLOUDY/OVERCAST':", "+  \t  i = 3", "+  \telif row[0] == 'FOG/SMOKE/HAZE':", "+  \t  i = 4", "+  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "+  \t  i = 5", "+  \telif row[0] == 'OTHER':", "+  \t  i = 6", "+  \telif row[0] == 'RAIN':", "+  \t  i = 7", "+  \telif row[0] == 'SEVERE CROSS WIND GATE':", "+  \t  i = 8", "+  \telif row[0] == 'SLEET/HAIL':", "+  \t  i = 9", "+  \telse:", "+  \t  i = 10", "+  \tif row[1] == 'DRY':", "+  \t  j = 0", "+  \telif row[1] == 'ICE':", "+  \t  j = 1", "+  \telif row[1] == 'OTHER':", "+  \t  j = 2", "+  \telif row[1] == 'SAND, MUD, DIRT':", "+  \t  j = 3", "+  \telif row[1] == 'SNOW OR SLUSH':", "+  \t  j = 4", "+  \telse:", "+  \t  j = 5", "+  \tlab[i][j] = row['tot_sev']"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329700.492949 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:35:32 2021 -0600", "msg": "1638329700.492949_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638329700.492949 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def get_label1(g_df):", "+def get_label2(g_df):", "+  lab = []", "+  for i in range(11):", "+  \tlab.append([0] * 6)", "+  for index, row in g_df.iterrows():", "+  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "+  \t  i = 0", "+  \telif row[0] == 'BLOWING SNOW':", "+  \t  i = 1", "+  \telif row[0] == 'CLEAR':", "+  \t  i = 2", "+  \telif row[0] == 'CLOUDY/OVERCAST':", "+  \t  i = 3", "+  \telif row[0] == 'FOG/SMOKE/HAZE':", "+  \t  i = 4", "+  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "+  \t  i = 5", "+  \telif row[0] == 'OTHER':", "+  \t  i = 6", "+  \telif row[0] == 'RAIN':", "+  \t  i = 7", "+  \telif row[0] == 'SEVERE CROSS WIND GATE':", "+  \t  i = 8", "+  \telif row[0] == 'SLEET/HAIL':", "+  \t  i = 9", "+  \telse:", "+  \t  i = 10", "+  \tif row[1] == 'DRY':", "+  \t  j = 0", "+  \telif row[1] == 'ICE':", "+  \t  j = 1", "+  \telif row[1] == 'OTHER':", "+  \t  j = 2", "+  \telif row[1] == 'SAND, MUD, DIRT':", "+  \t  j = 3", "+  \telif row[1] == 'SNOW OR SLUSH':", "+  \t  j = 4", "+  \telse:", "+  \t  j = 5", "+  \tlab[i][j] = row['tot_sev']", "+", "+  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  lab1 = get_label1(t)", "+  lab2 = get_label2(t1)", "+  #lab3 = get_label2(t2)", "+  plt.subplot(2,1,1)", "+  sns.heatmap(lab1, annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "+  plt.subplot(2,1,2)", "+  sns.heatmap(lab2, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "+  # plt.subplot(3,1,3)", "+  # plt.title('Heatmap of Lighting vs Roadway Surface')", "+  # sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-def get_label(g_df):", "-  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  lab1 = get_label(t)", "-  lab2 = get_label(t1)", "-  lab3 = get_label(t2)", "-  plt.subplot(3,1,1)", "-  sns.heatmap(lab1,annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "-  plt.subplot(3,1,2)", "-  sns.heatmap(lab2,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "-  plt.subplot(3,1,3)", "-  plt.title('Heatmap of Lighting vs Roadway Surface')", "-  sns.heatmap(lab3,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:35:00 2021 -0600", "msg": "1638329700.492949_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def get_label1(g_df):", "+def get_label2(g_df):", "+  lab = []", "+  for i in range(11):", "+  \tlab.append([0] * 6)", "+  for index, row in g_df.iterrows():", "+  \tif row[0] == 'BLOWING SAND, SOIL, DIRT':", "+  \t  i = 0", "+  \telif row[0] == 'BLOWING SNOW':", "+  \t  i = 1", "+  \telif row[0] == 'CLEAR':", "+  \t  i = 2", "+  \telif row[0] == 'CLOUDY/OVERCAST':", "+  \t  i = 3", "+  \telif row[0] == 'FOG/SMOKE/HAZE':", "+  \t  i = 4", "+  \telif row[0] == 'FREEZING RAIN/DRIZZLE':", "+  \t  i = 5", "+  \telif row[0] == 'OTHER':", "+  \t  i = 6", "+  \telif row[0] == 'RAIN':", "+  \t  i = 7", "+  \telif row[0] == 'SEVERE CROSS WIND GATE':", "+  \t  i = 8", "+  \telif row[0] == 'SLEET/HAIL':", "+  \t  i = 9", "+  \telse:", "+  \t  i = 10", "+  \tif row[1] == 'DRY':", "+  \t  j = 0", "+  \telif row[1] == 'ICE':", "+  \t  j = 1", "+  \telif row[1] == 'OTHER':", "+  \t  j = 2", "+  \telif row[1] == 'SAND, MUD, DIRT':", "+  \t  j = 3", "+  \telif row[1] == 'SNOW OR SLUSH':", "+  \t  j = 4", "+  \telse:", "+  \t  j = 5", "+  \tlab[i][j] = row['tot_sev']", "+", "+  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].mean().to_frame(name = 'tot_sev').reset_index()", "+  lab1 = get_label1(t)", "+  lab2 = get_label2(t1)", "+  #lab3 = get_label2(t2)", "+  plt.subplot(2,1,1)", "+  sns.heatmap(lab1, annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "+  plt.subplot(2,1,2)", "+  sns.heatmap(lab2, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "+  # plt.subplot(3,1,3)", "+  # plt.title('Heatmap of Lighting vs Roadway Surface')", "+  # sns.heatmap(lab3, annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-def get_label(g_df):", "-  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-  lab1 = get_label(t)", "-  lab2 = get_label(t1)", "-  lab3 = get_label(t2)", "-  plt.subplot(3,1,1)", "-  sns.heatmap(lab1,annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "-  plt.subplot(3,1,2)", "-  sns.heatmap(lab2,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "-  plt.subplot(3,1,3)", "-  plt.title('Heatmap of Lighting vs Roadway Surface')", "-  sns.heatmap(lab3,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328591.759402 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:17:04 2021 -0600", "msg": "1638328591.759402_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328591.759402 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+import seaborn as sns"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:16:31 2021 -0600", "msg": "1638328591.759402_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+import seaborn as sns"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328547.954017 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:16:17 2021 -0600", "msg": "1638328547.954017_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328547.954017 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  lab1 = get_label(t)", "+  lab2 = get_label(t1)", "+  lab3 = get_label(t2)", "+", "+  weather_label = ['BLOWING SAND, SOIL, DIRT', 'BLOWING SNOW', 'CLEAR', 'CLOUDY, OVERCAST', 'FOG/SMOKE/HAZE', \\", "+  'FREEZING RAIN/DRIZZLE', 'OTHER', 'RAIN', 'SEVERE CROSS WIND GATE', 'SLEET/HAIL', 'SNOW']", "+  light_label = ['DARKNESS', 'DARKNESS, LIGHTED ROAD', 'DAWN', 'DAYLIGHT', 'DUSK']", "+  road_label = ['DRY', 'ICE', 'OTHER', 'SAND, MUD, DIRT', 'SNOW OR SLUSH', 'WET']", "+", "+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(lab1,annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(lab2,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(lab3,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-  # lab1 = get_label(t)", "-  # lab2 = get_label(t1)", "-  # lab3 = get_label(t2)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:15:48 2021 -0600", "msg": "1638328547.954017_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  lab1 = get_label(t)", "+  lab2 = get_label(t1)", "+  lab3 = get_label(t2)", "+", "+  weather_label = ['BLOWING SAND, SOIL, DIRT', 'BLOWING SNOW', 'CLEAR', 'CLOUDY, OVERCAST', 'FOG/SMOKE/HAZE', \\", "+  'FREEZING RAIN/DRIZZLE', 'OTHER', 'RAIN', 'SEVERE CROSS WIND GATE', 'SLEET/HAIL', 'SNOW']", "+  light_label = ['DARKNESS', 'DARKNESS, LIGHTED ROAD', 'DAWN', 'DAYLIGHT', 'DUSK']", "+  road_label = ['DRY', 'ICE', 'OTHER', 'SAND, MUD, DIRT', 'SNOW OR SLUSH', 'WET']", "+", "+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(lab1,annot=True, fmt=\"d\", xticklabels = light_label, yticklabels = weather_label)", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(lab2,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = weather_label)", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(lab3,annot=True, fmt=\"d\", xticklabels = road_label, yticklabels = light_label)"], "sub": ["-  # lab1 = get_label(t)", "-  # lab2 = get_label(t1)", "-  # lab3 = get_label(t2)"]}, {"files": "diff --git a/explore/plot_3.png b/explore/plot_3.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328361.6508741 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:13:10 2021 -0600", "msg": "1638328361.6508741_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638328361.6508741 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def score(df):", "+  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  score = [500, 10, 25, 5, 0]", "+  sev = 0", "+  for i in range(len(col)):", "+    sev += df[col[i]] * score[i]", "+  return sev", "+", "+  # lab1 = get_label(t)", "+  # lab2 = get_label(t1)", "+  # lab3 = get_label(t2)"], "sub": ["-  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING',\\", "-  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "-  score = [100, 50, 25, 10, 0]", "-  lab1 = get_label(t)", "-  lab2 = get_label(t1)", "-  lab3 = get_label(t2)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:12:41 2021 -0600", "msg": "1638328361.6508741_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def score(df):", "+  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  score = [500, 10, 25, 5, 0]", "+  sev = 0", "+  for i in range(len(col)):", "+    sev += df[col[i]] * score[i]", "+  return sev", "+", "+  # lab1 = get_label(t)", "+  # lab2 = get_label(t1)", "+  # lab3 = get_label(t2)"], "sub": ["-  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING',\\", "-  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "-  score = [100, 50, 25, 10, 0]", "-  lab1 = get_label(t)", "-  lab2 = get_label(t1)", "-  lab3 = get_label(t2)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327414.7231748 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 21:01:47 2021 -0600", "msg": "1638327414.7231748_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327414.7231748 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  lab = []", "+  r = []", "+  for index, row in g_df.iterrows():", "+    if index == 0:", "+      lab.append([0,0,0,int(row['tot_sev']),0])", "+    if index == 1:", "+      r = [int(row['tot_sev'])]", "+    elif index %5 == 1:", "+      lab.append(r)", "+      r = [int(row['tot_sev'])]", "+    else:", "+      r.append(int(row['tot_sev']))", "+  lab.append(r)", "+  return lab"], "sub": ["-\tlab = []", "-\tr = []", "-\tfor index, row in g_df.iterrows():", "-  \t\tif index == 0:", "-  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t\tif index == 1:", "-  \t\t\tr = [int(row['tot_sev'])]", "-\t\telif index %5 == 1:", "-\t\t\tlab.append(r)", "-\t\t\tr = [int(row['tot_sev'])]", "-\t\telse:", "-\t\t\tr.append(int(row['tot_sev']))", "-\t\tlab.append(r)", "-\treturn lab"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:56:54 2021 -0600", "msg": "1638327414.7231748_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  lab = []", "+  r = []", "+  for index, row in g_df.iterrows():", "+    if index == 0:", "+      lab.append([0,0,0,int(row['tot_sev']),0])", "+    if index == 1:", "+      r = [int(row['tot_sev'])]", "+    elif index %5 == 1:", "+      lab.append(r)", "+      r = [int(row['tot_sev'])]", "+    else:", "+      r.append(int(row['tot_sev']))", "+  lab.append(r)", "+  return lab"], "sub": ["-\tlab = []", "-\tr = []", "-\tfor index, row in g_df.iterrows():", "-  \t\tif index == 0:", "-  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t\tif index == 1:", "-  \t\t\tr = [int(row['tot_sev'])]", "-\t\telif index %5 == 1:", "-\t\t\tlab.append(r)", "-\t\t\tr = [int(row['tot_sev'])]", "-\t\telse:", "-\t\t\tr.append(int(row['tot_sev']))", "-\t\tlab.append(r)", "-\treturn lab"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327296.614485 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:54:56 2021 -0600", "msg": "1638327296.614485_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327296.614485 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+\tlab = []", "+\tr = []", "+\tfor index, row in g_df.iterrows():", "+  \t\tif index == 0:", "+  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t\tif index == 1:", "+  \t\t\tr = [int(row['tot_sev'])]", "+\t\telif index %5 == 1:", "+\t\t\tlab.append(r)", "+\t\t\tr = [int(row['tot_sev'])]", "+\t\telse:", "+\t\t\tr.append(int(row['tot_sev']))", "+\t\tlab.append(r)", "+\treturn lab", "+", "+"], "sub": ["-  lab = []", "-  r = []", "-  for index, row in g_df.iterrows():", "-  \tif index == 0:", "-  \t  lab.append([0,0,0,int(row['tot_sev']),0])", "-  \tif index == 1:", "-\t  r = [int(row['tot_sev'])]", "-\telif index %5 == 1:", "-\t  lab.append(r)", "-\t  r = [int(row['tot_sev'])]", "-\telse:", "-\t  r.append(int(row['tot_sev']))", "-\t#print(r)", "-  lab.append(r)", "-  return lab"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:54:56 2021 -0600", "msg": "1638327296.614485_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+\tlab = []", "+\tr = []", "+\tfor index, row in g_df.iterrows():", "+  \t\tif index == 0:", "+  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t\tif index == 1:", "+  \t\t\tr = [int(row['tot_sev'])]", "+\t\telif index %5 == 1:", "+\t\t\tlab.append(r)", "+\t\t\tr = [int(row['tot_sev'])]", "+\t\telse:", "+\t\t\tr.append(int(row['tot_sev']))", "+\t\tlab.append(r)", "+\treturn lab", "+", "+"], "sub": ["-  lab = []", "-  r = []", "-  for index, row in g_df.iterrows():", "-  \tif index == 0:", "-  \t  lab.append([0,0,0,int(row['tot_sev']),0])", "-  \tif index == 1:", "-\t  r = [int(row['tot_sev'])]", "-\telif index %5 == 1:", "-\t  lab.append(r)", "-\t  r = [int(row['tot_sev'])]", "-\telse:", "-\t  r.append(int(row['tot_sev']))", "-\t#print(r)", "-  lab.append(r)", "-  return lab"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327246.694301 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:54:06 2021 -0600", "msg": "1638327246.694301_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327246.694301 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def get_label(g_df):", "+  lab = []", "+  r = []", "+  for index, row in g_df.iterrows():", "+  \tif index == 0:", "+  \t  lab.append([0,0,0,int(row['tot_sev']),0])", "+  \tif index == 1:", "+\t  r = [int(row['tot_sev'])]", "+\telif index %5 == 1:", "+\t  lab.append(r)", "+\t  r = [int(row['tot_sev'])]", "+\telse:", "+\t  r.append(int(row['tot_sev']))", "+\t#print(r)", "+  lab.append(r)", "+  return lab", "+"], "sub": ["-", "-  def get_label(g_df):", "-  \tlab = []", "-  \tr = []", "-  \tfor index, row in g_df.iterrows():", "-  \t  if index == 0:", "-  \t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t  if index == 1:", "-\t\tr = [int(row['tot_sev'])]", "-\t  elif index %5 == 1:", "-\t    lab.append(r)", "-\t\tr = [int(row['tot_sev'])]", "-\t  else:", "-\t\tr.append(int(row['tot_sev']))", "-\t#print(r)", "-\tlab.append(r)", "-\treturn lab"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:54:06 2021 -0600", "msg": "1638327246.694301_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+def get_label(g_df):", "+  lab = []", "+  r = []", "+  for index, row in g_df.iterrows():", "+  \tif index == 0:", "+  \t  lab.append([0,0,0,int(row['tot_sev']),0])", "+  \tif index == 1:", "+\t  r = [int(row['tot_sev'])]", "+\telif index %5 == 1:", "+\t  lab.append(r)", "+\t  r = [int(row['tot_sev'])]", "+\telse:", "+\t  r.append(int(row['tot_sev']))", "+\t#print(r)", "+  lab.append(r)", "+  return lab", "+"], "sub": ["-", "-  def get_label(g_df):", "-  \tlab = []", "-  \tr = []", "-  \tfor index, row in g_df.iterrows():", "-  \t  if index == 0:", "-  \t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t  if index == 1:", "-\t\tr = [int(row['tot_sev'])]", "-\t  elif index %5 == 1:", "-\t    lab.append(r)", "-\t\tr = [int(row['tot_sev'])]", "-\t  else:", "-\t\tr.append(int(row['tot_sev']))", "-\t#print(r)", "-\tlab.append(r)", "-\treturn lab"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327169.1140769 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:52:49 2021 -0600", "msg": "1638327169.1140769_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327169.1140769 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \t  if index == 0:", "+  \t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t  if index == 1:", "+\t\tr = [int(row['tot_sev'])]", "+\t  elif index %5 == 1:", "+\t    lab.append(r)", "+\t\tr = [int(row['tot_sev'])]", "+\t  else:", "+\t\tr.append(int(row['tot_sev']))"], "sub": ["-  \t\tif index == 0:", "-  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t\tif index == 1:", "-\t\t    r = [int(row['tot_sev'])]", "-\t\telif index %5 == 1:", "-\t\t    lab.append(r)", "-\t\t    r = [int(row['tot_sev'])]", "-\t\telse:", "-\t\t    r.append(int(row['tot_sev']))"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:52:49 2021 -0600", "msg": "1638327169.1140769_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \t  if index == 0:", "+  \t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t  if index == 1:", "+\t\tr = [int(row['tot_sev'])]", "+\t  elif index %5 == 1:", "+\t    lab.append(r)", "+\t\tr = [int(row['tot_sev'])]", "+\t  else:", "+\t\tr.append(int(row['tot_sev']))"], "sub": ["-  \t\tif index == 0:", "-  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "-  \t\tif index == 1:", "-\t\t    r = [int(row['tot_sev'])]", "-\t\telif index %5 == 1:", "-\t\t    lab.append(r)", "-\t\t    r = [int(row['tot_sev'])]", "-\t\telse:", "-\t\t    r.append(int(row['tot_sev']))"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327142.6354702 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:52:22 2021 -0600", "msg": "1638327142.6354702_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327142.6354702 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING',\\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  score = [100, 50, 25, 10, 0]", "+  df['sev'] = df.apply(score, axis = 1)", "+  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  def get_label(g_df):", "+  \tlab = []", "+  \tr = []", "+  \tfor index, row in g_df.iterrows():", "+  \t\tif index == 0:", "+  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t\tif index == 1:", "+\t\t    r = [int(row['tot_sev'])]", "+\t\telif index %5 == 1:", "+\t\t    lab.append(r)", "+\t\t    r = [int(row['tot_sev'])]", "+\t\telse:", "+\t\t    r.append(int(row['tot_sev']))", "+\tlab.append(r)", "+\treturn lab", "+  lab1 = get_label(t)", "+  lab2 = get_label(t1)", "+  lab3 = get_label(t2)", "+  return None"], "sub": ["-  \tcol = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "-  \t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "-\tscore = [100, 50, 25, 10, 0]", "-\tdf['sev'] = df.apply(score, axis = 1)", "-\tt = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tt1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tt2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tdef get_label(g_df):", "-\t  \tlab = []", "-\t  \tr = []", "-\t  \tfor index, row in g_df.iterrows():", "-\t  \t\tif index == 0:", "-\t\t    \tlab.append([0,0,0,int(row['tot_sev']),0])", "-\t\t  \tif index == 1:", "-\t\t    \tr = [int(row['tot_sev'])]", "-\t\t  \telif index %5 == 1:", "-\t\t    \tlab.append(r)", "-\t\t    \tr = [int(row['tot_sev'])]", "-\t\t  \telse:", "-\t\t    \tr.append(int(row['tot_sev']))", "-\t\tlab.append(r)", "-\t\treturn lab", "-\tlab1 = get_label(t)", "-\tlab2 = get_label(t1)", "-\tlab3 = get_label(t2)", "-", "-\treturn None"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:52:22 2021 -0600", "msg": "1638327142.6354702_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  col = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING',\\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  score = [100, 50, 25, 10, 0]", "+  df['sev'] = df.apply(score, axis = 1)", "+  t = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  t1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  t2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+  def get_label(g_df):", "+  \tlab = []", "+  \tr = []", "+  \tfor index, row in g_df.iterrows():", "+  \t\tif index == 0:", "+  \t\t\tlab.append([0,0,0,int(row['tot_sev']),0])", "+  \t\tif index == 1:", "+\t\t    r = [int(row['tot_sev'])]", "+\t\telif index %5 == 1:", "+\t\t    lab.append(r)", "+\t\t    r = [int(row['tot_sev'])]", "+\t\telse:", "+\t\t    r.append(int(row['tot_sev']))", "+\tlab.append(r)", "+\treturn lab", "+  lab1 = get_label(t)", "+  lab2 = get_label(t1)", "+  lab3 = get_label(t2)", "+  return None"], "sub": ["-  \tcol = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "-  \t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "-\tscore = [100, 50, 25, 10, 0]", "-\tdf['sev'] = df.apply(score, axis = 1)", "-\tt = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tt1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tt2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "-\tdef get_label(g_df):", "-\t  \tlab = []", "-\t  \tr = []", "-\t  \tfor index, row in g_df.iterrows():", "-\t  \t\tif index == 0:", "-\t\t    \tlab.append([0,0,0,int(row['tot_sev']),0])", "-\t\t  \tif index == 1:", "-\t\t    \tr = [int(row['tot_sev'])]", "-\t\t  \telif index %5 == 1:", "-\t\t    \tlab.append(r)", "-\t\t    \tr = [int(row['tot_sev'])]", "-\t\t  \telse:", "-\t\t    \tr.append(int(row['tot_sev']))", "-\t\tlab.append(r)", "-\t\treturn lab", "-\tlab1 = get_label(t)", "-\tlab2 = get_label(t1)", "-\tlab3 = get_label(t2)", "-", "-\treturn None"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327056.586237 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:50:56 2021 -0600", "msg": "1638327056.586237_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327056.586237 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']"], "sub": ["-\t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:50:56 2021 -0600", "msg": "1638327056.586237_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']"], "sub": ["-\t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327036.664448 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:50:36 2021 -0600", "msg": "1638327036.664448_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_3.py , True, 1638327036.664448 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tcol = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+\t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+\tscore = [100, 50, 25, 10, 0]", "+\tdf['sev'] = df.apply(score, axis = 1)", "+\tt = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tt1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tt2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tdef get_label(g_df):", "+\t  \tlab = []", "+\t  \tr = []", "+\t  \tfor index, row in g_df.iterrows():", "+\t  \t\tif index == 0:", "+\t\t    \tlab.append([0,0,0,int(row['tot_sev']),0])", "+\t\t  \tif index == 1:", "+\t\t    \tr = [int(row['tot_sev'])]", "+\t\t  \telif index %5 == 1:", "+\t\t    \tlab.append(r)", "+\t\t    \tr = [int(row['tot_sev'])]", "+\t\t  \telse:", "+\t\t    \tr.append(int(row['tot_sev']))", "+\t#print(r)", "+\t\tlab.append(r)", "+\t\treturn lab", "+\tlab1 = get_label(t)", "+\tlab2 = get_label(t1)", "+\tlab3 = get_label(t2)", "+", "+\treturn None"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 20:50:36 2021 -0600", "msg": "1638327036.664448_start"}, {"diffs": [{"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+  \tcol = ['INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+\t'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+\tscore = [100, 50, 25, 10, 0]", "+\tdf['sev'] = df.apply(score, axis = 1)", "+\tt = df.groupby(['WEATHER_CONDITION','LIGHTING_CONDITION'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tt1 = df.groupby(['WEATHER_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tt2 = df.groupby(['LIGHTING_CONDITION','ROADWAY_SURFACE_COND'])['sev'].sum().to_frame(name = 'tot_sev').reset_index()", "+\tdef get_label(g_df):", "+\t  \tlab = []", "+\t  \tr = []", "+\t  \tfor index, row in g_df.iterrows():", "+\t  \t\tif index == 0:", "+\t\t    \tlab.append([0,0,0,int(row['tot_sev']),0])", "+\t\t  \tif index == 1:", "+\t\t    \tr = [int(row['tot_sev'])]", "+\t\t  \telif index %5 == 1:", "+\t\t    \tlab.append(r)", "+\t\t    \tr = [int(row['tot_sev'])]", "+\t\t  \telse:", "+\t\t    \tr.append(int(row['tot_sev']))", "+\t#print(r)", "+\t\tlab.append(r)", "+\t\treturn lab", "+\tlab1 = get_label(t)", "+\tlab2 = get_label(t1)", "+\tlab3 = get_label(t2)", "+", "+\treturn None"], "sub": ["-  plt.scatter(df['A'],df['B'])", "-  return None"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638320139.728102 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:55:42 2021 -0600", "msg": "1638320139.728102_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638320139.728102 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], c = new_df['COUNTS'], s = new_df['COUNTS']/100)", "+  plt.colorbar()"], "sub": ["-  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], s = new_df['COUNTS']/100)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:55:39 2021 -0600", "msg": "1638320139.728102_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], c = new_df['COUNTS'], s = new_df['COUNTS']/100)", "+  plt.colorbar()"], "sub": ["-  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], s = new_df['COUNTS']/100)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638319829.4592562 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:50:32 2021 -0600", "msg": "1638319829.4592562_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638319829.4592562 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(column)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:50:29 2021 -0600", "msg": "1638319829.4592562_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(column)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638319778.068631 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:49:41 2021 -0600", "msg": "1638319778.068631_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638319778.068631 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def plot2(df):", "+  col = ['INJURIES_TOTAL', 'INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  for column in col:", "+    print(df[column].value_counts())", "+    df = load('clean.csv')", "+    plot2(df)", "+    # df = df.drop(df[(df['LONGITUDE'] == 0)].index)", "+    # print(df[df['LONGITUDE'] == 0])"], "sub": ["-", "-    df = load('data_2.csv')", "-    df = df.drop(df[(df['LONGITUDE'] == 0)].index)", "-    print(df[df['LONGITUDE'] == 0])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:49:38 2021 -0600", "msg": "1638319778.068631_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+def plot2(df):", "+  col = ['INJURIES_TOTAL', 'INJURIES_FATAL', 'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', \\", "+  'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION']", "+  for column in col:", "+    print(df[column].value_counts())", "+    df = load('clean.csv')", "+    plot2(df)", "+    # df = df.drop(df[(df['LONGITUDE'] == 0)].index)", "+    # print(df[df['LONGITUDE'] == 0])"], "sub": ["-", "-    df = load('data_2.csv')", "-    df = df.drop(df[(df['LONGITUDE'] == 0)].index)", "-    print(df[df['LONGITUDE'] == 0])"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638319165.6666849 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:39:29 2021 -0600", "msg": "1638319165.6666849_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , True, 1638319165.6666849 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  df = df[['BEAT_OF_OCCURRENCE', 'LONGITUDE', 'LATITUDE']]", "+  new_df = df.groupby('BEAT_OF_OCCURRENCE').mean()", "+  new_df['COUNTS'] = df['BEAT_OF_OCCURRENCE'].value_counts()", "+  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], s = new_df['COUNTS']/100)", "+  plt.text(-87.6237,41.8796,'AIC')", "+  plt.text(-87.904724, 41.978611, 'OHARE')", "+  plt.text(-87.599724, 41.7886,'UCHICAGO')", "+  plt.text(-87.7522, 41.7868, 'MDW')", "+"], "sub": ["-  plt.scatter(x=df['LONGITUDE'], y=df['LATITUDE'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 18:39:25 2021 -0600", "msg": "1638319165.6666849_start"}, {"diffs": [{"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  df = df[['BEAT_OF_OCCURRENCE', 'LONGITUDE', 'LATITUDE']]", "+  new_df = df.groupby('BEAT_OF_OCCURRENCE').mean()", "+  new_df['COUNTS'] = df['BEAT_OF_OCCURRENCE'].value_counts()", "+  plt.scatter(x=new_df['LONGITUDE'], y=new_df['LATITUDE'], s = new_df['COUNTS']/100)", "+  plt.text(-87.6237,41.8796,'AIC')", "+  plt.text(-87.904724, 41.978611, 'OHARE')", "+  plt.text(-87.599724, 41.7886,'UCHICAGO')", "+  plt.text(-87.7522, 41.7868, 'MDW')", "+"], "sub": ["-  plt.scatter(x=df['LONGITUDE'], y=df['LATITUDE'])"]}, {"files": "diff --git a/explore/plot_4.png b/explore/plot_4.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638315451.042254 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:37:35 2021 -0600", "msg": "1638315451.042254_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_4.py , False, 1638315451.042254 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638315437.283819 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:37:23 2021 -0600", "msg": "1638315437.283819_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , False, 1638315437.283819 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.p , False, 1638315430.8134289 , error_code: 2"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:37:10 2021 -0600", "msg": "1638315430.8134289_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.p , False, 1638315430.8134289 , error_code: 2"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+  plt.scatter(x=df['LONGITUDE'], y=df['LATITUDE'])"], "sub": ["-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638315264.707144 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:36:30 2021 -0600", "msg": "1638315264.707144_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638315264.707144 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df = df.drop(df[(df['LONGITUDE'] == 0)].index)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:34:24 2021 -0600", "msg": "1638315264.707144_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df = df.drop(df[(df['LONGITUDE'] == 0)].index)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638315065.517956 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:31:08 2021 -0600", "msg": "1638315065.517956_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638315065.517956 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = df.drop(df[(df['LONGITUDE'] == 0)].index)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:31:05 2021 -0600", "msg": "1638315065.517956_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = df.drop(df[(df['LONGITUDE'] == 0)].index)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638315011.95838 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:30:14 2021 -0600", "msg": "1638315011.95838_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638315011.95838 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638315000.268746 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:30:02 2021 -0600", "msg": "1638315000.268746_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638315000.268746 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314986.0282722 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:29:48 2021 -0600", "msg": "1638314986.0282722_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314986.0282722 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df[df['LONGITUDE'] == 0])", "+    #clean(df)"], "sub": ["-    clean(df)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:29:46 2021 -0600", "msg": "1638314986.0282722_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df[df['LONGITUDE'] == 0])", "+    #clean(df)"], "sub": ["-    clean(df)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314944.777535 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:29:07 2021 -0600", "msg": "1638314944.777535_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314944.777535 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH', 'LONGITUDE', 'LATITUDE']:"], "sub": ["-  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']:"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:29:04 2021 -0600", "msg": "1638314944.777535_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH', 'LONGITUDE', 'LATITUDE']:"], "sub": ["-  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']:"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314921.1588101 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:28:44 2021 -0600", "msg": "1638314921.1588101_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314921.1588101 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    clean(df)"], "sub": ["-    df = load('clean.csv')", "-    plot(df)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:28:41 2021 -0600", "msg": "1638314921.1588101_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    clean(df)"], "sub": ["-    df = load('clean.csv')", "-    plot(df)"]}, {"files": "diff --git a/explore/plot_2.png b/explore/plot_2.png", "add": [], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638314411.585988 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:20:16 2021 -0600", "msg": "1638314411.585988_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+plot_2.py , True, 1638314411.585988 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+import seaborn as sns", "+", "+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(df.LIGHTING_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  #plt.show()"], "sub": ["-", "-  plt.scatter(df['A'],df['B'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:20:11 2021 -0600", "msg": "1638314411.585988_start"}, {"diffs": [{"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+import seaborn as sns", "+", "+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(df.LIGHTING_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  #plt.show()"], "sub": ["-", "-  plt.scatter(df['A'],df['B'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314343.9281468 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:19:08 2021 -0600", "msg": "1638314343.9281468_end"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  sns.heatmap(pd.crosstab(df.LIGHTING_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  #plt.show()"], "sub": ["-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "-  sns.heatmap(pd.crosstab(test.LIGHTING_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "-  plt.show()"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:19:03 2021 -0600", "msg": "1638314343.9281468_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  sns.heatmap(pd.crosstab(df.LIGHTING_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  #plt.show()"], "sub": ["-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "-  sns.heatmap(pd.crosstab(test.LIGHTING_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "-  plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314317.06319 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:18:41 2021 -0600", "msg": "1638314317.06319_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638314317.06319 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(test.LIGHTING_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.show()"], "sub": ["-  fig, (ax, ax2) = plt.subplots(ncols = 2)", "-  fig.subplots_adjust(wspace = 0.01)", "-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "-  fig.colorbar(ax.collections[0], ax = ax, location = \"left\", use_gridspec = False, pad = 0.2)", "-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)", "-  fig.colorbar(ax2.collections[0], ax = ax2, location = \"right\", use_gridspec = False, pad = 0.2)", "-  ax2.yaxis.tick_right()", "-  ax2.tick_params(rotation = 0)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:18:37 2021 -0600", "msg": "1638314317.06319_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  plt.figure(figsize=(30, 30))", "+  # plt.subplots_adjust(hspace = 1)", "+  plt.subplot(3,1,1)", "+  plt.title('Heatmap of Weather vs Lighting')", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,2)", "+  plt.title('Heatmap of Weather vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.subplot(3,1,3)", "+  plt.title('Heatmap of Lighting vs Roadway Surface')", "+  sns.heatmap(pd.crosstab(test.LIGHTING_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\")", "+  plt.show()"], "sub": ["-  fig, (ax, ax2) = plt.subplots(ncols = 2)", "-  fig.subplots_adjust(wspace = 0.01)", "-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "-  fig.colorbar(ax.collections[0], ax = ax, location = \"left\", use_gridspec = False, pad = 0.2)", "-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)", "-  fig.colorbar(ax2.collections[0], ax = ax2, location = \"right\", use_gridspec = False, pad = 0.2)", "-  ax2.yaxis.tick_right()", "-  ax2.tick_params(rotation = 0)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638313873.0243251 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:11:17 2021 -0600", "msg": "1638313873.0243251_end"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  plt.savefig('test.png')", "+  #plt.show()", "+"], "sub": ["-  plt.show()", "-    plt.savefig('test.png')"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:11:13 2021 -0600", "msg": "1638313873.0243251_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  plt.savefig('test.png')", "+  #plt.show()", "+"], "sub": ["-  plt.show()", "-    plt.savefig('test.png')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638313837.055905 , error_code: -11"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:10:40 2021 -0600", "msg": "1638313837.055905_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638313837.055905 , error_code: -11"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)"], "sub": ["-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:10:37 2021 -0600", "msg": "1638313837.055905_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)"], "sub": ["-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "-  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638313808.615811 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:10:13 2021 -0600", "msg": "1638313808.615811_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638313808.615811 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  fig, (ax, ax2) = plt.subplots(ncols = 2)", "+  fig.subplots_adjust(wspace = 0.01)", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "+  fig.colorbar(ax.collections[0], ax = ax, location = \"left\", use_gridspec = False, pad = 0.2)", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)", "+  fig.colorbar(ax2.collections[0], ax = ax2, location = \"right\", use_gridspec = False, pad = 0.2)", "+  ax2.yaxis.tick_right()", "+  ax2.tick_params(rotation = 0)", "+  plt.show()"], "sub": ["-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 17:10:08 2021 -0600", "msg": "1638313808.615811_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  fig, (ax, ax2) = plt.subplots(ncols = 2)", "+  fig.subplots_adjust(wspace = 0.01)", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.LIGHTING_CONDITION),annot=True, fmt=\"d\",ax = ax)", "+  fig.colorbar(ax.collections[0], ax = ax, location = \"left\", use_gridspec = False, pad = 0.2)", "+  sns.heatmap(pd.crosstab(test.WEATHER_CONDITION, test.ROADWAY_SURFACE_COND),annot=True, fmt=\"d\", ax = ax2)", "+  fig.colorbar(ax2.collections[0], ax = ax2, location = \"right\", use_gridspec = False, pad = 0.2)", "+  ax2.yaxis.tick_right()", "+  ax2.tick_params(rotation = 0)", "+  plt.show()"], "sub": ["-  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638308477.598033 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:41:21 2021 -0600", "msg": "1638308477.598033_end"}, {"diffs": [{"files": "diff --git a/explore/test.png b/explore/test.png", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.savefig('test.png')"], "sub": ["-    plt.show()"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:41:17 2021 -0600", "msg": "1638308477.598033_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plt.savefig('test.png')"], "sub": ["-    plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638308425.810893 , error_code: -11"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:40:30 2021 -0600", "msg": "1638308425.810893_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638308425.810893 , error_code: -11"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plot(df)"], "sub": ["-    plot(cdf)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:40:25 2021 -0600", "msg": "1638308425.810893_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    plot(df)"], "sub": ["-    plot(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638308416.5922492 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:40:19 2021 -0600", "msg": "1638308416.5922492_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638308416.5922492 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  import seaborn as sns", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+    # for column in df.columns:", "+    #   print('Column: ', column)", "+    #   print('Missing Values -',df[column].isna().sum())", "+    #   print('---')", "+    # print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+    # print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+    # print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+    # print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+    # print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "+    # print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))", "+    plot(cdf)", "+    plt.show()"], "sub": ["-", "-  plt.scatter(df['A'],df['B'])", "-    for column in df.columns:", "-      print('Column: ', column)", "-      print('Missing Values -',df[column].isna().sum())", "-      print('---')", "-    print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "-    print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "-    print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "-    print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "-    print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "-    print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))", "-    # plot(cdf)", "-    # plt.show()"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 15:40:16 2021 -0600", "msg": "1638308416.5922492_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  import seaborn as sns", "+  sns.heatmap(pd.crosstab(df.WEATHER_CONDITION, df.LIGHTING_CONDITION),annot=True, fmt=\"d\")", "+    # for column in df.columns:", "+    #   print('Column: ', column)", "+    #   print('Missing Values -',df[column].isna().sum())", "+    #   print('---')", "+    # print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+    # print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+    # print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+    # print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+    # print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "+    # print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))", "+    plot(cdf)", "+    plt.show()"], "sub": ["-", "-  plt.scatter(df['A'],df['B'])", "-    for column in df.columns:", "-      print('Column: ', column)", "-      print('Missing Values -',df[column].isna().sum())", "-      print('---')", "-    print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "-    print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "-    print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "-    print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "-    print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "-    print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))", "-    # plot(cdf)", "-    # plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638257504.199726 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:31:47 2021 -0600", "msg": "1638257504.199726_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638257504.199726 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638257390.5990279 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:31:41 2021 -0600", "msg": "1638257390.5990279_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638257390.5990279 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df.dropna()", "+", "+  # print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+  # print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+  # print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+  # print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+  # print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "+  # print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"], "sub": ["-  #df.dropna()", "-", "-  print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "-  print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "-  print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "-  print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "-  print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "-  print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"]}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+    print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+    print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+    print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+    print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "+    print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"], "sub": ["-"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:29:50 2021 -0600", "msg": "1638257390.5990279_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+    print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+    print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+    print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+    print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))", "+    print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"], "sub": ["-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638257327.0408819 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:28:49 2021 -0600", "msg": "1638257327.0408819_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638257327.0408819 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638257218.9098592 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-    df = load('data_2.csv')", "-    #cdf = clean(df)", "-    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "-    for column in df.columns:", "-      print('Column: ', column)", "-      print('Missing Values -',df[column].isna().sum())", "-      print('---')", "-", "-"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:28:43 2021 -0600", "msg": "1638257218.9098592_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": [], "sub": ["-    df = load('data_2.csv')", "-    #cdf = clean(df)", "-    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "-    for column in df.columns:", "-      print('Column: ', column)", "-      print('Missing Values -',df[column].isna().sum())", "-      print('---')", "-", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638257087.8812668 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:24:53 2021 -0600", "msg": "1638257087.8812668_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638257087.8812668 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['MOST_SEVERE_INJURY'] = df['MOST_SEVERE_INJURY'].fillna('NO INDICATION OF INJURY')"], "sub": ["-  df['MOST_SEVERE_INJURY'] = df[MOST_SEVERE_INJURY].fillna('NO INDICATION OF INJURY')"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:24:47 2021 -0600", "msg": "1638257087.8812668_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['MOST_SEVERE_INJURY'] = df['MOST_SEVERE_INJURY'].fillna('NO INDICATION OF INJURY')"], "sub": ["-  df['MOST_SEVERE_INJURY'] = df[MOST_SEVERE_INJURY].fillna('NO INDICATION OF INJURY')"]}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  #df.dropna()", "+"], "sub": ["-", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638256969.885927 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    #cdf = clean(df)", "+    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "+    for column in df.columns:", "+      print('Column: ', column)", "+      print('Missing Values -',df[column].isna().sum())", "+      print('---')", "+", "+", "+"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:24:33 2021 -0600", "msg": "1638256969.885927_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    #cdf = clean(df)", "+    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "+    for column in df.columns:", "+      print('Column: ', column)", "+      print('Missing Values -',df[column].isna().sum())", "+      print('---')", "+", "+", "+"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['MOST_SEVERE_INJURY'] = df[MOST_SEVERE_INJURY].fillna('NO INDICATION OF INJURY')", "+", "+"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:22:49 2021 -0600", "msg": "1638256969.885927_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['MOST_SEVERE_INJURY'] = df[MOST_SEVERE_INJURY].fillna('NO INDICATION OF INJURY')", "+", "+"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256777.18469 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:19:40 2021 -0600", "msg": "1638256777.18469_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256777.18469 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638256660.084245 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # test = df.dropna(subset=['INJURIES_TOTAL'])", "+    # print(test[test['MOST_SEVERE_INJURY'].isnull()])"], "sub": ["-    test = df.dropna(subset=['INJURIES_TOTAL'])", "-    print(test[test['MOST_SEVERE_INJURY'].isnull()])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:19:32 2021 -0600", "msg": "1638256660.084245_end"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    # test = df.dropna(subset=['INJURIES_TOTAL'])", "+    # print(test[test['MOST_SEVERE_INJURY'].isnull()])"], "sub": ["-    test = df.dropna(subset=['INJURIES_TOTAL'])", "-    print(test[test['MOST_SEVERE_INJURY'].isnull()])"]}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df['INJURIES_TOTAL'] = df['INJURIES_TOTAL'].fillna(0)", "+  df['INJURIES_FATAL'] = df['INJURIES_FATAL'].fillna(0)", "+  df['INJURIES_INCAPACITATING'] = df['INJURIES_INCAPACITATING'].fillna(0)", "+  df['INJURIES_NON_INCAPACITATING'] = df['INJURIES_NON_INCAPACITATING'].fillna(0)", "+  df['INJURIES_REPORTED_NOT_EVIDENT'] = df['INJURIES_REPORTED_NOT_EVIDENT'].fillna(0)", "+  df['INJURIES_NO_INDICATION'] = df['INJURIES_NO_INDICATION'].fillna(0)", "+"], "sub": ["-"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:17:40 2021 -0600", "msg": "1638256660.084245_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df['INJURIES_TOTAL'] = df['INJURIES_TOTAL'].fillna(0)", "+  df['INJURIES_FATAL'] = df['INJURIES_FATAL'].fillna(0)", "+  df['INJURIES_INCAPACITATING'] = df['INJURIES_INCAPACITATING'].fillna(0)", "+  df['INJURIES_NON_INCAPACITATING'] = df['INJURIES_NON_INCAPACITATING'].fillna(0)", "+  df['INJURIES_REPORTED_NOT_EVIDENT'] = df['INJURIES_REPORTED_NOT_EVIDENT'].fillna(0)", "+  df['INJURIES_NO_INDICATION'] = df['INJURIES_NO_INDICATION'].fillna(0)", "+"], "sub": ["-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256451.783531 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:14:14 2021 -0600", "msg": "1638256451.783531_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256451.783531 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256440.678988 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:14:04 2021 -0600", "msg": "1638256440.678988_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256440.678988 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256335.3257 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:12:18 2021 -0600", "msg": "1638256335.3257_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256335.3257 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256324.970957 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:12:08 2021 -0600", "msg": "1638256324.970957_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , False, 1638256324.970957 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256311.9797251 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:11:55 2021 -0600", "msg": "1638256311.9797251_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256311.9797251 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('clean.csv')", "+    test = df.dropna(subset=['INJURIES_TOTAL'])", "+    print(test[test['MOST_SEVERE_INJURY'].isnull()])"], "sub": ["-    df = load('data_2.csv')"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:11:52 2021 -0600", "msg": "1638256311.9797251_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('clean.csv')", "+    test = df.dropna(subset=['INJURIES_TOTAL'])", "+    print(test[test['MOST_SEVERE_INJURY'].isnull()])"], "sub": ["-    df = load('data_2.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256190.312638 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:09:53 2021 -0600", "msg": "1638256190.312638_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256190.312638 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    # test = df[df['INJURIES_TOTAL'].isnull()]", "+    # print(test['CRASH_TYPE'])", "+    # print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    df = load('clean.csv')", "-    test = df[df['INJURIES_TOTAL'].isnull()]", "-    print(test['CRASH_TYPE'])", "-    print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:09:50 2021 -0600", "msg": "1638256190.312638_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')", "+    # test = df[df['INJURIES_TOTAL'].isnull()]", "+    # print(test['CRASH_TYPE'])", "+    # print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    df = load('clean.csv')", "-    test = df[df['INJURIES_TOTAL'].isnull()]", "-    print(test['CRASH_TYPE'])", "-    print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256130.072139 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:08:57 2021 -0600", "msg": "1638256130.072139_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256130.072139 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test['CRASH_TYPE'])", "+    print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    print(test['FIRST_CRASH_TYPE'])", "-    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY']['FIRST_CRASH_TYPE'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:08:50 2021 -0600", "msg": "1638256130.072139_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test['CRASH_TYPE'])", "+    print(test[test['CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    print(test['FIRST_CRASH_TYPE'])", "-    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY']['FIRST_CRASH_TYPE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256026.257226 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:07:09 2021 -0600", "msg": "1638256026.257226_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256026.257226 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+      print('Column: ', column)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:07:06 2021 -0600", "msg": "1638256026.257226_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+      print('Column: ', column)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256000.892258 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:06:44 2021 -0600", "msg": "1638256000.892258_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638256000.892258 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for column in df.columns:", "+      print('Missing Values -',df[column].isna().sum())", "+      print('---')"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:06:40 2021 -0600", "msg": "1638256000.892258_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    for column in df.columns:", "+      print('Missing Values -',df[column].isna().sum())", "+      print('---')"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255872.1496909 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:06:32 2021 -0600", "msg": "1638255872.1496909_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255872.1496909 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": [], "sub": ["-  # def check_inj1(df):", "-  #   if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_TOTAL']", "-", "-  # def check_inj2(df):", "-  #   if type(df['INJURIES_INCAPACITATING']) == float and pd.isna(df['INJURIES_INCAPACITATING']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_INCAPACITATING']", "-", "-  # def check_inj3(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-", "-  # def check_inj4(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-  # def check_inj4(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-  #     df['INJURIES_INCAPACITATING'] = 0", "-  #     df['INJURIES_NON_INCAPACITATING'] = 0", "-  #     df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "-  #     df['INJURIES_NO_INDICATION'] = 0"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:04:32 2021 -0600", "msg": "1638255872.1496909_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": [], "sub": ["-  # def check_inj1(df):", "-  #   if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_TOTAL']", "-", "-  # def check_inj2(df):", "-  #   if type(df['INJURIES_INCAPACITATING']) == float and pd.isna(df['INJURIES_INCAPACITATING']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_INCAPACITATING']", "-", "-  # def check_inj3(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-", "-  # def check_inj4(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-  # def check_inj4(df):", "-  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-  #     return 0", "-  #   else:", "-  #     return df['INJURIES_FATAL']", "-  #     df['INJURIES_INCAPACITATING'] = 0", "-  #     df['INJURIES_NON_INCAPACITATING'] = 0", "-  #     df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "-  #     df['INJURIES_NO_INDICATION'] = 0"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255853.509204 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:04:16 2021 -0600", "msg": "1638255853.509204_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255853.509204 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test['FIRST_CRASH_TYPE'])"], "sub": ["-    print(test)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:04:13 2021 -0600", "msg": "1638255853.509204_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test['FIRST_CRASH_TYPE'])"], "sub": ["-    print(test)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255844.4717598 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:04:07 2021 -0600", "msg": "1638255844.4717598_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255844.4717598 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:04:04 2021 -0600", "msg": "1638255844.4717598_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255812.1212428 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:03:35 2021 -0600", "msg": "1638255812.1212428_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255812.1212428 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY']['FIRST_CRASH_TYPE'])"], "sub": ["-    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:03:32 2021 -0600", "msg": "1638255812.1212428_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY']['FIRST_CRASH_TYPE'])"], "sub": ["-    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255782.381591 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:03:06 2021 -0600", "msg": "1638255782.381591_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255782.381591 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    test = df[df['INJURIES_TOTAL'].isnull()]", "+    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    print(df[df['INJURIES_TOTAL'].isnull()]['CRASH_TYPE'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:03:02 2021 -0600", "msg": "1638255782.381591_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    test = df[df['INJURIES_TOTAL'].isnull()]", "+    print(test[test['FIRST_CRASH_TYPE']!= 'NO INJURY / DRIVE AWAY'])"], "sub": ["-    print(df[df['INJURIES_TOTAL'].isnull()]['CRASH_TYPE'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255649.477803 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:00:56 2021 -0600", "msg": "1638255649.477803_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255649.477803 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df[df['INJURIES_TOTAL'].isnull()]['CRASH_TYPE'])"], "sub": ["-    print(df[df['INJURIES_TOTAL'].isnull()])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:00:49 2021 -0600", "msg": "1638255649.477803_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(df[df['INJURIES_TOTAL'].isnull()]['CRASH_TYPE'])"], "sub": ["-    print(df[df['INJURIES_TOTAL'].isnull()])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255602.260082 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:00:12 2021 -0600", "msg": "1638255602.260082_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638255602.260082 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('clean.csv')", "+    #cdf = clean(df)", "+    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "+    print(df[df['INJURIES_TOTAL'].isnull()])"], "sub": ["-    df = load('data_2.csv')", "-    cdf = clean(df)", "-    print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 01:00:02 2021 -0600", "msg": "1638255602.260082_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('clean.csv')", "+    #cdf = clean(df)", "+    #print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])", "+    print(df[df['INJURIES_TOTAL'].isnull()])"], "sub": ["-    df = load('data_2.csv')", "-    cdf = clean(df)", "-    print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255390.4625468 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:58:21 2021 -0600", "msg": "1638255390.4625468_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255390.4625468 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"], "sub": ["-  df = df.drop(df[type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:56:30 2021 -0600", "msg": "1638255390.4625468_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"], "sub": ["-  df = df.drop(df[type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255246.285818 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:54:09 2021 -0600", "msg": "1638255246.285818_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255246.285818 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"], "sub": ["-  df = df.drop(df[(type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:54:06 2021 -0600", "msg": "1638255246.285818_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna() & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"], "sub": ["-  df = df.drop(df[(type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255199.1329348 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:53:23 2021 -0600", "msg": "1638255199.1329348_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638255199.1329348 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[(type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  #change minimum speed limit to 15", "+  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+  # def check_inj1(df):", "+  #   if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_TOTAL']", "+", "+  # def check_inj2(df):", "+  #   if type(df['INJURIES_INCAPACITATING']) == float and pd.isna(df['INJURIES_INCAPACITATING']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_INCAPACITATING']", "+", "+  # def check_inj3(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+", "+  # def check_inj4(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+  # def check_inj4(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+  #     df['INJURIES_INCAPACITATING'] = 0", "+  #     df['INJURIES_NON_INCAPACITATING'] = 0", "+  #     df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "+  #     df['INJURIES_NO_INDICATION'] = 0", "+", "+", "+", "+", "+  #df = df.apply(check_misc, axis = 1)", "+  #df = df.dropna(subset=['INJURIES_TOTAL'])", "+"], "sub": ["-  #df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-  # df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "-  # #change minimum speed limit to 15", "-  # df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "-  def check_misc(df):", "-    if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-      df['INJURIES_TOTAL'] = 0", "-      df['INJURIES_FATAL'] = 0", "-      df['INJURIES_INCAPACITATING'] = 0", "-      df['INJURIES_NON_INCAPACITATING'] = 0", "-      df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "-      df['INJURIES_NO_INDICATION'] = 0", "-    if df['POSTED_SPEED_LIMIT'] < 15:", "-      df['POSTED_SPEED_LIMIT'] =15", "-    if df['ROAD_DEFECT'] == 'UNKNOWN':", "-      df['ROAD_DEFECT'] = 'NO DEFECTS'", "-  df = df.apply(check_misc, axis = 1)", "-"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Tue Nov 30 00:53:19 2021 -0600", "msg": "1638255199.1329348_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[(type(df['INJURIES_TOTAL']) == float & df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  #change minimum speed limit to 15", "+  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+  # def check_inj1(df):", "+  #   if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_TOTAL']", "+", "+  # def check_inj2(df):", "+  #   if type(df['INJURIES_INCAPACITATING']) == float and pd.isna(df['INJURIES_INCAPACITATING']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_INCAPACITATING']", "+", "+  # def check_inj3(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+", "+  # def check_inj4(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+  # def check_inj4(df):", "+  #   if type(df['INJURIES_FATAL']) == float and pd.isna(df['INJURIES_FATAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+  #     return 0", "+  #   else:", "+  #     return df['INJURIES_FATAL']", "+  #     df['INJURIES_INCAPACITATING'] = 0", "+  #     df['INJURIES_NON_INCAPACITATING'] = 0", "+  #     df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "+  #     df['INJURIES_NO_INDICATION'] = 0", "+", "+", "+", "+", "+  #df = df.apply(check_misc, axis = 1)", "+  #df = df.dropna(subset=['INJURIES_TOTAL'])", "+"], "sub": ["-  #df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-  # df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "-  # #change minimum speed limit to 15", "-  # df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "-  def check_misc(df):", "-    if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "-      df['INJURIES_TOTAL'] = 0", "-      df['INJURIES_FATAL'] = 0", "-      df['INJURIES_INCAPACITATING'] = 0", "-      df['INJURIES_NON_INCAPACITATING'] = 0", "-      df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "-      df['INJURIES_NO_INDICATION'] = 0", "-    if df['POSTED_SPEED_LIMIT'] < 15:", "-      df['POSTED_SPEED_LIMIT'] =15", "-    if df['ROAD_DEFECT'] == 'UNKNOWN':", "-      df['ROAD_DEFECT'] = 'NO DEFECTS'", "-  df = df.apply(check_misc, axis = 1)", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144926.7985458 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:17:36 2021 -0600", "msg": "1638144926.7985458_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144926.7985458 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  #df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+    if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"], "sub": ["-  df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-    if df['INJURIES_TOTAL'].isna() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:15:26 2021 -0600", "msg": "1638144926.7985458_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  #df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+    if type(df['INJURIES_TOTAL']) == float and pd.isna(df['INJURIES_TOTAL']) and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"], "sub": ["-  df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-    if df['INJURIES_TOTAL'].isna() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144653.897542 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:12:42 2021 -0600", "msg": "1638144653.897542_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144653.897542 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+    if df['INJURIES_TOTAL'].isna() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"], "sub": ["-  df = df.drop(df[(df['INJURIES_TOTAL'].isnull()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-    if df['INJURIES_TOTAL'].isnull() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:10:53 2021 -0600", "msg": "1638144653.897542_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.drop(df[(df['INJURIES_TOTAL'].isna()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+    if df['INJURIES_TOTAL'].isna() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"], "sub": ["-  df = df.drop(df[(df['INJURIES_TOTAL'].isnull()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "-    if df['INJURIES_TOTAL'].isnull() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144231.2187788 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:05:36 2021 -0600", "msg": "1638144231.2187788_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638144231.2187788 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df = df.drop(df[(df['INJURIES_TOTAL'].isnull()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+  #lambda fxns give error so will use apply", "+  # df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  # #change minimum speed limit to 15", "+  # df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+", "+  def check_misc(df):", "+    if df['INJURIES_TOTAL'].isnull() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+      df['INJURIES_TOTAL'] = 0", "+      df['INJURIES_FATAL'] = 0", "+      df['INJURIES_INCAPACITATING'] = 0", "+      df['INJURIES_NON_INCAPACITATING'] = 0", "+      df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "+      df['INJURIES_NO_INDICATION'] = 0", "+    if df['POSTED_SPEED_LIMIT'] < 15:", "+      df['POSTED_SPEED_LIMIT'] =15", "+    if df['ROAD_DEFECT'] == 'UNKNOWN':", "+      df['ROAD_DEFECT'] = 'NO DEFECTS'", "+  df = df.apply(check_misc, axis = 1)", "+  print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"], "sub": ["-  #change minimum speed limit to 15", "-  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "-  #Has warning so will modify", "-  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 18:03:51 2021 -0600", "msg": "1638144231.2187788_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+", "+  df = df.drop(df[(df['INJURIES_TOTAL'].isnull()) & (df['CRASH_TYPE'] != \"NO INJURY / DRIVE AWAY\")].index)", "+  #lambda fxns give error so will use apply", "+  # df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  # #change minimum speed limit to 15", "+  # df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+", "+  def check_misc(df):", "+    if df['INJURIES_TOTAL'].isnull() and df['CRASH_TYPE'] == 'NO INJURY / DRIVE AWAY':", "+      df['INJURIES_TOTAL'] = 0", "+      df['INJURIES_FATAL'] = 0", "+      df['INJURIES_INCAPACITATING'] = 0", "+      df['INJURIES_NON_INCAPACITATING'] = 0", "+      df['INJURIES_REPORTED_NOT_EVIDENT'] = 0", "+      df['INJURIES_NO_INDICATION'] = 0", "+    if df['POSTED_SPEED_LIMIT'] < 15:", "+      df['POSTED_SPEED_LIMIT'] =15", "+    if df['ROAD_DEFECT'] == 'UNKNOWN':", "+      df['ROAD_DEFECT'] = 'NO DEFECTS'", "+  df = df.apply(check_misc, axis = 1)", "+  print('injuries', len(df[df['INJURIES_TOTAL'].isnull()]))"], "sub": ["-  #change minimum speed limit to 15", "-  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "-  #Has warning so will modify", "-  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142824.825494 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:40:28 2021 -0600", "msg": "1638142824.825494_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142824.825494 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df.drop(df[(df['INJURIES_NO_INDICATION'] == 61)].index)"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:40:24 2021 -0600", "msg": "1638142824.825494_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df = df.drop(df[(df['INJURIES_NO_INDICATION'] == 61)].index)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142475.879958 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:34:38 2021 -0600", "msg": "1638142475.879958_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142475.879958 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for column in ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "+  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION', \\", "+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']:"], "sub": ["-  for column in df.loc[:, ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "-  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION' \\", "-  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']]:"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:34:35 2021 -0600", "msg": "1638142475.879958_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for column in ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "+  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION', \\", "+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']:"], "sub": ["-  for column in df.loc[:, ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "-  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION' \\", "-  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']]:"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142221.942359 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:30:25 2021 -0600", "msg": "1638142221.942359_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638142221.942359 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for column in df.loc[:, ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "+  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION' \\", "+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']]:"], "sub": ["-  for column in df.columns:"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:30:22 2021 -0600", "msg": "1638142221.942359_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  for column in df.loc[:, ['POSTED_SPEED_LIMIT', 'NUM_UNITS', 'INJURIES_TOTAL', 'INJURIES_FATAL', \\", "+  'INJURIES_INCAPACITATING', 'INJURIES_NON_INCAPACITATING', 'INJURIES_REPORTED_NOT_EVIDENT', 'INJURIES_NO_INDICATION' \\", "+  'CRASH_HOUR', 'CRASH_DAY_OF_WEEK', 'CRASH_MONTH']]:"], "sub": ["-  for column in df.columns:"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638141602.080373 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:20:46 2021 -0600", "msg": "1638141602.080373_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638141602.080373 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+  print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+  print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+  print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+  for column in df.columns:", "+    print('Column: ', column)", "+    print('Mean -',df[column].mean())", "+    print('STD -',df[column].std())", "+    print('Range -',df[column].min(), df[column].max())", "+    print('Missing Values -',df[column].isna().sum())", "+    print('---')"], "sub": ["-  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:20:02 2021 -0600", "msg": "1638141602.080373_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+  print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+  print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+  print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))", "+  for column in df.columns:", "+    print('Column: ', column)", "+    print('Mean -',df[column].mean())", "+    print('STD -',df[column].std())", "+    print('Range -',df[column].min(), df[column].max())", "+    print('Missing Values -',df[column].isna().sum())", "+    print('---')"], "sub": ["-  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638141195.796305 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:15:08 2021 -0600", "msg": "1638141195.796305_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638141195.796305 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:13:15 2021 -0600", "msg": "1638141195.796305_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  print('speed_limit', len(df[df['POSTED_SPEED_LIMIT'] < 15]))"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+"], "sub": ["-  #df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "-  def check_road_defect(df):", "-    if df['ROAD_DEFECT'] == 'UNKNOWN':", "-      return 'NO DEFECTS'", "-    else:", "-      return df['ROAD_DEFECT']", "-  df['ROAD_DEFECT'] = df.apply(check_road_defect, axis = 1)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:11:37 2021 -0600", "msg": "1638141097.8773_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+"], "sub": ["-  #df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "-  def check_road_defect(df):", "-    if df['ROAD_DEFECT'] == 'UNKNOWN':", "-      return 'NO DEFECTS'", "-    else:", "-      return df['ROAD_DEFECT']", "-  df['ROAD_DEFECT'] = df.apply(check_road_defect, axis = 1)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638140659.157977 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:06:21 2021 -0600", "msg": "1638140659.157977_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638140659.157977 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  #Has warning so will modify", "+  #df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  def check_road_defect(df):", "+    if df['ROAD_DEFECT'] == 'UNKNOWN':", "+      return 'NO DEFECTS'", "+    else:", "+      return df['ROAD_DEFECT']", "+  df['ROAD_DEFECT'] = df.apply(check_road_defect, axis = 1)", "+"], "sub": ["-", "-  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638140540.303691 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:04:11 2021 -0600", "msg": "1638140540.303691_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , False, 1638140540.303691 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140509.3367648 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:01:52 2021 -0600", "msg": "1638140509.3367648_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140509.3367648 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])"], "sub": ["-    print(cdf)"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:01:49 2021 -0600", "msg": "1638140509.3367648_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(cdf[cdf['ROAD_DEFECT'] == 'UNKNOWN'])"], "sub": ["-    print(cdf)"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140469.842935 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:01:12 2021 -0600", "msg": "1638140469.842935_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140469.842935 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(cdf)", "+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    plot(cdf)", "-    plt.show()"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 17:01:09 2021 -0600", "msg": "1638140469.842935_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    print(cdf)", "+    # plot(cdf)", "+    # plt.show()"], "sub": ["-    plot(cdf)", "-    plt.show()"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140396.873085 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:59:59 2021 -0600", "msg": "1638140396.873085_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140396.873085 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')"], "sub": ["-    df = load('data.csv')"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:59:56 2021 -0600", "msg": "1638140396.873085_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+    df = load('data_2.csv')"], "sub": ["-    df = load('data.csv')"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140381.6301959 , error_code: 1"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:59:42 2021 -0600", "msg": "1638140381.6301959_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+scratch.py , True, 1638140381.6301959 , error_code: 1"], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"], "sub": ["-"]}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:59:41 2021 -0600", "msg": "1638140381.6301959_start"}, {"diffs": [{"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)"], "sub": ["-"]}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638139871.858933 , error_code: 0"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:53:02 2021 -0600", "msg": "1638139871.858933_end"}, {"diffs": [{"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": ["+load.py , True, 1638139871.858933 , error_code: 0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.dropna(subset=['LONGITUDE'])", "+  #change minimum speed limit to 15", "+  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+  #Remove rows where both weather and lighting conditons are unknown", "+  df = df.drop(df[(df['WEATHER_CONDITION'] == 'UNKNOWN') & (df['LIGHTING_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['ROAD_DEFECT'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['WEATHER_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['WEATHER_CONDITION'] == \"OTHER\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'OTHER') & (df['WEATHER_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  #change semantic errors for dawn and dusk and daylight. setting boundaries from 8 to 16 as daylight and dawn after that", "+", "+  def check_light(df):", "+    if 8<= df['CRASH_HOUR'] <= 16 and df['WEATHER_CONDITION'] == \"CLEAR\" and df['LIGHTING_CONDITION'] != 'DAYLIGHT':", "+      return 'DAYLIGHT'", "+    if (df['CRASH_HOUR'] > 7 or df['CRASH_HOUR'] < 5) and df['LIGHTING_CONDITION'] == 'DAWN':", "+      return 'DARKNESS'", "+    if (df['CRASH_HOUR'] < 16 or df['CRASH_HOUR'] > 20) and df['LIGHTING_CONDITION'] == 'DUSK':", "+      return 'DARKNESS'", "+    if (df['CRASH_HOUR'] > 20 or df['CRASH_HOUR'] < 7) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DARKNESS'", "+    if (8 <= df['CRASH_HOUR'] <= 16) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DAYLIGHT'", "+    if (5 <= df['CRASH_HOUR'] <= 7) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DAWN'", "+    if (16 <= df['CRASH_HOUR'] <= 20) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DUSK'", "+    return df['LIGHTING_CONDITION']", "+  def check_weather(df):", "+    if (df['ROADWAY_SURFACE_COND'] == 'DRY' or df['ROADWAY_SURFACE_COND'] == 'SAND, MUD, DIRT') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'CLEAR'", "+    if (df['ROADWAY_SURFACE_COND'] == 'WET') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'RAIN'", "+    if (df['ROADWAY_SURFACE_COND'] == 'SNOW OR SLUSH' or df['ROADWAY_SURFACE_COND'] == 'ICE') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'SNOW'", "+    return df['WEATHER_CONDITION']", "+  def check_road(df):", "+    if (df['ROADWAY_SURFACE_COND'] == 'UNKNOWN'):", "+      if (df['WEATHER_CONDITION'] == 'CLEAR' or df['WEATHER_CONDITION'] == 'CLOUDY/OVERCAST' or df['WEATHER_CONDITION'] == 'FOG/SMOKE/HAZE'):", "+        return 'DRY'", "+      if df['WEATHER_CONDITION'] == 'RAIN':", "+        return 'WET'", "+      if df['WEATHER_CONDITION'] == 'SNOW' or df['WEATHER_CONDITION'] == 'SLEET/HAIL' or df['WEATHER_CONDITION'] == 'BLOWING SNOW':", "+        return 'SNOW OR SLUSH'", "+      if df['WEATHER_CONDITION'] == 'FREEZING RAIN/DRIZZLE':", "+        return 'ICE'", "+    return df['ROADWAY_SURFACE_COND']", "+  df['LIGHTING_CONDITION'] = df.apply(check_light, axis = 1)", "+  df['WEATHER_CONDITION'] = df.apply(check_weather, axis = 1)", "+  df['ROADWAY_SURFACE_COND'] = df.apply(check_road, axis = 1)", "+", "+  print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+  print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+  print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+  print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))"], "sub": []}], "author": "Seha Choi <samseha@Sehas-MacBook-Pro.local>", "date": "Sun Nov 28 16:51:11 2021 -0600", "msg": "1638139871.858933_start"}, {"diffs": [{"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+  df = df.dropna(subset=['LONGITUDE'])", "+  #change minimum speed limit to 15", "+  df['POSTED_SPEED_LIMIT'] = df['POSTED_SPEED_LIMIT'].apply(lambda x: 15 if x < 15 else x)", "+  #Remove rows where both weather and lighting conditons are unknown", "+  df = df.drop(df[(df['WEATHER_CONDITION'] == 'UNKNOWN') & (df['LIGHTING_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['ROAD_DEFECT'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['WEATHER_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'UNKNOWN') & (df['WEATHER_CONDITION'] == \"OTHER\")].index)", "+", "+  df = df.drop(df[(df['ROADWAY_SURFACE_COND'] == 'OTHER') & (df['WEATHER_CONDITION'] == \"UNKNOWN\")].index)", "+", "+  df['ROAD_DEFECT'] = df['ROAD_DEFECT'].apply(lambda x: 'NO DEFECTS' if x == 'UNKNOWN' else x)", "+  #change semantic errors for dawn and dusk and daylight. setting boundaries from 8 to 16 as daylight and dawn after that", "+", "+  def check_light(df):", "+    if 8<= df['CRASH_HOUR'] <= 16 and df['WEATHER_CONDITION'] == \"CLEAR\" and df['LIGHTING_CONDITION'] != 'DAYLIGHT':", "+      return 'DAYLIGHT'", "+    if (df['CRASH_HOUR'] > 7 or df['CRASH_HOUR'] < 5) and df['LIGHTING_CONDITION'] == 'DAWN':", "+      return 'DARKNESS'", "+    if (df['CRASH_HOUR'] < 16 or df['CRASH_HOUR'] > 20) and df['LIGHTING_CONDITION'] == 'DUSK':", "+      return 'DARKNESS'", "+    if (df['CRASH_HOUR'] > 20 or df['CRASH_HOUR'] < 7) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DARKNESS'", "+    if (8 <= df['CRASH_HOUR'] <= 16) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DAYLIGHT'", "+    if (5 <= df['CRASH_HOUR'] <= 7) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DAWN'", "+    if (16 <= df['CRASH_HOUR'] <= 20) and df['LIGHTING_CONDITION'] == 'UNKNOWN':", "+      return 'DUSK'", "+    return df['LIGHTING_CONDITION']", "+  def check_weather(df):", "+    if (df['ROADWAY_SURFACE_COND'] == 'DRY' or df['ROADWAY_SURFACE_COND'] == 'SAND, MUD, DIRT') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'CLEAR'", "+    if (df['ROADWAY_SURFACE_COND'] == 'WET') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'RAIN'", "+    if (df['ROADWAY_SURFACE_COND'] == 'SNOW OR SLUSH' or df['ROADWAY_SURFACE_COND'] == 'ICE') and df['WEATHER_CONDITION'] == 'UNKNOWN':", "+      return 'SNOW'", "+    return df['WEATHER_CONDITION']", "+  def check_road(df):", "+    if (df['ROADWAY_SURFACE_COND'] == 'UNKNOWN'):", "+      if (df['WEATHER_CONDITION'] == 'CLEAR' or df['WEATHER_CONDITION'] == 'CLOUDY/OVERCAST' or df['WEATHER_CONDITION'] == 'FOG/SMOKE/HAZE'):", "+        return 'DRY'", "+      if df['WEATHER_CONDITION'] == 'RAIN':", "+        return 'WET'", "+      if df['WEATHER_CONDITION'] == 'SNOW' or df['WEATHER_CONDITION'] == 'SLEET/HAIL' or df['WEATHER_CONDITION'] == 'BLOWING SNOW':", "+        return 'SNOW OR SLUSH'", "+      if df['WEATHER_CONDITION'] == 'FREEZING RAIN/DRIZZLE':", "+        return 'ICE'", "+    return df['ROADWAY_SURFACE_COND']", "+  df['LIGHTING_CONDITION'] = df.apply(check_light, axis = 1)", "+  df['WEATHER_CONDITION'] = df.apply(check_weather, axis = 1)", "+  df['ROADWAY_SURFACE_COND'] = df.apply(check_road, axis = 1)", "+", "+  print('weather',len(df[df['WEATHER_CONDITION'] == 'UNKNOWN']))", "+  print('light',len(df[df['LIGHTING_CONDITION'] == 'UNKNOWN']))", "+  print('roadway',len(df[df['ROAD_DEFECT'] == 'UNKNOWN']))", "+  print('defect',len(df[df['ROADWAY_SURFACE_COND'] == 'UNKNOWN']))"], "sub": []}, {"files": "diff --git a/.DS_Store b/.DS_Store", "add": [], "sub": []}, {"files": "diff --git a/.gitignore b/.gitignore", "add": ["+*.csv"], "sub": []}, {"files": "diff --git a/README.md b/README.md", "add": ["+# README", "+", "+cnet_id: #", "+", "+name: #"], "sub": []}, {"files": "diff --git a/explore/data.csv b/explore/data.csv", "add": ["+A,B", "+1,2", "+3,4", "+5,0"], "sub": []}, {"files": "diff --git a/explore/load.py b/explore/load.py", "add": ["+'''load.py Load loads the dataset, cleans it, and generates a new clean", "+csv file.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+", "+", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data_2.csv')", "+    cdf = clean(df)", "+    cdf.to_csv('clean.csv')"], "sub": []}, {"files": "diff --git a/explore/plot_2.py b/explore/plot_2.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_2.png')"], "sub": []}, {"files": "diff --git a/explore/plot_3.py b/explore/plot_3.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_3.png')"], "sub": []}, {"files": "diff --git a/explore/plot_4.py b/explore/plot_4.py", "add": ["+'''plot.py Plot loads data from the clean csv file and produces a plot that is saved.", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+if __name__ == \"__main__\":", "+    cdf = pd.read_csv('clean.csv')", "+    plot(cdf)", "+    plt.savefig('plot_4.png')"], "sub": []}, {"files": "diff --git a/explore/run.py b/explore/run.py", "add": ["+\"\"\"This python program executes your code", "+\"\"\"", "+", "+from git import Repo", "+import os", "+import time", "+import sys", "+import subprocess", "+", "+", "+#advanced feature change at your own risk", "+COMPILER_COMMAND = 'python' # replace with whatever usually used in the commandline ex. python3", "+", "+", "+", "+def check_diff(repo):", "+    hcommit = repo.head.commit", "+", "+    diffs = hcommit.diff(None)", "+", "+    if len(diffs) == 0:", "+        return False", "+    else:", "+        return True", "+", "+", "+def add_commit(id, check_changed = True, push = True):", "+    \"\"\"", "+    Add current changes and commit", "+    \"\"\"", "+    # need to check if anything in repo has changed", "+    repo = Repo(os.path.dirname(os.getcwd())) #changed to look at the parent", "+", "+    if check_changed:", "+        changed = check_diff(repo)", "+    else:", "+        changed = True", "+", "+    if changed:", "+        repo.git.add('.')", "+", "+        repo.git.commit('-m', id)", "+        if push:", "+            repo.remotes.origin.push()", "+        return changed", "+", "+    else:", "+        return changed", "+", "+", "+if __name__ == '__main__':", "+", "+    ##error checking", "+    if len(sys.argv) == 1:", "+        print(\"You must run the program as follows:\\n python run.py scratch.py \\n or \\n python run.py load.py \\n or \\n python run.py plot.py\")", "+        exit()", "+", "+", "+    id = str(time.time())", "+    committed = add_commit(id + '_start', push = False)", "+", "+    command = [COMPILER_COMMAND] + sys.argv[1:]", "+", "+    process = subprocess.run(command)", "+", "+    with open('./runs.txt', 'a') as f:", "+        record = '{} , {}, {} , error_code: {} \\n'.format(sys.argv[1], committed, id, process.returncode)", "+        f.write(record)", "+", "+    add_commit(id + '_end', check_changed = False, push=True)"], "sub": []}, {"files": "diff --git a/explore/runs.txt b/explore/runs.txt", "add": [], "sub": []}, {"files": "diff --git a/explore/scratch.py b/explore/scratch.py", "add": ["+'''scratch.py", "+", "+You will write down any \"scratch\" code that you use to explore the dataset in", "+this file. This code does not produce any outputs (it does not modify any files)", "+but allows you to explore the data. We're separating this code from the rest because", "+it allows us to understand your thought process during data exploration.", "+", "+*Remember to replace the return statements with your code*", "+'''", "+", "+#standard imports", "+import pandas as pd", "+import matplotlib.pyplot as plt", "+", "+", "+#TODO 1.", "+def load(filename):", "+  '''load(filename) takes as input a filename and loads a dataframe.", "+  '''", "+  return pd.read_csv(filename) #demo", "+", "+def clean(df):", "+  '''clean(df) takes as input a dataframe and fixes any data errors", "+     *that might affect your results*. it returns a copy of the dataframe", "+     without errors.", "+  '''", "+", "+  return df #demo", "+", "+", "+#TODO 2.", "+def plot(df):", "+  '''plot(df) takes as input a clean dataframe and generates a plot. The", "+  style of the plot and variables are up to you.", "+  '''", "+", "+  plt.scatter(df['A'],df['B'])", "+  return None", "+", "+", "+", "+#The main() function  of this program", "+", "+if __name__ == \"__main__\":", "+    df = load('data.csv')", "+    cdf = clean(df)", "+    plot(cdf)", "+    plt.show()", "+", "+"], "sub": []}, {"files": "diff --git a/requirements.txt b/requirements.txt", "add": ["+appnope==0.1.2", "+argon2-cffi==20.1.0", "+async-generator==1.10", "+attrs==21.2.0", "+backcall==0.2.0", "+bitstring==3.1.9", "+bleach==3.3.0", "+cffi==1.14.5", "+click==8.0.0", "+cloudpickle==1.6.0", "+cycler==0.10.0", "+dask==2021.4.1", "+decorator==5.0.7", "+defusedxml==0.7.1", "+distributed==2021.4.1", "+entrypoints==0.3", "+fsspec==2021.5.0", "+gitdb==4.0.9", "+GitPython==3.1.24", "+graphviz==0.16", "+HeapDict==1.0.1", "+ipykernel==5.5.5", "+ipython==7.23.1", "+ipython-genutils==0.2.0", "+ipywidgets==7.6.3", "+jedi==0.18.0", "+Jinja2==3.0.0", "+joblib==1.0.1", "+jsonschema==3.2.0", "+jupyter==1.0.0", "+jupyter-client==6.1.12", "+jupyter-console==6.4.0", "+jupyter-core==4.7.1", "+jupyterlab-pygments==0.1.2", "+jupyterlab-widgets==1.0.0", "+kiwisolver==1.3.1", "+locket==0.2.1", "+MarkupSafe==2.0.0", "+matplotlib==3.4.2", "+matplotlib-inline==0.1.2", "+mistune==0.8.4", "+msgpack==1.0.2", "+nbclient==0.5.3", "+nbconvert==6.0.7", "+nbformat==5.1.3", "+nest-asyncio==1.5.1", "+notebook==6.3.0", "+numpy==1.20.3", "+packaging==20.9", "+pandas==1.2.4", "+pandocfilters==1.4.3", "+parso==0.8.2", "+partd==1.2.0", "+pexpect==4.8.0", "+pickleshare==0.7.5", "+Pillow==8.2.0", "+prometheus-client==0.10.1", "+prompt-toolkit==3.0.18", "+psutil==5.8.0", "+ptyprocess==0.7.0", "+pycparser==2.20", "+Pygments==2.9.0", "+pyparsing==2.4.7", "+pyrsistent==0.17.3", "+python-dateutil==2.8.1", "+pytz==2021.1", "+PyYAML==5.4.1", "+pyzmq==22.0.3", "+qtconsole==5.1.0", "+QtPy==1.9.0", "+scikit-learn==0.24.2", "+scipy==1.6.3", "+Send2Trash==1.5.0", "+six==1.16.0", "+sklearn==0.0", "+smmap==5.0.0", "+sortedcontainers==2.3.0", "+tblib==1.7.0", "+terminado==0.9.5", "+testpath==0.4.4", "+threadpoolctl==2.1.0", "+toolz==0.11.1", "+tornado==6.1", "+traitlets==5.0.5", "+typing-extensions==3.10.0.2", "+wcwidth==0.2.5", "+webencodings==0.5.1", "+widgetsnbextension==3.5.1", "+zict==2.0.0"], "sub": []}], "author": "github-classroom[bot] <66690702+github-classroom[bot]@users.noreply.github.com>", "date": "Mon Nov 22 18:40:35 2021 +0000", "msg": "Initial commit"}]